//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.CarDataUpdate.DataProcesser.com.bitauto.price {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MaintainServiceSoap", Namespace="http://bitauto.maintain/")]
    public partial class MaintainService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMaintainCycByCsIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainCycByCsIdAndCsYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainCycByCsIdAndDealerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainCycByCarIdAndDealerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainPriceScopeByCsIdAndCsYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainPriceScopeByCsIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCSMaintainListByCsIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainCycByCsIdAndCSMIIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainItemListByCsIDSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContrastMaintainCycByCsIdsAndMIIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMaintainInfoByCarIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MaintainService() {
            this.Url = global::BitAuto.CarDataUpdate.DataProcesser.Properties.Settings.Default.DataProcesser_com_bitauto_price_MaintainService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMaintainCycByCsIdCompletedEventHandler GetMaintainCycByCsIdCompleted;
        
        /// <remarks/>
        public event GetMaintainCycByCsIdAndCsYearCompletedEventHandler GetMaintainCycByCsIdAndCsYearCompleted;
        
        /// <remarks/>
        public event GetMaintainCycByCsIdAndDealerIdCompletedEventHandler GetMaintainCycByCsIdAndDealerIdCompleted;
        
        /// <remarks/>
        public event GetMaintainCycByCarIdAndDealerIdCompletedEventHandler GetMaintainCycByCarIdAndDealerIdCompleted;
        
        /// <remarks/>
        public event GetMaintainPriceScopeByCsIdAndCsYearCompletedEventHandler GetMaintainPriceScopeByCsIdAndCsYearCompleted;
        
        /// <remarks/>
        public event GetMaintainPriceScopeByCsIdCompletedEventHandler GetMaintainPriceScopeByCsIdCompleted;
        
        /// <remarks/>
        public event GetCSMaintainListByCsIdCompletedEventHandler GetCSMaintainListByCsIdCompleted;
        
        /// <remarks/>
        public event GetMaintainCycByCsIdAndCSMIIDCompletedEventHandler GetMaintainCycByCsIdAndCSMIIDCompleted;
        
        /// <remarks/>
        public event GetMaintainItemListByCsIDSCompletedEventHandler GetMaintainItemListByCsIDSCompleted;
        
        /// <remarks/>
        public event GetContrastMaintainCycByCsIdsAndMIIDsCompletedEventHandler GetContrastMaintainCycByCsIdsAndMIIDsCompleted;
        
        /// <remarks/>
        public event GetMaintainInfoByCarIdCompletedEventHandler GetMaintainInfoByCarIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainCycByCsId", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaintainCycByCsId(int csId) {
            object[] results = this.Invoke("GetMaintainCycByCsId", new object[] {
                        csId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAsync(int csId) {
            this.GetMaintainCycByCsIdAsync(csId, null);
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAsync(int csId, object userState) {
            if ((this.GetMaintainCycByCsIdOperationCompleted == null)) {
                this.GetMaintainCycByCsIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainCycByCsIdOperationCompleted);
            }
            this.InvokeAsync("GetMaintainCycByCsId", new object[] {
                        csId}, this.GetMaintainCycByCsIdOperationCompleted, userState);
        }
        
        private void OnGetMaintainCycByCsIdOperationCompleted(object arg) {
            if ((this.GetMaintainCycByCsIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainCycByCsIdCompleted(this, new GetMaintainCycByCsIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainCycByCsIdAndCsYear", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaintainCycByCsIdAndCsYear(int csId, short csYear) {
            object[] results = this.Invoke("GetMaintainCycByCsIdAndCsYear", new object[] {
                        csId,
                        csYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAndCsYearAsync(int csId, short csYear) {
            this.GetMaintainCycByCsIdAndCsYearAsync(csId, csYear, null);
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAndCsYearAsync(int csId, short csYear, object userState) {
            if ((this.GetMaintainCycByCsIdAndCsYearOperationCompleted == null)) {
                this.GetMaintainCycByCsIdAndCsYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainCycByCsIdAndCsYearOperationCompleted);
            }
            this.InvokeAsync("GetMaintainCycByCsIdAndCsYear", new object[] {
                        csId,
                        csYear}, this.GetMaintainCycByCsIdAndCsYearOperationCompleted, userState);
        }
        
        private void OnGetMaintainCycByCsIdAndCsYearOperationCompleted(object arg) {
            if ((this.GetMaintainCycByCsIdAndCsYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainCycByCsIdAndCsYearCompleted(this, new GetMaintainCycByCsIdAndCsYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainCycByCsIdAndDealerId", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaintainCycByCsIdAndDealerId(int csId, int dealerId, short csYear) {
            object[] results = this.Invoke("GetMaintainCycByCsIdAndDealerId", new object[] {
                        csId,
                        dealerId,
                        csYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAndDealerIdAsync(int csId, int dealerId, short csYear) {
            this.GetMaintainCycByCsIdAndDealerIdAsync(csId, dealerId, csYear, null);
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAndDealerIdAsync(int csId, int dealerId, short csYear, object userState) {
            if ((this.GetMaintainCycByCsIdAndDealerIdOperationCompleted == null)) {
                this.GetMaintainCycByCsIdAndDealerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainCycByCsIdAndDealerIdOperationCompleted);
            }
            this.InvokeAsync("GetMaintainCycByCsIdAndDealerId", new object[] {
                        csId,
                        dealerId,
                        csYear}, this.GetMaintainCycByCsIdAndDealerIdOperationCompleted, userState);
        }
        
        private void OnGetMaintainCycByCsIdAndDealerIdOperationCompleted(object arg) {
            if ((this.GetMaintainCycByCsIdAndDealerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainCycByCsIdAndDealerIdCompleted(this, new GetMaintainCycByCsIdAndDealerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainCycByCarIdAndDealerId", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaintainCycByCarIdAndDealerId(int carId, int dealerId) {
            object[] results = this.Invoke("GetMaintainCycByCarIdAndDealerId", new object[] {
                        carId,
                        dealerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainCycByCarIdAndDealerIdAsync(int carId, int dealerId) {
            this.GetMaintainCycByCarIdAndDealerIdAsync(carId, dealerId, null);
        }
        
        /// <remarks/>
        public void GetMaintainCycByCarIdAndDealerIdAsync(int carId, int dealerId, object userState) {
            if ((this.GetMaintainCycByCarIdAndDealerIdOperationCompleted == null)) {
                this.GetMaintainCycByCarIdAndDealerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainCycByCarIdAndDealerIdOperationCompleted);
            }
            this.InvokeAsync("GetMaintainCycByCarIdAndDealerId", new object[] {
                        carId,
                        dealerId}, this.GetMaintainCycByCarIdAndDealerIdOperationCompleted, userState);
        }
        
        private void OnGetMaintainCycByCarIdAndDealerIdOperationCompleted(object arg) {
            if ((this.GetMaintainCycByCarIdAndDealerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainCycByCarIdAndDealerIdCompleted(this, new GetMaintainCycByCarIdAndDealerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainPriceScopeByCsIdAndCsYear", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaintainPriceScopeByCsIdAndCsYear(int csId, short csYear) {
            object[] results = this.Invoke("GetMaintainPriceScopeByCsIdAndCsYear", new object[] {
                        csId,
                        csYear});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainPriceScopeByCsIdAndCsYearAsync(int csId, short csYear) {
            this.GetMaintainPriceScopeByCsIdAndCsYearAsync(csId, csYear, null);
        }
        
        /// <remarks/>
        public void GetMaintainPriceScopeByCsIdAndCsYearAsync(int csId, short csYear, object userState) {
            if ((this.GetMaintainPriceScopeByCsIdAndCsYearOperationCompleted == null)) {
                this.GetMaintainPriceScopeByCsIdAndCsYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainPriceScopeByCsIdAndCsYearOperationCompleted);
            }
            this.InvokeAsync("GetMaintainPriceScopeByCsIdAndCsYear", new object[] {
                        csId,
                        csYear}, this.GetMaintainPriceScopeByCsIdAndCsYearOperationCompleted, userState);
        }
        
        private void OnGetMaintainPriceScopeByCsIdAndCsYearOperationCompleted(object arg) {
            if ((this.GetMaintainPriceScopeByCsIdAndCsYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainPriceScopeByCsIdAndCsYearCompleted(this, new GetMaintainPriceScopeByCsIdAndCsYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainPriceScopeByCsId", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaintainPriceScopeByCsId(int csId) {
            object[] results = this.Invoke("GetMaintainPriceScopeByCsId", new object[] {
                        csId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainPriceScopeByCsIdAsync(int csId) {
            this.GetMaintainPriceScopeByCsIdAsync(csId, null);
        }
        
        /// <remarks/>
        public void GetMaintainPriceScopeByCsIdAsync(int csId, object userState) {
            if ((this.GetMaintainPriceScopeByCsIdOperationCompleted == null)) {
                this.GetMaintainPriceScopeByCsIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainPriceScopeByCsIdOperationCompleted);
            }
            this.InvokeAsync("GetMaintainPriceScopeByCsId", new object[] {
                        csId}, this.GetMaintainPriceScopeByCsIdOperationCompleted, userState);
        }
        
        private void OnGetMaintainPriceScopeByCsIdOperationCompleted(object arg) {
            if ((this.GetMaintainPriceScopeByCsIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainPriceScopeByCsIdCompleted(this, new GetMaintainPriceScopeByCsIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetCSMaintainListByCsId", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCSMaintainListByCsId(int csId, short csYear) {
            object[] results = this.Invoke("GetCSMaintainListByCsId", new object[] {
                        csId,
                        csYear});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCSMaintainListByCsIdAsync(int csId, short csYear) {
            this.GetCSMaintainListByCsIdAsync(csId, csYear, null);
        }
        
        /// <remarks/>
        public void GetCSMaintainListByCsIdAsync(int csId, short csYear, object userState) {
            if ((this.GetCSMaintainListByCsIdOperationCompleted == null)) {
                this.GetCSMaintainListByCsIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCSMaintainListByCsIdOperationCompleted);
            }
            this.InvokeAsync("GetCSMaintainListByCsId", new object[] {
                        csId,
                        csYear}, this.GetCSMaintainListByCsIdOperationCompleted, userState);
        }
        
        private void OnGetCSMaintainListByCsIdOperationCompleted(object arg) {
            if ((this.GetCSMaintainListByCsIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCSMaintainListByCsIdCompleted(this, new GetCSMaintainListByCsIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainCycByCsIdAndCSMIID", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMaintainCycByCsIdAndCSMIID(int csId, short csYear, int[] csMIIds) {
            object[] results = this.Invoke("GetMaintainCycByCsIdAndCSMIID", new object[] {
                        csId,
                        csYear,
                        csMIIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAndCSMIIDAsync(int csId, short csYear, int[] csMIIds) {
            this.GetMaintainCycByCsIdAndCSMIIDAsync(csId, csYear, csMIIds, null);
        }
        
        /// <remarks/>
        public void GetMaintainCycByCsIdAndCSMIIDAsync(int csId, short csYear, int[] csMIIds, object userState) {
            if ((this.GetMaintainCycByCsIdAndCSMIIDOperationCompleted == null)) {
                this.GetMaintainCycByCsIdAndCSMIIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainCycByCsIdAndCSMIIDOperationCompleted);
            }
            this.InvokeAsync("GetMaintainCycByCsIdAndCSMIID", new object[] {
                        csId,
                        csYear,
                        csMIIds}, this.GetMaintainCycByCsIdAndCSMIIDOperationCompleted, userState);
        }
        
        private void OnGetMaintainCycByCsIdAndCSMIIDOperationCompleted(object arg) {
            if ((this.GetMaintainCycByCsIdAndCSMIIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainCycByCsIdAndCSMIIDCompleted(this, new GetMaintainCycByCsIdAndCSMIIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainItemListByCsIDS", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMaintainItemListByCsIDS(string[] csIds) {
            object[] results = this.Invoke("GetMaintainItemListByCsIDS", new object[] {
                        csIds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainItemListByCsIDSAsync(string[] csIds) {
            this.GetMaintainItemListByCsIDSAsync(csIds, null);
        }
        
        /// <remarks/>
        public void GetMaintainItemListByCsIDSAsync(string[] csIds, object userState) {
            if ((this.GetMaintainItemListByCsIDSOperationCompleted == null)) {
                this.GetMaintainItemListByCsIDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainItemListByCsIDSOperationCompleted);
            }
            this.InvokeAsync("GetMaintainItemListByCsIDS", new object[] {
                        csIds}, this.GetMaintainItemListByCsIDSOperationCompleted, userState);
        }
        
        private void OnGetMaintainItemListByCsIDSOperationCompleted(object arg) {
            if ((this.GetMaintainItemListByCsIDSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainItemListByCsIDSCompleted(this, new GetMaintainItemListByCsIDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetContrastMaintainCycByCsIdsAndMIIDs", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContrastMaintainCycByCsIdsAndMIIDs(string[] csIds, int[] miIds) {
            object[] results = this.Invoke("GetContrastMaintainCycByCsIdsAndMIIDs", new object[] {
                        csIds,
                        miIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContrastMaintainCycByCsIdsAndMIIDsAsync(string[] csIds, int[] miIds) {
            this.GetContrastMaintainCycByCsIdsAndMIIDsAsync(csIds, miIds, null);
        }
        
        /// <remarks/>
        public void GetContrastMaintainCycByCsIdsAndMIIDsAsync(string[] csIds, int[] miIds, object userState) {
            if ((this.GetContrastMaintainCycByCsIdsAndMIIDsOperationCompleted == null)) {
                this.GetContrastMaintainCycByCsIdsAndMIIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContrastMaintainCycByCsIdsAndMIIDsOperationCompleted);
            }
            this.InvokeAsync("GetContrastMaintainCycByCsIdsAndMIIDs", new object[] {
                        csIds,
                        miIds}, this.GetContrastMaintainCycByCsIdsAndMIIDsOperationCompleted, userState);
        }
        
        private void OnGetContrastMaintainCycByCsIdsAndMIIDsOperationCompleted(object arg) {
            if ((this.GetContrastMaintainCycByCsIdsAndMIIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContrastMaintainCycByCsIdsAndMIIDsCompleted(this, new GetContrastMaintainCycByCsIdsAndMIIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://bitauto.maintain/GetMaintainInfoByCarId", RequestNamespace="http://bitauto.maintain/", ResponseNamespace="http://bitauto.maintain/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMaintainInfoByCarId(int carId) {
            object[] results = this.Invoke("GetMaintainInfoByCarId", new object[] {
                        carId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMaintainInfoByCarIdAsync(int carId) {
            this.GetMaintainInfoByCarIdAsync(carId, null);
        }
        
        /// <remarks/>
        public void GetMaintainInfoByCarIdAsync(int carId, object userState) {
            if ((this.GetMaintainInfoByCarIdOperationCompleted == null)) {
                this.GetMaintainInfoByCarIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMaintainInfoByCarIdOperationCompleted);
            }
            this.InvokeAsync("GetMaintainInfoByCarId", new object[] {
                        carId}, this.GetMaintainInfoByCarIdOperationCompleted, userState);
        }
        
        private void OnGetMaintainInfoByCarIdOperationCompleted(object arg) {
            if ((this.GetMaintainInfoByCarIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMaintainInfoByCarIdCompleted(this, new GetMaintainInfoByCarIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainCycByCsIdCompletedEventHandler(object sender, GetMaintainCycByCsIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainCycByCsIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainCycByCsIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainCycByCsIdAndCsYearCompletedEventHandler(object sender, GetMaintainCycByCsIdAndCsYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainCycByCsIdAndCsYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainCycByCsIdAndCsYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainCycByCsIdAndDealerIdCompletedEventHandler(object sender, GetMaintainCycByCsIdAndDealerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainCycByCsIdAndDealerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainCycByCsIdAndDealerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainCycByCarIdAndDealerIdCompletedEventHandler(object sender, GetMaintainCycByCarIdAndDealerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainCycByCarIdAndDealerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainCycByCarIdAndDealerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainPriceScopeByCsIdAndCsYearCompletedEventHandler(object sender, GetMaintainPriceScopeByCsIdAndCsYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainPriceScopeByCsIdAndCsYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainPriceScopeByCsIdAndCsYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainPriceScopeByCsIdCompletedEventHandler(object sender, GetMaintainPriceScopeByCsIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainPriceScopeByCsIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainPriceScopeByCsIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCSMaintainListByCsIdCompletedEventHandler(object sender, GetCSMaintainListByCsIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCSMaintainListByCsIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCSMaintainListByCsIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainCycByCsIdAndCSMIIDCompletedEventHandler(object sender, GetMaintainCycByCsIdAndCSMIIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainCycByCsIdAndCSMIIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainCycByCsIdAndCSMIIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainItemListByCsIDSCompletedEventHandler(object sender, GetMaintainItemListByCsIDSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainItemListByCsIDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainItemListByCsIDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetContrastMaintainCycByCsIdsAndMIIDsCompletedEventHandler(object sender, GetContrastMaintainCycByCsIdsAndMIIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContrastMaintainCycByCsIdsAndMIIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContrastMaintainCycByCsIdsAndMIIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMaintainInfoByCarIdCompletedEventHandler(object sender, GetMaintainInfoByCarIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMaintainInfoByCarIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMaintainInfoByCarIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591