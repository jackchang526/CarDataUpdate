//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.34209 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.CarDataUpdate.DataProcesser.cn.com.baa.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ForumServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DictionaryEntry[]))]
    public partial class ForumService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUserTraceForumListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFavoriteForumListByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFavoriteTopicListByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateForumsFavoriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTopicFavoriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteForumsFavoriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTopicFavoriteOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetHaiLiangWeiGuiPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserInfoToForumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserForumUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumTodayPostCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSignAndNicknameByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumYesterdayPostCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumByCityIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumByProvinceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumBySerialIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFourmInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumGroupTopicListSummaryForXMLStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTopicSpamFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateReplySpamFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateQuoteReplySpamFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumAlbumCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhotoListByAlbumIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumsByFgidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostListForXMLStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumGroupTopicListForXMLStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicListByFgidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicListAndImgListByFgidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumGroupInfoListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostListCustomWidthForXMLStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostListCustomWidthByPosterIdForXMLStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicListByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHavePicDigestTopicsOperationCompleted;
        
        private WebServiceSoapHeader webServiceSoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback DeletePostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTopicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicsByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostTopicsByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumDigestAndAlbumCountByCsIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestTopicListByBrandOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestTopicListByBrandAndImgListByFgidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampLinkBy_cb_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCampLinkBy_bs_IdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDegestTopicListBy_BsIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDegestTopicListBy_CbIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumsOrderByPlayCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOrderByPlayCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityPlayCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumPlayTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestPlayTopicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumPlayTopicBySerchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicInfoByTidForCheYiSouOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicListForPageForZJYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicByTidForZJYOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostByTidForZJYOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRedirectTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumDigestTopicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecommendTopicsByDigestAndSerialIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForumGroupStatisticsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGlobalDigestTopicForPageOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ForumService() {
            this.Url = global::BitAuto.CarDataUpdate.DataProcesser.Properties.Settings.Default.DataProcesser_cn_com_baa_api_ForumService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public WebServiceSoapHeader WebServiceSoapHeaderValue {
            get {
                return this.webServiceSoapHeaderValueField;
            }
            set {
                this.webServiceSoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUserTraceForumListCompletedEventHandler GetUserTraceForumListCompleted;
        
        /// <remarks/>
        public event GetFavoriteForumListByUserIdCompletedEventHandler GetFavoriteForumListByUserIdCompleted;
        
        /// <remarks/>
        public event GetFavoriteTopicListByUserIdCompletedEventHandler GetFavoriteTopicListByUserIdCompleted;
        
        /// <remarks/>
        public event CreateForumsFavoriteCompletedEventHandler CreateForumsFavoriteCompleted;
        
        /// <remarks/>
        public event CreateTopicFavoriteCompletedEventHandler CreateTopicFavoriteCompleted;
        
        /// <remarks/>
        public event DeleteForumsFavoriteCompletedEventHandler DeleteForumsFavoriteCompleted;
        
        /// <remarks/>
        public event DeleteTopicFavoriteCompletedEventHandler DeleteTopicFavoriteCompleted;
        
        /// <remarks/>
        public event SetHaiLiangWeiGuiPostCompletedEventHandler SetHaiLiangWeiGuiPostCompleted;
        
        /// <remarks/>
        public event CreateUserInfoToForumCompletedEventHandler CreateUserInfoToForumCompleted;
        
        /// <remarks/>
        public event GetUserForumUrlCompletedEventHandler GetUserForumUrlCompleted;
        
        /// <remarks/>
        public event GetForumTodayPostCountCompletedEventHandler GetForumTodayPostCountCompleted;
        
        /// <remarks/>
        public event DeleteSignAndNicknameByUserIdCompletedEventHandler DeleteSignAndNicknameByUserIdCompleted;
        
        /// <remarks/>
        public event GetForumYesterdayPostCountCompletedEventHandler GetForumYesterdayPostCountCompleted;
        
        /// <remarks/>
        public event GetForumByCityIdCompletedEventHandler GetForumByCityIdCompleted;
        
        /// <remarks/>
        public event GetForumByProvinceIdCompletedEventHandler GetForumByProvinceIdCompleted;
        
        /// <remarks/>
        public event GetForumBySerialIdCompletedEventHandler GetForumBySerialIdCompleted;
        
        /// <remarks/>
        public event GetUserFourmInfoCompletedEventHandler GetUserFourmInfoCompleted;
        
        /// <remarks/>
        public event GetForumGroupTopicListSummaryForXMLStringCompletedEventHandler GetForumGroupTopicListSummaryForXMLStringCompleted;
        
        /// <remarks/>
        public event GetForumManagerCompletedEventHandler GetForumManagerCompleted;
        
        /// <remarks/>
        public event CreateTopicSpamFilterCompletedEventHandler CreateTopicSpamFilterCompleted;
        
        /// <remarks/>
        public event CreateReplySpamFilterCompletedEventHandler CreateReplySpamFilterCompleted;
        
        /// <remarks/>
        public event CreateQuoteReplySpamFilterCompletedEventHandler CreateQuoteReplySpamFilterCompleted;
        
        /// <remarks/>
        public event GetForumAlbumCategoryCompletedEventHandler GetForumAlbumCategoryCompleted;
        
        /// <remarks/>
        public event GetForumAlbumCompletedEventHandler GetForumAlbumCompleted;
        
        /// <remarks/>
        public event GetPhotoListByAlbumIdCompletedEventHandler GetPhotoListByAlbumIdCompleted;
        
        /// <remarks/>
        public event GetForumsByFgidCompletedEventHandler GetForumsByFgidCompleted;
        
        /// <remarks/>
        public event GetPostListForXMLStringCompletedEventHandler GetPostListForXMLStringCompleted;
        
        /// <remarks/>
        public event GetForumGroupTopicListForXMLStringCompletedEventHandler GetForumGroupTopicListForXMLStringCompleted;
        
        /// <remarks/>
        public event GetTopicListByFgidCompletedEventHandler GetTopicListByFgidCompleted;
        
        /// <remarks/>
        public event GetTopicListAndImgListByFgidCompletedEventHandler GetTopicListAndImgListByFgidCompleted;
        
        /// <remarks/>
        public event GetForumGroupInfoListCompletedEventHandler GetForumGroupInfoListCompleted;
        
        /// <remarks/>
        public event GetPostListCustomWidthForXMLStringCompletedEventHandler GetPostListCustomWidthForXMLStringCompleted;
        
        /// <remarks/>
        public event GetPostListCustomWidthByPosterIdForXMLStringCompletedEventHandler GetPostListCustomWidthByPosterIdForXMLStringCompleted;
        
        /// <remarks/>
        public event GetTopicListByGuidCompletedEventHandler GetTopicListByGuidCompleted;
        
        /// <remarks/>
        public event GetHavePicDigestTopicsCompletedEventHandler GetHavePicDigestTopicsCompleted;
        
        /// <remarks/>
        public event DeletePostByIdCompletedEventHandler DeletePostByIdCompleted;
        
        /// <remarks/>
        public event DeleteTopicByIdCompletedEventHandler DeleteTopicByIdCompleted;
        
        /// <remarks/>
        public event GetTopicsByUserIdCompletedEventHandler GetTopicsByUserIdCompleted;
        
        /// <remarks/>
        public event GetPostTopicsByUserIdCompletedEventHandler GetPostTopicsByUserIdCompleted;
        
        /// <remarks/>
        public event GetForumDigestAndAlbumCountByCsIDCompletedEventHandler GetForumDigestAndAlbumCountByCsIDCompleted;
        
        /// <remarks/>
        public event GetLatestTopicListByBrandCompletedEventHandler GetLatestTopicListByBrandCompleted;
        
        /// <remarks/>
        public event GetLatestTopicListByBrandAndImgListByFgidCompletedEventHandler GetLatestTopicListByBrandAndImgListByFgidCompleted;
        
        /// <remarks/>
        public event GetCampLinkBy_cb_IdCompletedEventHandler GetCampLinkBy_cb_IdCompleted;
        
        /// <remarks/>
        public event GetCampLinkBy_bs_IdCompletedEventHandler GetCampLinkBy_bs_IdCompleted;
        
        /// <remarks/>
        public event GetDegestTopicListBy_BsIdCompletedEventHandler GetDegestTopicListBy_BsIdCompleted;
        
        /// <remarks/>
        public event GetDegestTopicListBy_CbIdCompletedEventHandler GetDegestTopicListBy_CbIdCompleted;
        
        /// <remarks/>
        public event GetForumsOrderByPlayCountCompletedEventHandler GetForumsOrderByPlayCountCompleted;
        
        /// <remarks/>
        public event GetUsersOrderByPlayCountCompletedEventHandler GetUsersOrderByPlayCountCompleted;
        
        /// <remarks/>
        public event GetCityPlayCountCompletedEventHandler GetCityPlayCountCompleted;
        
        /// <remarks/>
        public event GetForumPlayTopicCompletedEventHandler GetForumPlayTopicCompleted;
        
        /// <remarks/>
        public event GetLatestPlayTopicsCompletedEventHandler GetLatestPlayTopicsCompleted;
        
        /// <remarks/>
        public event GetForumPlayTopicBySerchCompletedEventHandler GetForumPlayTopicBySerchCompleted;
        
        /// <remarks/>
        public event GetTopicInfoByTidForCheYiSouCompletedEventHandler GetTopicInfoByTidForCheYiSouCompleted;
        
        /// <remarks/>
        public event GetTopicListForPageForZJYCompletedEventHandler GetTopicListForPageForZJYCompleted;
        
        /// <remarks/>
        public event GetTopicByTidForZJYCompletedEventHandler GetTopicByTidForZJYCompleted;
        
        /// <remarks/>
        public event GetPostByTidForZJYCompletedEventHandler GetPostByTidForZJYCompleted;
        
        /// <remarks/>
        public event CreateRedirectTopicCompletedEventHandler CreateRedirectTopicCompleted;
        
        /// <remarks/>
        public event GetForumDigestTopicsCompletedEventHandler GetForumDigestTopicsCompleted;
        
        /// <remarks/>
        public event GetRecommendTopicsByDigestAndSerialIdCompletedEventHandler GetRecommendTopicsByDigestAndSerialIdCompleted;
        
        /// <remarks/>
        public event GetForumGroupStatisticsByDateCompletedEventHandler GetForumGroupStatisticsByDateCompleted;
        
        /// <remarks/>
        public event GetGlobalDigestTopicForPageCompletedEventHandler GetGlobalDigestTopicForPageCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserTraceForumList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserTraceForumList(string userName, int topCount) {
            object[] results = this.Invoke("GetUserTraceForumList", new object[] {
                        userName,
                        topCount});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTraceForumListAsync(string userName, int topCount) {
            this.GetUserTraceForumListAsync(userName, topCount, null);
        }
        
        /// <remarks/>
        public void GetUserTraceForumListAsync(string userName, int topCount, object userState) {
            if ((this.GetUserTraceForumListOperationCompleted == null)) {
                this.GetUserTraceForumListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTraceForumListOperationCompleted);
            }
            this.InvokeAsync("GetUserTraceForumList", new object[] {
                        userName,
                        topCount}, this.GetUserTraceForumListOperationCompleted, userState);
        }
        
        private void OnGetUserTraceForumListOperationCompleted(object arg) {
            if ((this.GetUserTraceForumListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTraceForumListCompleted(this, new GetUserTraceForumListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFavoriteForumListByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFavoriteForumListByUserId(int userId) {
            object[] results = this.Invoke("GetFavoriteForumListByUserId", new object[] {
                        userId});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFavoriteForumListByUserIdAsync(int userId) {
            this.GetFavoriteForumListByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetFavoriteForumListByUserIdAsync(int userId, object userState) {
            if ((this.GetFavoriteForumListByUserIdOperationCompleted == null)) {
                this.GetFavoriteForumListByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFavoriteForumListByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetFavoriteForumListByUserId", new object[] {
                        userId}, this.GetFavoriteForumListByUserIdOperationCompleted, userState);
        }
        
        private void OnGetFavoriteForumListByUserIdOperationCompleted(object arg) {
            if ((this.GetFavoriteForumListByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFavoriteForumListByUserIdCompleted(this, new GetFavoriteForumListByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFavoriteTopicListByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFavoriteTopicListByUserId(int uId, int pageSize, int pageIndex, out int topicCount) {
            object[] results = this.Invoke("GetFavoriteTopicListByUserId", new object[] {
                        uId,
                        pageSize,
                        pageIndex});
            topicCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFavoriteTopicListByUserIdAsync(int uId, int pageSize, int pageIndex) {
            this.GetFavoriteTopicListByUserIdAsync(uId, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetFavoriteTopicListByUserIdAsync(int uId, int pageSize, int pageIndex, object userState) {
            if ((this.GetFavoriteTopicListByUserIdOperationCompleted == null)) {
                this.GetFavoriteTopicListByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFavoriteTopicListByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetFavoriteTopicListByUserId", new object[] {
                        uId,
                        pageSize,
                        pageIndex}, this.GetFavoriteTopicListByUserIdOperationCompleted, userState);
        }
        
        private void OnGetFavoriteTopicListByUserIdOperationCompleted(object arg) {
            if ((this.GetFavoriteTopicListByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFavoriteTopicListByUserIdCompleted(this, new GetFavoriteTopicListByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateForumsFavorite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateForumsFavorite(int fgId, int userId, string userName) {
            object[] results = this.Invoke("CreateForumsFavorite", new object[] {
                        fgId,
                        userId,
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateForumsFavoriteAsync(int fgId, int userId, string userName) {
            this.CreateForumsFavoriteAsync(fgId, userId, userName, null);
        }
        
        /// <remarks/>
        public void CreateForumsFavoriteAsync(int fgId, int userId, string userName, object userState) {
            if ((this.CreateForumsFavoriteOperationCompleted == null)) {
                this.CreateForumsFavoriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateForumsFavoriteOperationCompleted);
            }
            this.InvokeAsync("CreateForumsFavorite", new object[] {
                        fgId,
                        userId,
                        userName}, this.CreateForumsFavoriteOperationCompleted, userState);
        }
        
        private void OnCreateForumsFavoriteOperationCompleted(object arg) {
            if ((this.CreateForumsFavoriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateForumsFavoriteCompleted(this, new CreateForumsFavoriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateTopicFavorite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateTopicFavorite(int tId, int userId, string userName) {
            object[] results = this.Invoke("CreateTopicFavorite", new object[] {
                        tId,
                        userId,
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTopicFavoriteAsync(int tId, int userId, string userName) {
            this.CreateTopicFavoriteAsync(tId, userId, userName, null);
        }
        
        /// <remarks/>
        public void CreateTopicFavoriteAsync(int tId, int userId, string userName, object userState) {
            if ((this.CreateTopicFavoriteOperationCompleted == null)) {
                this.CreateTopicFavoriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTopicFavoriteOperationCompleted);
            }
            this.InvokeAsync("CreateTopicFavorite", new object[] {
                        tId,
                        userId,
                        userName}, this.CreateTopicFavoriteOperationCompleted, userState);
        }
        
        private void OnCreateTopicFavoriteOperationCompleted(object arg) {
            if ((this.CreateTopicFavoriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTopicFavoriteCompleted(this, new CreateTopicFavoriteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteForumsFavorite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteForumsFavorite(int fgId, int userId) {
            this.Invoke("DeleteForumsFavorite", new object[] {
                        fgId,
                        userId});
        }
        
        /// <remarks/>
        public void DeleteForumsFavoriteAsync(int fgId, int userId) {
            this.DeleteForumsFavoriteAsync(fgId, userId, null);
        }
        
        /// <remarks/>
        public void DeleteForumsFavoriteAsync(int fgId, int userId, object userState) {
            if ((this.DeleteForumsFavoriteOperationCompleted == null)) {
                this.DeleteForumsFavoriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteForumsFavoriteOperationCompleted);
            }
            this.InvokeAsync("DeleteForumsFavorite", new object[] {
                        fgId,
                        userId}, this.DeleteForumsFavoriteOperationCompleted, userState);
        }
        
        private void OnDeleteForumsFavoriteOperationCompleted(object arg) {
            if ((this.DeleteForumsFavoriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteForumsFavoriteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTopicFavorite", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTopicFavorite(int tId, int userId) {
            this.Invoke("DeleteTopicFavorite", new object[] {
                        tId,
                        userId});
        }
        
        /// <remarks/>
        public void DeleteTopicFavoriteAsync(int tId, int userId) {
            this.DeleteTopicFavoriteAsync(tId, userId, null);
        }
        
        /// <remarks/>
        public void DeleteTopicFavoriteAsync(int tId, int userId, object userState) {
            if ((this.DeleteTopicFavoriteOperationCompleted == null)) {
                this.DeleteTopicFavoriteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTopicFavoriteOperationCompleted);
            }
            this.InvokeAsync("DeleteTopicFavorite", new object[] {
                        tId,
                        userId}, this.DeleteTopicFavoriteOperationCompleted, userState);
        }
        
        private void OnDeleteTopicFavoriteOperationCompleted(object arg) {
            if ((this.DeleteTopicFavoriteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTopicFavoriteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetHaiLiangWeiGuiPost", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetHaiLiangWeiGuiPost(string[] postGuids) {
            this.Invoke("SetHaiLiangWeiGuiPost", new object[] {
                        postGuids});
        }
        
        /// <remarks/>
        public void SetHaiLiangWeiGuiPostAsync(string[] postGuids) {
            this.SetHaiLiangWeiGuiPostAsync(postGuids, null);
        }
        
        /// <remarks/>
        public void SetHaiLiangWeiGuiPostAsync(string[] postGuids, object userState) {
            if ((this.SetHaiLiangWeiGuiPostOperationCompleted == null)) {
                this.SetHaiLiangWeiGuiPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetHaiLiangWeiGuiPostOperationCompleted);
            }
            this.InvokeAsync("SetHaiLiangWeiGuiPost", new object[] {
                        postGuids}, this.SetHaiLiangWeiGuiPostOperationCompleted, userState);
        }
        
        private void OnSetHaiLiangWeiGuiPostOperationCompleted(object arg) {
            if ((this.SetHaiLiangWeiGuiPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetHaiLiangWeiGuiPostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUserInfoToForum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateUserInfoToForum(int uid, string username) {
            this.Invoke("CreateUserInfoToForum", new object[] {
                        uid,
                        username});
        }
        
        /// <remarks/>
        public void CreateUserInfoToForumAsync(int uid, string username) {
            this.CreateUserInfoToForumAsync(uid, username, null);
        }
        
        /// <remarks/>
        public void CreateUserInfoToForumAsync(int uid, string username, object userState) {
            if ((this.CreateUserInfoToForumOperationCompleted == null)) {
                this.CreateUserInfoToForumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserInfoToForumOperationCompleted);
            }
            this.InvokeAsync("CreateUserInfoToForum", new object[] {
                        uid,
                        username}, this.CreateUserInfoToForumOperationCompleted, userState);
        }
        
        private void OnCreateUserInfoToForumOperationCompleted(object arg) {
            if ((this.CreateUserInfoToForumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserInfoToForumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserForumUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserForumUrl(int[] userId) {
            object[] results = this.Invoke("GetUserForumUrl", new object[] {
                        userId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserForumUrlAsync(int[] userId) {
            this.GetUserForumUrlAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetUserForumUrlAsync(int[] userId, object userState) {
            if ((this.GetUserForumUrlOperationCompleted == null)) {
                this.GetUserForumUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserForumUrlOperationCompleted);
            }
            this.InvokeAsync("GetUserForumUrl", new object[] {
                        userId}, this.GetUserForumUrlOperationCompleted, userState);
        }
        
        private void OnGetUserForumUrlOperationCompleted(object arg) {
            if ((this.GetUserForumUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserForumUrlCompleted(this, new GetUserForumUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumTodayPostCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumTodayPostCount(string fgidList) {
            object[] results = this.Invoke("GetForumTodayPostCount", new object[] {
                        fgidList});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumTodayPostCountAsync(string fgidList) {
            this.GetForumTodayPostCountAsync(fgidList, null);
        }
        
        /// <remarks/>
        public void GetForumTodayPostCountAsync(string fgidList, object userState) {
            if ((this.GetForumTodayPostCountOperationCompleted == null)) {
                this.GetForumTodayPostCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumTodayPostCountOperationCompleted);
            }
            this.InvokeAsync("GetForumTodayPostCount", new object[] {
                        fgidList}, this.GetForumTodayPostCountOperationCompleted, userState);
        }
        
        private void OnGetForumTodayPostCountOperationCompleted(object arg) {
            if ((this.GetForumTodayPostCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumTodayPostCountCompleted(this, new GetForumTodayPostCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSignAndNicknameByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSignAndNicknameByUserId(int uid) {
            this.Invoke("DeleteSignAndNicknameByUserId", new object[] {
                        uid});
        }
        
        /// <remarks/>
        public void DeleteSignAndNicknameByUserIdAsync(int uid) {
            this.DeleteSignAndNicknameByUserIdAsync(uid, null);
        }
        
        /// <remarks/>
        public void DeleteSignAndNicknameByUserIdAsync(int uid, object userState) {
            if ((this.DeleteSignAndNicknameByUserIdOperationCompleted == null)) {
                this.DeleteSignAndNicknameByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSignAndNicknameByUserIdOperationCompleted);
            }
            this.InvokeAsync("DeleteSignAndNicknameByUserId", new object[] {
                        uid}, this.DeleteSignAndNicknameByUserIdOperationCompleted, userState);
        }
        
        private void OnDeleteSignAndNicknameByUserIdOperationCompleted(object arg) {
            if ((this.DeleteSignAndNicknameByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSignAndNicknameByUserIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumYesterdayPostCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumYesterdayPostCount(string fgidList) {
            object[] results = this.Invoke("GetForumYesterdayPostCount", new object[] {
                        fgidList});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumYesterdayPostCountAsync(string fgidList) {
            this.GetForumYesterdayPostCountAsync(fgidList, null);
        }
        
        /// <remarks/>
        public void GetForumYesterdayPostCountAsync(string fgidList, object userState) {
            if ((this.GetForumYesterdayPostCountOperationCompleted == null)) {
                this.GetForumYesterdayPostCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumYesterdayPostCountOperationCompleted);
            }
            this.InvokeAsync("GetForumYesterdayPostCount", new object[] {
                        fgidList}, this.GetForumYesterdayPostCountOperationCompleted, userState);
        }
        
        private void OnGetForumYesterdayPostCountOperationCompleted(object arg) {
            if ((this.GetForumYesterdayPostCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumYesterdayPostCountCompleted(this, new GetForumYesterdayPostCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumByCityId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumByCityId(System.Data.DataTable dt) {
            object[] results = this.Invoke("GetForumByCityId", new object[] {
                        dt});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumByCityIdAsync(System.Data.DataTable dt) {
            this.GetForumByCityIdAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetForumByCityIdAsync(System.Data.DataTable dt, object userState) {
            if ((this.GetForumByCityIdOperationCompleted == null)) {
                this.GetForumByCityIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumByCityIdOperationCompleted);
            }
            this.InvokeAsync("GetForumByCityId", new object[] {
                        dt}, this.GetForumByCityIdOperationCompleted, userState);
        }
        
        private void OnGetForumByCityIdOperationCompleted(object arg) {
            if ((this.GetForumByCityIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumByCityIdCompleted(this, new GetForumByCityIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumByProvinceId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumByProvinceId(System.Data.DataTable dt) {
            object[] results = this.Invoke("GetForumByProvinceId", new object[] {
                        dt});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumByProvinceIdAsync(System.Data.DataTable dt) {
            this.GetForumByProvinceIdAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetForumByProvinceIdAsync(System.Data.DataTable dt, object userState) {
            if ((this.GetForumByProvinceIdOperationCompleted == null)) {
                this.GetForumByProvinceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumByProvinceIdOperationCompleted);
            }
            this.InvokeAsync("GetForumByProvinceId", new object[] {
                        dt}, this.GetForumByProvinceIdOperationCompleted, userState);
        }
        
        private void OnGetForumByProvinceIdOperationCompleted(object arg) {
            if ((this.GetForumByProvinceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumByProvinceIdCompleted(this, new GetForumByProvinceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumBySerialId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumBySerialId(System.Data.DataTable dt) {
            object[] results = this.Invoke("GetForumBySerialId", new object[] {
                        dt});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumBySerialIdAsync(System.Data.DataTable dt) {
            this.GetForumBySerialIdAsync(dt, null);
        }
        
        /// <remarks/>
        public void GetForumBySerialIdAsync(System.Data.DataTable dt, object userState) {
            if ((this.GetForumBySerialIdOperationCompleted == null)) {
                this.GetForumBySerialIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumBySerialIdOperationCompleted);
            }
            this.InvokeAsync("GetForumBySerialId", new object[] {
                        dt}, this.GetForumBySerialIdOperationCompleted, userState);
        }
        
        private void OnGetForumBySerialIdOperationCompleted(object arg) {
            if ((this.GetForumBySerialIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumBySerialIdCompleted(this, new GetForumBySerialIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserFourmInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUserFourmInfo(System.Data.DataTable users) {
            object[] results = this.Invoke("GetUserFourmInfo", new object[] {
                        users});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFourmInfoAsync(System.Data.DataTable users) {
            this.GetUserFourmInfoAsync(users, null);
        }
        
        /// <remarks/>
        public void GetUserFourmInfoAsync(System.Data.DataTable users, object userState) {
            if ((this.GetUserFourmInfoOperationCompleted == null)) {
                this.GetUserFourmInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFourmInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserFourmInfo", new object[] {
                        users}, this.GetUserFourmInfoOperationCompleted, userState);
        }
        
        private void OnGetUserFourmInfoOperationCompleted(object arg) {
            if ((this.GetUserFourmInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFourmInfoCompleted(this, new GetUserFourmInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumGroupTopicListSummaryForXMLString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetForumGroupTopicListSummaryForXMLString(int digestId, int topicType, bool isOnlyPic, int totalRecords, bool isOrderLastPostTime, int fgid, int summaryLength, int picMaxWidth) {
            object[] results = this.Invoke("GetForumGroupTopicListSummaryForXMLString", new object[] {
                        digestId,
                        topicType,
                        isOnlyPic,
                        totalRecords,
                        isOrderLastPostTime,
                        fgid,
                        summaryLength,
                        picMaxWidth});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumGroupTopicListSummaryForXMLStringAsync(int digestId, int topicType, bool isOnlyPic, int totalRecords, bool isOrderLastPostTime, int fgid, int summaryLength, int picMaxWidth) {
            this.GetForumGroupTopicListSummaryForXMLStringAsync(digestId, topicType, isOnlyPic, totalRecords, isOrderLastPostTime, fgid, summaryLength, picMaxWidth, null);
        }
        
        /// <remarks/>
        public void GetForumGroupTopicListSummaryForXMLStringAsync(int digestId, int topicType, bool isOnlyPic, int totalRecords, bool isOrderLastPostTime, int fgid, int summaryLength, int picMaxWidth, object userState) {
            if ((this.GetForumGroupTopicListSummaryForXMLStringOperationCompleted == null)) {
                this.GetForumGroupTopicListSummaryForXMLStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumGroupTopicListSummaryForXMLStringOperationCompleted);
            }
            this.InvokeAsync("GetForumGroupTopicListSummaryForXMLString", new object[] {
                        digestId,
                        topicType,
                        isOnlyPic,
                        totalRecords,
                        isOrderLastPostTime,
                        fgid,
                        summaryLength,
                        picMaxWidth}, this.GetForumGroupTopicListSummaryForXMLStringOperationCompleted, userState);
        }
        
        private void OnGetForumGroupTopicListSummaryForXMLStringOperationCompleted(object arg) {
            if ((this.GetForumGroupTopicListSummaryForXMLStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumGroupTopicListSummaryForXMLStringCompleted(this, new GetForumGroupTopicListSummaryForXMLStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetForumManager(int fgid) {
            object[] results = this.Invoke("GetForumManager", new object[] {
                        fgid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumManagerAsync(int fgid) {
            this.GetForumManagerAsync(fgid, null);
        }
        
        /// <remarks/>
        public void GetForumManagerAsync(int fgid, object userState) {
            if ((this.GetForumManagerOperationCompleted == null)) {
                this.GetForumManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumManagerOperationCompleted);
            }
            this.InvokeAsync("GetForumManager", new object[] {
                        fgid}, this.GetForumManagerOperationCompleted, userState);
        }
        
        private void OnGetForumManagerOperationCompleted(object arg) {
            if ((this.GetForumManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumManagerCompleted(this, new GetForumManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateTopicSpamFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateTopicSpamFilter(int fgid, int fid, int icoId, string title, string content, int userId, string userName, int displayOrder, int digestId, string userIp, int sourceType, out string errorMsg) {
            object[] results = this.Invoke("CreateTopicSpamFilter", new object[] {
                        fgid,
                        fid,
                        icoId,
                        title,
                        content,
                        userId,
                        userName,
                        displayOrder,
                        digestId,
                        userIp,
                        sourceType});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTopicSpamFilterAsync(int fgid, int fid, int icoId, string title, string content, int userId, string userName, int displayOrder, int digestId, string userIp, int sourceType) {
            this.CreateTopicSpamFilterAsync(fgid, fid, icoId, title, content, userId, userName, displayOrder, digestId, userIp, sourceType, null);
        }
        
        /// <remarks/>
        public void CreateTopicSpamFilterAsync(int fgid, int fid, int icoId, string title, string content, int userId, string userName, int displayOrder, int digestId, string userIp, int sourceType, object userState) {
            if ((this.CreateTopicSpamFilterOperationCompleted == null)) {
                this.CreateTopicSpamFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTopicSpamFilterOperationCompleted);
            }
            this.InvokeAsync("CreateTopicSpamFilter", new object[] {
                        fgid,
                        fid,
                        icoId,
                        title,
                        content,
                        userId,
                        userName,
                        displayOrder,
                        digestId,
                        userIp,
                        sourceType}, this.CreateTopicSpamFilterOperationCompleted, userState);
        }
        
        private void OnCreateTopicSpamFilterOperationCompleted(object arg) {
            if ((this.CreateTopicSpamFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTopicSpamFilterCompleted(this, new CreateTopicSpamFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateReplySpamFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateReplySpamFilter(string title, string content, int userId, string userName, int fgid, int fid, int tid, string userIp, int sourceType, out string errorMsg) {
            object[] results = this.Invoke("CreateReplySpamFilter", new object[] {
                        title,
                        content,
                        userId,
                        userName,
                        fgid,
                        fid,
                        tid,
                        userIp,
                        sourceType});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateReplySpamFilterAsync(string title, string content, int userId, string userName, int fgid, int fid, int tid, string userIp, int sourceType) {
            this.CreateReplySpamFilterAsync(title, content, userId, userName, fgid, fid, tid, userIp, sourceType, null);
        }
        
        /// <remarks/>
        public void CreateReplySpamFilterAsync(string title, string content, int userId, string userName, int fgid, int fid, int tid, string userIp, int sourceType, object userState) {
            if ((this.CreateReplySpamFilterOperationCompleted == null)) {
                this.CreateReplySpamFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateReplySpamFilterOperationCompleted);
            }
            this.InvokeAsync("CreateReplySpamFilter", new object[] {
                        title,
                        content,
                        userId,
                        userName,
                        fgid,
                        fid,
                        tid,
                        userIp,
                        sourceType}, this.CreateReplySpamFilterOperationCompleted, userState);
        }
        
        private void OnCreateReplySpamFilterOperationCompleted(object arg) {
            if ((this.CreateReplySpamFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateReplySpamFilterCompleted(this, new CreateReplySpamFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateQuoteReplySpamFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateQuoteReplySpamFilter(string title, string content, int userId, string userName, int fgid, int fid, int tid, string userIp, int sourceType, int ParentId, out string errorMsg) {
            object[] results = this.Invoke("CreateQuoteReplySpamFilter", new object[] {
                        title,
                        content,
                        userId,
                        userName,
                        fgid,
                        fid,
                        tid,
                        userIp,
                        sourceType,
                        ParentId});
            errorMsg = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateQuoteReplySpamFilterAsync(string title, string content, int userId, string userName, int fgid, int fid, int tid, string userIp, int sourceType, int ParentId) {
            this.CreateQuoteReplySpamFilterAsync(title, content, userId, userName, fgid, fid, tid, userIp, sourceType, ParentId, null);
        }
        
        /// <remarks/>
        public void CreateQuoteReplySpamFilterAsync(string title, string content, int userId, string userName, int fgid, int fid, int tid, string userIp, int sourceType, int ParentId, object userState) {
            if ((this.CreateQuoteReplySpamFilterOperationCompleted == null)) {
                this.CreateQuoteReplySpamFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateQuoteReplySpamFilterOperationCompleted);
            }
            this.InvokeAsync("CreateQuoteReplySpamFilter", new object[] {
                        title,
                        content,
                        userId,
                        userName,
                        fgid,
                        fid,
                        tid,
                        userIp,
                        sourceType,
                        ParentId}, this.CreateQuoteReplySpamFilterOperationCompleted, userState);
        }
        
        private void OnCreateQuoteReplySpamFilterOperationCompleted(object arg) {
            if ((this.CreateQuoteReplySpamFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateQuoteReplySpamFilterCompleted(this, new CreateQuoteReplySpamFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumAlbumCategory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public DictionaryEntry[] GetForumAlbumCategory() {
            object[] results = this.Invoke("GetForumAlbumCategory", new object[0]);
            return ((DictionaryEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void GetForumAlbumCategoryAsync() {
            this.GetForumAlbumCategoryAsync(null);
        }
        
        /// <remarks/>
        public void GetForumAlbumCategoryAsync(object userState) {
            if ((this.GetForumAlbumCategoryOperationCompleted == null)) {
                this.GetForumAlbumCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumAlbumCategoryOperationCompleted);
            }
            this.InvokeAsync("GetForumAlbumCategory", new object[0], this.GetForumAlbumCategoryOperationCompleted, userState);
        }
        
        private void OnGetForumAlbumCategoryOperationCompleted(object arg) {
            if ((this.GetForumAlbumCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumAlbumCategoryCompleted(this, new GetForumAlbumCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumAlbum(int categoryId, int fgid, int pageSize, int pageIndex, int picMaxWidth, int orderType) {
            object[] results = this.Invoke("GetForumAlbum", new object[] {
                        categoryId,
                        fgid,
                        pageSize,
                        pageIndex,
                        picMaxWidth,
                        orderType});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumAlbumAsync(int categoryId, int fgid, int pageSize, int pageIndex, int picMaxWidth, int orderType) {
            this.GetForumAlbumAsync(categoryId, fgid, pageSize, pageIndex, picMaxWidth, orderType, null);
        }
        
        /// <remarks/>
        public void GetForumAlbumAsync(int categoryId, int fgid, int pageSize, int pageIndex, int picMaxWidth, int orderType, object userState) {
            if ((this.GetForumAlbumOperationCompleted == null)) {
                this.GetForumAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumAlbumOperationCompleted);
            }
            this.InvokeAsync("GetForumAlbum", new object[] {
                        categoryId,
                        fgid,
                        pageSize,
                        pageIndex,
                        picMaxWidth,
                        orderType}, this.GetForumAlbumOperationCompleted, userState);
        }
        
        private void OnGetForumAlbumOperationCompleted(object arg) {
            if ((this.GetForumAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumAlbumCompleted(this, new GetForumAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPhotoListByAlbumId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPhotoListByAlbumId(int albumId, int fgid, int pageIndex, int pageSize, int picMaxWidth) {
            object[] results = this.Invoke("GetPhotoListByAlbumId", new object[] {
                        albumId,
                        fgid,
                        pageIndex,
                        pageSize,
                        picMaxWidth});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhotoListByAlbumIdAsync(int albumId, int fgid, int pageIndex, int pageSize, int picMaxWidth) {
            this.GetPhotoListByAlbumIdAsync(albumId, fgid, pageIndex, pageSize, picMaxWidth, null);
        }
        
        /// <remarks/>
        public void GetPhotoListByAlbumIdAsync(int albumId, int fgid, int pageIndex, int pageSize, int picMaxWidth, object userState) {
            if ((this.GetPhotoListByAlbumIdOperationCompleted == null)) {
                this.GetPhotoListByAlbumIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhotoListByAlbumIdOperationCompleted);
            }
            this.InvokeAsync("GetPhotoListByAlbumId", new object[] {
                        albumId,
                        fgid,
                        pageIndex,
                        pageSize,
                        picMaxWidth}, this.GetPhotoListByAlbumIdOperationCompleted, userState);
        }
        
        private void OnGetPhotoListByAlbumIdOperationCompleted(object arg) {
            if ((this.GetPhotoListByAlbumIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhotoListByAlbumIdCompleted(this, new GetPhotoListByAlbumIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumsByFgid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumsByFgid(int fgid) {
            object[] results = this.Invoke("GetForumsByFgid", new object[] {
                        fgid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumsByFgidAsync(int fgid) {
            this.GetForumsByFgidAsync(fgid, null);
        }
        
        /// <remarks/>
        public void GetForumsByFgidAsync(int fgid, object userState) {
            if ((this.GetForumsByFgidOperationCompleted == null)) {
                this.GetForumsByFgidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumsByFgidOperationCompleted);
            }
            this.InvokeAsync("GetForumsByFgid", new object[] {
                        fgid}, this.GetForumsByFgidOperationCompleted, userState);
        }
        
        private void OnGetForumsByFgidOperationCompleted(object arg) {
            if ((this.GetForumsByFgidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumsByFgidCompleted(this, new GetForumsByFgidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostListForXMLString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPostListForXMLString(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, out int totalRecords) {
            object[] results = this.Invoke("GetPostListForXMLString", new object[] {
                        fgid,
                        tid,
                        pageIndex,
                        pageSize,
                        avatarSize});
            totalRecords = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostListForXMLStringAsync(int fgid, int tid, int pageIndex, int pageSize, int avatarSize) {
            this.GetPostListForXMLStringAsync(fgid, tid, pageIndex, pageSize, avatarSize, null);
        }
        
        /// <remarks/>
        public void GetPostListForXMLStringAsync(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, object userState) {
            if ((this.GetPostListForXMLStringOperationCompleted == null)) {
                this.GetPostListForXMLStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostListForXMLStringOperationCompleted);
            }
            this.InvokeAsync("GetPostListForXMLString", new object[] {
                        fgid,
                        tid,
                        pageIndex,
                        pageSize,
                        avatarSize}, this.GetPostListForXMLStringOperationCompleted, userState);
        }
        
        private void OnGetPostListForXMLStringOperationCompleted(object arg) {
            if ((this.GetPostListForXMLStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostListForXMLStringCompleted(this, new GetPostListForXMLStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumGroupTopicListForXMLString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetForumGroupTopicListForXMLString(int fgid, int pageIndex, int pageSize, bool isOnlyDigest, out int totalTopics) {
            object[] results = this.Invoke("GetForumGroupTopicListForXMLString", new object[] {
                        fgid,
                        pageIndex,
                        pageSize,
                        isOnlyDigest});
            totalTopics = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumGroupTopicListForXMLStringAsync(int fgid, int pageIndex, int pageSize, bool isOnlyDigest) {
            this.GetForumGroupTopicListForXMLStringAsync(fgid, pageIndex, pageSize, isOnlyDigest, null);
        }
        
        /// <remarks/>
        public void GetForumGroupTopicListForXMLStringAsync(int fgid, int pageIndex, int pageSize, bool isOnlyDigest, object userState) {
            if ((this.GetForumGroupTopicListForXMLStringOperationCompleted == null)) {
                this.GetForumGroupTopicListForXMLStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumGroupTopicListForXMLStringOperationCompleted);
            }
            this.InvokeAsync("GetForumGroupTopicListForXMLString", new object[] {
                        fgid,
                        pageIndex,
                        pageSize,
                        isOnlyDigest}, this.GetForumGroupTopicListForXMLStringOperationCompleted, userState);
        }
        
        private void OnGetForumGroupTopicListForXMLStringOperationCompleted(object arg) {
            if ((this.GetForumGroupTopicListForXMLStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumGroupTopicListForXMLStringCompleted(this, new GetForumGroupTopicListForXMLStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopicListByFgid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopicListByFgid(int pageIndex, int pageSize, int fgId, int fId, int digestType, int postType, bool isAttachment, int orderType, out int recordCount) {
            object[] results = this.Invoke("GetTopicListByFgid", new object[] {
                        pageIndex,
                        pageSize,
                        fgId,
                        fId,
                        digestType,
                        postType,
                        isAttachment,
                        orderType});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicListByFgidAsync(int pageIndex, int pageSize, int fgId, int fId, int digestType, int postType, bool isAttachment, int orderType) {
            this.GetTopicListByFgidAsync(pageIndex, pageSize, fgId, fId, digestType, postType, isAttachment, orderType, null);
        }
        
        /// <remarks/>
        public void GetTopicListByFgidAsync(int pageIndex, int pageSize, int fgId, int fId, int digestType, int postType, bool isAttachment, int orderType, object userState) {
            if ((this.GetTopicListByFgidOperationCompleted == null)) {
                this.GetTopicListByFgidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicListByFgidOperationCompleted);
            }
            this.InvokeAsync("GetTopicListByFgid", new object[] {
                        pageIndex,
                        pageSize,
                        fgId,
                        fId,
                        digestType,
                        postType,
                        isAttachment,
                        orderType}, this.GetTopicListByFgidOperationCompleted, userState);
        }
        
        private void OnGetTopicListByFgidOperationCompleted(object arg) {
            if ((this.GetTopicListByFgidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicListByFgidCompleted(this, new GetTopicListByFgidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopicListAndImgListByFgid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopicListAndImgListByFgid(int pageIndex, int pageSize, int fgId, int fId, int digestType, int postType, bool isAttachment, int orderType, out int recordCount, out TopicImgsInfo[] ImgList) {
            object[] results = this.Invoke("GetTopicListAndImgListByFgid", new object[] {
                        pageIndex,
                        pageSize,
                        fgId,
                        fId,
                        digestType,
                        postType,
                        isAttachment,
                        orderType});
            recordCount = ((int)(results[1]));
            ImgList = ((TopicImgsInfo[])(results[2]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicListAndImgListByFgidAsync(int pageIndex, int pageSize, int fgId, int fId, int digestType, int postType, bool isAttachment, int orderType) {
            this.GetTopicListAndImgListByFgidAsync(pageIndex, pageSize, fgId, fId, digestType, postType, isAttachment, orderType, null);
        }
        
        /// <remarks/>
        public void GetTopicListAndImgListByFgidAsync(int pageIndex, int pageSize, int fgId, int fId, int digestType, int postType, bool isAttachment, int orderType, object userState) {
            if ((this.GetTopicListAndImgListByFgidOperationCompleted == null)) {
                this.GetTopicListAndImgListByFgidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicListAndImgListByFgidOperationCompleted);
            }
            this.InvokeAsync("GetTopicListAndImgListByFgid", new object[] {
                        pageIndex,
                        pageSize,
                        fgId,
                        fId,
                        digestType,
                        postType,
                        isAttachment,
                        orderType}, this.GetTopicListAndImgListByFgidOperationCompleted, userState);
        }
        
        private void OnGetTopicListAndImgListByFgidOperationCompleted(object arg) {
            if ((this.GetTopicListAndImgListByFgidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicListAndImgListByFgidCompleted(this, new GetTopicListAndImgListByFgidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumGroupInfoList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetForumGroupInfoList() {
            object[] results = this.Invoke("GetForumGroupInfoList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumGroupInfoListAsync() {
            this.GetForumGroupInfoListAsync(null);
        }
        
        /// <remarks/>
        public void GetForumGroupInfoListAsync(object userState) {
            if ((this.GetForumGroupInfoListOperationCompleted == null)) {
                this.GetForumGroupInfoListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumGroupInfoListOperationCompleted);
            }
            this.InvokeAsync("GetForumGroupInfoList", new object[0], this.GetForumGroupInfoListOperationCompleted, userState);
        }
        
        private void OnGetForumGroupInfoListOperationCompleted(object arg) {
            if ((this.GetForumGroupInfoListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumGroupInfoListCompleted(this, new GetForumGroupInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostListCustomWidthForXMLString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPostListCustomWidthForXMLString(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, int photoMaxWidth, out int totalRecords) {
            object[] results = this.Invoke("GetPostListCustomWidthForXMLString", new object[] {
                        fgid,
                        tid,
                        pageIndex,
                        pageSize,
                        avatarSize,
                        photoMaxWidth});
            totalRecords = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostListCustomWidthForXMLStringAsync(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, int photoMaxWidth) {
            this.GetPostListCustomWidthForXMLStringAsync(fgid, tid, pageIndex, pageSize, avatarSize, photoMaxWidth, null);
        }
        
        /// <remarks/>
        public void GetPostListCustomWidthForXMLStringAsync(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, int photoMaxWidth, object userState) {
            if ((this.GetPostListCustomWidthForXMLStringOperationCompleted == null)) {
                this.GetPostListCustomWidthForXMLStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostListCustomWidthForXMLStringOperationCompleted);
            }
            this.InvokeAsync("GetPostListCustomWidthForXMLString", new object[] {
                        fgid,
                        tid,
                        pageIndex,
                        pageSize,
                        avatarSize,
                        photoMaxWidth}, this.GetPostListCustomWidthForXMLStringOperationCompleted, userState);
        }
        
        private void OnGetPostListCustomWidthForXMLStringOperationCompleted(object arg) {
            if ((this.GetPostListCustomWidthForXMLStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostListCustomWidthForXMLStringCompleted(this, new GetPostListCustomWidthForXMLStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostListCustomWidthByPosterIdForXMLString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPostListCustomWidthByPosterIdForXMLString(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, int photoMaxWidth, int posterId, out int totalRecords) {
            object[] results = this.Invoke("GetPostListCustomWidthByPosterIdForXMLString", new object[] {
                        fgid,
                        tid,
                        pageIndex,
                        pageSize,
                        avatarSize,
                        photoMaxWidth,
                        posterId});
            totalRecords = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostListCustomWidthByPosterIdForXMLStringAsync(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, int photoMaxWidth, int posterId) {
            this.GetPostListCustomWidthByPosterIdForXMLStringAsync(fgid, tid, pageIndex, pageSize, avatarSize, photoMaxWidth, posterId, null);
        }
        
        /// <remarks/>
        public void GetPostListCustomWidthByPosterIdForXMLStringAsync(int fgid, int tid, int pageIndex, int pageSize, int avatarSize, int photoMaxWidth, int posterId, object userState) {
            if ((this.GetPostListCustomWidthByPosterIdForXMLStringOperationCompleted == null)) {
                this.GetPostListCustomWidthByPosterIdForXMLStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostListCustomWidthByPosterIdForXMLStringOperationCompleted);
            }
            this.InvokeAsync("GetPostListCustomWidthByPosterIdForXMLString", new object[] {
                        fgid,
                        tid,
                        pageIndex,
                        pageSize,
                        avatarSize,
                        photoMaxWidth,
                        posterId}, this.GetPostListCustomWidthByPosterIdForXMLStringOperationCompleted, userState);
        }
        
        private void OnGetPostListCustomWidthByPosterIdForXMLStringOperationCompleted(object arg) {
            if ((this.GetPostListCustomWidthByPosterIdForXMLStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostListCustomWidthByPosterIdForXMLStringCompleted(this, new GetPostListCustomWidthByPosterIdForXMLStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopicListByGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTopicListByGuid(System.Guid[] guids) {
            object[] results = this.Invoke("GetTopicListByGuid", new object[] {
                        guids});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicListByGuidAsync(System.Guid[] guids) {
            this.GetTopicListByGuidAsync(guids, null);
        }
        
        /// <remarks/>
        public void GetTopicListByGuidAsync(System.Guid[] guids, object userState) {
            if ((this.GetTopicListByGuidOperationCompleted == null)) {
                this.GetTopicListByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicListByGuidOperationCompleted);
            }
            this.InvokeAsync("GetTopicListByGuid", new object[] {
                        guids}, this.GetTopicListByGuidOperationCompleted, userState);
        }
        
        private void OnGetTopicListByGuidOperationCompleted(object arg) {
            if ((this.GetTopicListByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicListByGuidCompleted(this, new GetTopicListByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHavePicDigestTopics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetHavePicDigestTopics(int maxLength, int imgMaxWidth) {
            object[] results = this.Invoke("GetHavePicDigestTopics", new object[] {
                        maxLength,
                        imgMaxWidth});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetHavePicDigestTopicsAsync(int maxLength, int imgMaxWidth) {
            this.GetHavePicDigestTopicsAsync(maxLength, imgMaxWidth, null);
        }
        
        /// <remarks/>
        public void GetHavePicDigestTopicsAsync(int maxLength, int imgMaxWidth, object userState) {
            if ((this.GetHavePicDigestTopicsOperationCompleted == null)) {
                this.GetHavePicDigestTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHavePicDigestTopicsOperationCompleted);
            }
            this.InvokeAsync("GetHavePicDigestTopics", new object[] {
                        maxLength,
                        imgMaxWidth}, this.GetHavePicDigestTopicsOperationCompleted, userState);
        }
        
        private void OnGetHavePicDigestTopicsOperationCompleted(object arg) {
            if ((this.GetHavePicDigestTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHavePicDigestTopicsCompleted(this, new GetHavePicDigestTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WebServiceSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePostById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeletePostById(int postId) {
            object[] results = this.Invoke("DeletePostById", new object[] {
                        postId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePostByIdAsync(int postId) {
            this.DeletePostByIdAsync(postId, null);
        }
        
        /// <remarks/>
        public void DeletePostByIdAsync(int postId, object userState) {
            if ((this.DeletePostByIdOperationCompleted == null)) {
                this.DeletePostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePostByIdOperationCompleted);
            }
            this.InvokeAsync("DeletePostById", new object[] {
                        postId}, this.DeletePostByIdOperationCompleted, userState);
        }
        
        private void OnDeletePostByIdOperationCompleted(object arg) {
            if ((this.DeletePostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePostByIdCompleted(this, new DeletePostByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("WebServiceSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTopicById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTopicById(int topicId) {
            object[] results = this.Invoke("DeleteTopicById", new object[] {
                        topicId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTopicByIdAsync(int topicId) {
            this.DeleteTopicByIdAsync(topicId, null);
        }
        
        /// <remarks/>
        public void DeleteTopicByIdAsync(int topicId, object userState) {
            if ((this.DeleteTopicByIdOperationCompleted == null)) {
                this.DeleteTopicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTopicByIdOperationCompleted);
            }
            this.InvokeAsync("DeleteTopicById", new object[] {
                        topicId}, this.DeleteTopicByIdOperationCompleted, userState);
        }
        
        private void OnDeleteTopicByIdOperationCompleted(object arg) {
            if ((this.DeleteTopicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTopicByIdCompleted(this, new DeleteTopicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopicsByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopicsByUserId(int pageIndex, int pageSize, int userId, out int recordCount) {
            object[] results = this.Invoke("GetTopicsByUserId", new object[] {
                        pageIndex,
                        pageSize,
                        userId});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicsByUserIdAsync(int pageIndex, int pageSize, int userId) {
            this.GetTopicsByUserIdAsync(pageIndex, pageSize, userId, null);
        }
        
        /// <remarks/>
        public void GetTopicsByUserIdAsync(int pageIndex, int pageSize, int userId, object userState) {
            if ((this.GetTopicsByUserIdOperationCompleted == null)) {
                this.GetTopicsByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicsByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetTopicsByUserId", new object[] {
                        pageIndex,
                        pageSize,
                        userId}, this.GetTopicsByUserIdOperationCompleted, userState);
        }
        
        private void OnGetTopicsByUserIdOperationCompleted(object arg) {
            if ((this.GetTopicsByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicsByUserIdCompleted(this, new GetTopicsByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostTopicsByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPostTopicsByUserId(int pageIndex, int pageSize, int userId, out int recordCount) {
            object[] results = this.Invoke("GetPostTopicsByUserId", new object[] {
                        pageIndex,
                        pageSize,
                        userId});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostTopicsByUserIdAsync(int pageIndex, int pageSize, int userId) {
            this.GetPostTopicsByUserIdAsync(pageIndex, pageSize, userId, null);
        }
        
        /// <remarks/>
        public void GetPostTopicsByUserIdAsync(int pageIndex, int pageSize, int userId, object userState) {
            if ((this.GetPostTopicsByUserIdOperationCompleted == null)) {
                this.GetPostTopicsByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostTopicsByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetPostTopicsByUserId", new object[] {
                        pageIndex,
                        pageSize,
                        userId}, this.GetPostTopicsByUserIdOperationCompleted, userState);
        }
        
        private void OnGetPostTopicsByUserIdOperationCompleted(object arg) {
            if ((this.GetPostTopicsByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostTopicsByUserIdCompleted(this, new GetPostTopicsByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumDigestAndAlbumCountByCsID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetForumDigestAndAlbumCountByCsID(int csId, string digestIds) {
            object[] results = this.Invoke("GetForumDigestAndAlbumCountByCsID", new object[] {
                        csId,
                        digestIds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumDigestAndAlbumCountByCsIDAsync(int csId, string digestIds) {
            this.GetForumDigestAndAlbumCountByCsIDAsync(csId, digestIds, null);
        }
        
        /// <remarks/>
        public void GetForumDigestAndAlbumCountByCsIDAsync(int csId, string digestIds, object userState) {
            if ((this.GetForumDigestAndAlbumCountByCsIDOperationCompleted == null)) {
                this.GetForumDigestAndAlbumCountByCsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumDigestAndAlbumCountByCsIDOperationCompleted);
            }
            this.InvokeAsync("GetForumDigestAndAlbumCountByCsID", new object[] {
                        csId,
                        digestIds}, this.GetForumDigestAndAlbumCountByCsIDOperationCompleted, userState);
        }
        
        private void OnGetForumDigestAndAlbumCountByCsIDOperationCompleted(object arg) {
            if ((this.GetForumDigestAndAlbumCountByCsIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumDigestAndAlbumCountByCsIDCompleted(this, new GetForumDigestAndAlbumCountByCsIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestTopicListByBrand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLatestTopicListByBrand(string clientCode, int brandId, int count, int userId, ref string forumApp) {
            object[] results = this.Invoke("GetLatestTopicListByBrand", new object[] {
                        clientCode,
                        brandId,
                        count,
                        userId,
                        forumApp});
            forumApp = ((string)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestTopicListByBrandAsync(string clientCode, int brandId, int count, int userId, string forumApp) {
            this.GetLatestTopicListByBrandAsync(clientCode, brandId, count, userId, forumApp, null);
        }
        
        /// <remarks/>
        public void GetLatestTopicListByBrandAsync(string clientCode, int brandId, int count, int userId, string forumApp, object userState) {
            if ((this.GetLatestTopicListByBrandOperationCompleted == null)) {
                this.GetLatestTopicListByBrandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestTopicListByBrandOperationCompleted);
            }
            this.InvokeAsync("GetLatestTopicListByBrand", new object[] {
                        clientCode,
                        brandId,
                        count,
                        userId,
                        forumApp}, this.GetLatestTopicListByBrandOperationCompleted, userState);
        }
        
        private void OnGetLatestTopicListByBrandOperationCompleted(object arg) {
            if ((this.GetLatestTopicListByBrandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestTopicListByBrandCompleted(this, new GetLatestTopicListByBrandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestTopicListByBrandAndImgListByFgid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLatestTopicListByBrandAndImgListByFgid(string clientCode, int brandId, int count, int userId, ref string forumApp, out TopicImgsInfo[] ImgList) {
            object[] results = this.Invoke("GetLatestTopicListByBrandAndImgListByFgid", new object[] {
                        clientCode,
                        brandId,
                        count,
                        userId,
                        forumApp});
            forumApp = ((string)(results[1]));
            ImgList = ((TopicImgsInfo[])(results[2]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestTopicListByBrandAndImgListByFgidAsync(string clientCode, int brandId, int count, int userId, string forumApp) {
            this.GetLatestTopicListByBrandAndImgListByFgidAsync(clientCode, brandId, count, userId, forumApp, null);
        }
        
        /// <remarks/>
        public void GetLatestTopicListByBrandAndImgListByFgidAsync(string clientCode, int brandId, int count, int userId, string forumApp, object userState) {
            if ((this.GetLatestTopicListByBrandAndImgListByFgidOperationCompleted == null)) {
                this.GetLatestTopicListByBrandAndImgListByFgidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestTopicListByBrandAndImgListByFgidOperationCompleted);
            }
            this.InvokeAsync("GetLatestTopicListByBrandAndImgListByFgid", new object[] {
                        clientCode,
                        brandId,
                        count,
                        userId,
                        forumApp}, this.GetLatestTopicListByBrandAndImgListByFgidOperationCompleted, userState);
        }
        
        private void OnGetLatestTopicListByBrandAndImgListByFgidOperationCompleted(object arg) {
            if ((this.GetLatestTopicListByBrandAndImgListByFgidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestTopicListByBrandAndImgListByFgidCompleted(this, new GetLatestTopicListByBrandAndImgListByFgidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampLinkBy_cb_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCampLinkBy_cb_Id(string clientCode, int userId, int cb_Id) {
            object[] results = this.Invoke("GetCampLinkBy_cb_Id", new object[] {
                        clientCode,
                        userId,
                        cb_Id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampLinkBy_cb_IdAsync(string clientCode, int userId, int cb_Id) {
            this.GetCampLinkBy_cb_IdAsync(clientCode, userId, cb_Id, null);
        }
        
        /// <remarks/>
        public void GetCampLinkBy_cb_IdAsync(string clientCode, int userId, int cb_Id, object userState) {
            if ((this.GetCampLinkBy_cb_IdOperationCompleted == null)) {
                this.GetCampLinkBy_cb_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampLinkBy_cb_IdOperationCompleted);
            }
            this.InvokeAsync("GetCampLinkBy_cb_Id", new object[] {
                        clientCode,
                        userId,
                        cb_Id}, this.GetCampLinkBy_cb_IdOperationCompleted, userState);
        }
        
        private void OnGetCampLinkBy_cb_IdOperationCompleted(object arg) {
            if ((this.GetCampLinkBy_cb_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampLinkBy_cb_IdCompleted(this, new GetCampLinkBy_cb_IdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampLinkBy_bs_Id", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCampLinkBy_bs_Id(string clientCode, int userId, int bs_Id) {
            object[] results = this.Invoke("GetCampLinkBy_bs_Id", new object[] {
                        clientCode,
                        userId,
                        bs_Id});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCampLinkBy_bs_IdAsync(string clientCode, int userId, int bs_Id) {
            this.GetCampLinkBy_bs_IdAsync(clientCode, userId, bs_Id, null);
        }
        
        /// <remarks/>
        public void GetCampLinkBy_bs_IdAsync(string clientCode, int userId, int bs_Id, object userState) {
            if ((this.GetCampLinkBy_bs_IdOperationCompleted == null)) {
                this.GetCampLinkBy_bs_IdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampLinkBy_bs_IdOperationCompleted);
            }
            this.InvokeAsync("GetCampLinkBy_bs_Id", new object[] {
                        clientCode,
                        userId,
                        bs_Id}, this.GetCampLinkBy_bs_IdOperationCompleted, userState);
        }
        
        private void OnGetCampLinkBy_bs_IdOperationCompleted(object arg) {
            if ((this.GetCampLinkBy_bs_IdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCampLinkBy_bs_IdCompleted(this, new GetCampLinkBy_bs_IdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDegestTopicListBy_BsId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDegestTopicListBy_BsId(string clientCode, int master_brand_id, int count, int userId, ref System.Data.DataTable forumList) {
            object[] results = this.Invoke("GetDegestTopicListBy_BsId", new object[] {
                        clientCode,
                        master_brand_id,
                        count,
                        userId,
                        forumList});
            forumList = ((System.Data.DataTable)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDegestTopicListBy_BsIdAsync(string clientCode, int master_brand_id, int count, int userId, System.Data.DataTable forumList) {
            this.GetDegestTopicListBy_BsIdAsync(clientCode, master_brand_id, count, userId, forumList, null);
        }
        
        /// <remarks/>
        public void GetDegestTopicListBy_BsIdAsync(string clientCode, int master_brand_id, int count, int userId, System.Data.DataTable forumList, object userState) {
            if ((this.GetDegestTopicListBy_BsIdOperationCompleted == null)) {
                this.GetDegestTopicListBy_BsIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDegestTopicListBy_BsIdOperationCompleted);
            }
            this.InvokeAsync("GetDegestTopicListBy_BsId", new object[] {
                        clientCode,
                        master_brand_id,
                        count,
                        userId,
                        forumList}, this.GetDegestTopicListBy_BsIdOperationCompleted, userState);
        }
        
        private void OnGetDegestTopicListBy_BsIdOperationCompleted(object arg) {
            if ((this.GetDegestTopicListBy_BsIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDegestTopicListBy_BsIdCompleted(this, new GetDegestTopicListBy_BsIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDegestTopicListBy_CbId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetDegestTopicListBy_CbId(string clientCode, int csid, int count, int userId, ref System.Data.DataTable forumList) {
            object[] results = this.Invoke("GetDegestTopicListBy_CbId", new object[] {
                        clientCode,
                        csid,
                        count,
                        userId,
                        forumList});
            forumList = ((System.Data.DataTable)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetDegestTopicListBy_CbIdAsync(string clientCode, int csid, int count, int userId, System.Data.DataTable forumList) {
            this.GetDegestTopicListBy_CbIdAsync(clientCode, csid, count, userId, forumList, null);
        }
        
        /// <remarks/>
        public void GetDegestTopicListBy_CbIdAsync(string clientCode, int csid, int count, int userId, System.Data.DataTable forumList, object userState) {
            if ((this.GetDegestTopicListBy_CbIdOperationCompleted == null)) {
                this.GetDegestTopicListBy_CbIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDegestTopicListBy_CbIdOperationCompleted);
            }
            this.InvokeAsync("GetDegestTopicListBy_CbId", new object[] {
                        clientCode,
                        csid,
                        count,
                        userId,
                        forumList}, this.GetDegestTopicListBy_CbIdOperationCompleted, userState);
        }
        
        private void OnGetDegestTopicListBy_CbIdOperationCompleted(object arg) {
            if ((this.GetDegestTopicListBy_CbIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDegestTopicListBy_CbIdCompleted(this, new GetDegestTopicListBy_CbIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumsOrderByPlayCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumsOrderByPlayCount(int TopCount) {
            object[] results = this.Invoke("GetForumsOrderByPlayCount", new object[] {
                        TopCount});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumsOrderByPlayCountAsync(int TopCount) {
            this.GetForumsOrderByPlayCountAsync(TopCount, null);
        }
        
        /// <remarks/>
        public void GetForumsOrderByPlayCountAsync(int TopCount, object userState) {
            if ((this.GetForumsOrderByPlayCountOperationCompleted == null)) {
                this.GetForumsOrderByPlayCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumsOrderByPlayCountOperationCompleted);
            }
            this.InvokeAsync("GetForumsOrderByPlayCount", new object[] {
                        TopCount}, this.GetForumsOrderByPlayCountOperationCompleted, userState);
        }
        
        private void OnGetForumsOrderByPlayCountOperationCompleted(object arg) {
            if ((this.GetForumsOrderByPlayCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumsOrderByPlayCountCompleted(this, new GetForumsOrderByPlayCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsersOrderByPlayCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetUsersOrderByPlayCount(int TopCount) {
            object[] results = this.Invoke("GetUsersOrderByPlayCount", new object[] {
                        TopCount});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersOrderByPlayCountAsync(int TopCount) {
            this.GetUsersOrderByPlayCountAsync(TopCount, null);
        }
        
        /// <remarks/>
        public void GetUsersOrderByPlayCountAsync(int TopCount, object userState) {
            if ((this.GetUsersOrderByPlayCountOperationCompleted == null)) {
                this.GetUsersOrderByPlayCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOrderByPlayCountOperationCompleted);
            }
            this.InvokeAsync("GetUsersOrderByPlayCount", new object[] {
                        TopCount}, this.GetUsersOrderByPlayCountOperationCompleted, userState);
        }
        
        private void OnGetUsersOrderByPlayCountOperationCompleted(object arg) {
            if ((this.GetUsersOrderByPlayCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersOrderByPlayCountCompleted(this, new GetUsersOrderByPlayCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCityPlayCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCityPlayCount() {
            object[] results = this.Invoke("GetCityPlayCount", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCityPlayCountAsync() {
            this.GetCityPlayCountAsync(null);
        }
        
        /// <remarks/>
        public void GetCityPlayCountAsync(object userState) {
            if ((this.GetCityPlayCountOperationCompleted == null)) {
                this.GetCityPlayCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityPlayCountOperationCompleted);
            }
            this.InvokeAsync("GetCityPlayCount", new object[0], this.GetCityPlayCountOperationCompleted, userState);
        }
        
        private void OnGetCityPlayCountOperationCompleted(object arg) {
            if ((this.GetCityPlayCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityPlayCountCompleted(this, new GetCityPlayCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumPlayTopic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumPlayTopic(int pageIndex, int pageSize, int cityId, int cId, int orderBy, out int recordCount) {
            object[] results = this.Invoke("GetForumPlayTopic", new object[] {
                        pageIndex,
                        pageSize,
                        cityId,
                        cId,
                        orderBy});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumPlayTopicAsync(int pageIndex, int pageSize, int cityId, int cId, int orderBy) {
            this.GetForumPlayTopicAsync(pageIndex, pageSize, cityId, cId, orderBy, null);
        }
        
        /// <remarks/>
        public void GetForumPlayTopicAsync(int pageIndex, int pageSize, int cityId, int cId, int orderBy, object userState) {
            if ((this.GetForumPlayTopicOperationCompleted == null)) {
                this.GetForumPlayTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumPlayTopicOperationCompleted);
            }
            this.InvokeAsync("GetForumPlayTopic", new object[] {
                        pageIndex,
                        pageSize,
                        cityId,
                        cId,
                        orderBy}, this.GetForumPlayTopicOperationCompleted, userState);
        }
        
        private void OnGetForumPlayTopicOperationCompleted(object arg) {
            if ((this.GetForumPlayTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumPlayTopicCompleted(this, new GetForumPlayTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLatestPlayTopics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetLatestPlayTopics(int pageIndex, int pageSize, int cityId, out int recordCount) {
            object[] results = this.Invoke("GetLatestPlayTopics", new object[] {
                        pageIndex,
                        pageSize,
                        cityId});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestPlayTopicsAsync(int pageIndex, int pageSize, int cityId) {
            this.GetLatestPlayTopicsAsync(pageIndex, pageSize, cityId, null);
        }
        
        /// <remarks/>
        public void GetLatestPlayTopicsAsync(int pageIndex, int pageSize, int cityId, object userState) {
            if ((this.GetLatestPlayTopicsOperationCompleted == null)) {
                this.GetLatestPlayTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestPlayTopicsOperationCompleted);
            }
            this.InvokeAsync("GetLatestPlayTopics", new object[] {
                        pageIndex,
                        pageSize,
                        cityId}, this.GetLatestPlayTopicsOperationCompleted, userState);
        }
        
        private void OnGetLatestPlayTopicsOperationCompleted(object arg) {
            if ((this.GetLatestPlayTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestPlayTopicsCompleted(this, new GetLatestPlayTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumPlayTopicBySerch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumPlayTopicBySerch(int pageIndex, int pageSize, int cityId, int cId, string searchKey, out int recordCount) {
            object[] results = this.Invoke("GetForumPlayTopicBySerch", new object[] {
                        pageIndex,
                        pageSize,
                        cityId,
                        cId,
                        searchKey});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumPlayTopicBySerchAsync(int pageIndex, int pageSize, int cityId, int cId, string searchKey) {
            this.GetForumPlayTopicBySerchAsync(pageIndex, pageSize, cityId, cId, searchKey, null);
        }
        
        /// <remarks/>
        public void GetForumPlayTopicBySerchAsync(int pageIndex, int pageSize, int cityId, int cId, string searchKey, object userState) {
            if ((this.GetForumPlayTopicBySerchOperationCompleted == null)) {
                this.GetForumPlayTopicBySerchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumPlayTopicBySerchOperationCompleted);
            }
            this.InvokeAsync("GetForumPlayTopicBySerch", new object[] {
                        pageIndex,
                        pageSize,
                        cityId,
                        cId,
                        searchKey}, this.GetForumPlayTopicBySerchOperationCompleted, userState);
        }
        
        private void OnGetForumPlayTopicBySerchOperationCompleted(object arg) {
            if ((this.GetForumPlayTopicBySerchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumPlayTopicBySerchCompleted(this, new GetForumPlayTopicBySerchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopicInfoByTidForCheYiSou", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopicInfoByTidForCheYiSou(string tidListString) {
            object[] results = this.Invoke("GetTopicInfoByTidForCheYiSou", new object[] {
                        tidListString});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicInfoByTidForCheYiSouAsync(string tidListString) {
            this.GetTopicInfoByTidForCheYiSouAsync(tidListString, null);
        }
        
        /// <remarks/>
        public void GetTopicInfoByTidForCheYiSouAsync(string tidListString, object userState) {
            if ((this.GetTopicInfoByTidForCheYiSouOperationCompleted == null)) {
                this.GetTopicInfoByTidForCheYiSouOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicInfoByTidForCheYiSouOperationCompleted);
            }
            this.InvokeAsync("GetTopicInfoByTidForCheYiSou", new object[] {
                        tidListString}, this.GetTopicInfoByTidForCheYiSouOperationCompleted, userState);
        }
        
        private void OnGetTopicInfoByTidForCheYiSouOperationCompleted(object arg) {
            if ((this.GetTopicInfoByTidForCheYiSouCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicInfoByTidForCheYiSouCompleted(this, new GetTopicInfoByTidForCheYiSouCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopicListForPageForZJY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopicListForPageForZJY(int pageIndex, int pageSize, out int totalRecords) {
            object[] results = this.Invoke("GetTopicListForPageForZJY", new object[] {
                        pageIndex,
                        pageSize});
            totalRecords = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicListForPageForZJYAsync(int pageIndex, int pageSize) {
            this.GetTopicListForPageForZJYAsync(pageIndex, pageSize, null);
        }
        
        /// <remarks/>
        public void GetTopicListForPageForZJYAsync(int pageIndex, int pageSize, object userState) {
            if ((this.GetTopicListForPageForZJYOperationCompleted == null)) {
                this.GetTopicListForPageForZJYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicListForPageForZJYOperationCompleted);
            }
            this.InvokeAsync("GetTopicListForPageForZJY", new object[] {
                        pageIndex,
                        pageSize}, this.GetTopicListForPageForZJYOperationCompleted, userState);
        }
        
        private void OnGetTopicListForPageForZJYOperationCompleted(object arg) {
            if ((this.GetTopicListForPageForZJYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicListForPageForZJYCompleted(this, new GetTopicListForPageForZJYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTopicByTidForZJY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTopicByTidForZJY(int tid) {
            object[] results = this.Invoke("GetTopicByTidForZJY", new object[] {
                        tid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicByTidForZJYAsync(int tid) {
            this.GetTopicByTidForZJYAsync(tid, null);
        }
        
        /// <remarks/>
        public void GetTopicByTidForZJYAsync(int tid, object userState) {
            if ((this.GetTopicByTidForZJYOperationCompleted == null)) {
                this.GetTopicByTidForZJYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicByTidForZJYOperationCompleted);
            }
            this.InvokeAsync("GetTopicByTidForZJY", new object[] {
                        tid}, this.GetTopicByTidForZJYOperationCompleted, userState);
        }
        
        private void OnGetTopicByTidForZJYOperationCompleted(object arg) {
            if ((this.GetTopicByTidForZJYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicByTidForZJYCompleted(this, new GetTopicByTidForZJYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPostByTidForZJY", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetPostByTidForZJY(int tid) {
            object[] results = this.Invoke("GetPostByTidForZJY", new object[] {
                        tid});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostByTidForZJYAsync(int tid) {
            this.GetPostByTidForZJYAsync(tid, null);
        }
        
        /// <remarks/>
        public void GetPostByTidForZJYAsync(int tid, object userState) {
            if ((this.GetPostByTidForZJYOperationCompleted == null)) {
                this.GetPostByTidForZJYOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostByTidForZJYOperationCompleted);
            }
            this.InvokeAsync("GetPostByTidForZJY", new object[] {
                        tid}, this.GetPostByTidForZJYOperationCompleted, userState);
        }
        
        private void OnGetPostByTidForZJYOperationCompleted(object arg) {
            if ((this.GetPostByTidForZJYCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostByTidForZJYCompleted(this, new GetPostByTidForZJYCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateRedirectTopic", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateRedirectTopic(int id, string forumParms, string title, string content, int userId, string userName, string userIp) {
            object[] results = this.Invoke("CreateRedirectTopic", new object[] {
                        id,
                        forumParms,
                        title,
                        content,
                        userId,
                        userName,
                        userIp});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRedirectTopicAsync(int id, string forumParms, string title, string content, int userId, string userName, string userIp) {
            this.CreateRedirectTopicAsync(id, forumParms, title, content, userId, userName, userIp, null);
        }
        
        /// <remarks/>
        public void CreateRedirectTopicAsync(int id, string forumParms, string title, string content, int userId, string userName, string userIp, object userState) {
            if ((this.CreateRedirectTopicOperationCompleted == null)) {
                this.CreateRedirectTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRedirectTopicOperationCompleted);
            }
            this.InvokeAsync("CreateRedirectTopic", new object[] {
                        id,
                        forumParms,
                        title,
                        content,
                        userId,
                        userName,
                        userIp}, this.CreateRedirectTopicOperationCompleted, userState);
        }
        
        private void OnCreateRedirectTopicOperationCompleted(object arg) {
            if ((this.CreateRedirectTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRedirectTopicCompleted(this, new CreateRedirectTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumDigestTopics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumDigestTopics(int pageIndex, int pageSize, out int recordCount) {
            object[] results = this.Invoke("GetForumDigestTopics", new object[] {
                        pageIndex,
                        pageSize});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumDigestTopicsAsync(int pageIndex, int pageSize) {
            this.GetForumDigestTopicsAsync(pageIndex, pageSize, null);
        }
        
        /// <remarks/>
        public void GetForumDigestTopicsAsync(int pageIndex, int pageSize, object userState) {
            if ((this.GetForumDigestTopicsOperationCompleted == null)) {
                this.GetForumDigestTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumDigestTopicsOperationCompleted);
            }
            this.InvokeAsync("GetForumDigestTopics", new object[] {
                        pageIndex,
                        pageSize}, this.GetForumDigestTopicsOperationCompleted, userState);
        }
        
        private void OnGetForumDigestTopicsOperationCompleted(object arg) {
            if ((this.GetForumDigestTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumDigestTopicsCompleted(this, new GetForumDigestTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRecommendTopicsByDigestAndSerialId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetRecommendTopicsByDigestAndSerialId(string digestsStr, string serialIdsStr) {
            object[] results = this.Invoke("GetRecommendTopicsByDigestAndSerialId", new object[] {
                        digestsStr,
                        serialIdsStr});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetRecommendTopicsByDigestAndSerialIdAsync(string digestsStr, string serialIdsStr) {
            this.GetRecommendTopicsByDigestAndSerialIdAsync(digestsStr, serialIdsStr, null);
        }
        
        /// <remarks/>
        public void GetRecommendTopicsByDigestAndSerialIdAsync(string digestsStr, string serialIdsStr, object userState) {
            if ((this.GetRecommendTopicsByDigestAndSerialIdOperationCompleted == null)) {
                this.GetRecommendTopicsByDigestAndSerialIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecommendTopicsByDigestAndSerialIdOperationCompleted);
            }
            this.InvokeAsync("GetRecommendTopicsByDigestAndSerialId", new object[] {
                        digestsStr,
                        serialIdsStr}, this.GetRecommendTopicsByDigestAndSerialIdOperationCompleted, userState);
        }
        
        private void OnGetRecommendTopicsByDigestAndSerialIdOperationCompleted(object arg) {
            if ((this.GetRecommendTopicsByDigestAndSerialIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecommendTopicsByDigestAndSerialIdCompleted(this, new GetRecommendTopicsByDigestAndSerialIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetForumGroupStatisticsByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetForumGroupStatisticsByDate(System.DateTime date, string type) {
            object[] results = this.Invoke("GetForumGroupStatisticsByDate", new object[] {
                        date,
                        type});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetForumGroupStatisticsByDateAsync(System.DateTime date, string type) {
            this.GetForumGroupStatisticsByDateAsync(date, type, null);
        }
        
        /// <remarks/>
        public void GetForumGroupStatisticsByDateAsync(System.DateTime date, string type, object userState) {
            if ((this.GetForumGroupStatisticsByDateOperationCompleted == null)) {
                this.GetForumGroupStatisticsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForumGroupStatisticsByDateOperationCompleted);
            }
            this.InvokeAsync("GetForumGroupStatisticsByDate", new object[] {
                        date,
                        type}, this.GetForumGroupStatisticsByDateOperationCompleted, userState);
        }
        
        private void OnGetForumGroupStatisticsByDateOperationCompleted(object arg) {
            if ((this.GetForumGroupStatisticsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForumGroupStatisticsByDateCompleted(this, new GetForumGroupStatisticsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGlobalDigestTopicForPage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetGlobalDigestTopicForPage(int pageSize, int pageIndex, out int recordCount) {
            object[] results = this.Invoke("GetGlobalDigestTopicForPage", new object[] {
                        pageSize,
                        pageIndex});
            recordCount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetGlobalDigestTopicForPageAsync(int pageSize, int pageIndex) {
            this.GetGlobalDigestTopicForPageAsync(pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetGlobalDigestTopicForPageAsync(int pageSize, int pageIndex, object userState) {
            if ((this.GetGlobalDigestTopicForPageOperationCompleted == null)) {
                this.GetGlobalDigestTopicForPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGlobalDigestTopicForPageOperationCompleted);
            }
            this.InvokeAsync("GetGlobalDigestTopicForPage", new object[] {
                        pageSize,
                        pageIndex}, this.GetGlobalDigestTopicForPageOperationCompleted, userState);
        }
        
        private void OnGetGlobalDigestTopicForPageOperationCompleted(object arg) {
            if ((this.GetGlobalDigestTopicForPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGlobalDigestTopicForPageCompleted(this, new GetGlobalDigestTopicForPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class WebServiceSoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string webServiceKeyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string WebServiceKey {
            get {
                return this.webServiceKeyField;
            }
            set {
                this.webServiceKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AttachmentSimple {
        
        private int tidField;
        
        private int aidField;
        
        private string fileNameField;
        
        private string smallUrlField;
        
        private string showUrlField;
        
        private string sourceUrlField;
        
        /// <remarks/>
        public int Tid {
            get {
                return this.tidField;
            }
            set {
                this.tidField = value;
            }
        }
        
        /// <remarks/>
        public int Aid {
            get {
                return this.aidField;
            }
            set {
                this.aidField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string SmallUrl {
            get {
                return this.smallUrlField;
            }
            set {
                this.smallUrlField = value;
            }
        }
        
        /// <remarks/>
        public string ShowUrl {
            get {
                return this.showUrlField;
            }
            set {
                this.showUrlField = value;
            }
        }
        
        /// <remarks/>
        public string SourceUrl {
            get {
                return this.sourceUrlField;
            }
            set {
                this.sourceUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TopicImgsInfo {
        
        private int tidField;
        
        private AttachmentSimple[] imgListField;
        
        private int imgCountField;
        
        /// <remarks/>
        public int Tid {
            get {
                return this.tidField;
            }
            set {
                this.tidField = value;
            }
        }
        
        /// <remarks/>
        public AttachmentSimple[] ImgList {
            get {
                return this.imgListField;
            }
            set {
                this.imgListField = value;
            }
        }
        
        /// <remarks/>
        public int ImgCount {
            get {
                return this.imgCountField;
            }
            set {
                this.imgCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DictionaryEntry {
        
        private object keyField;
        
        private object valueField;
        
        /// <remarks/>
        public object Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetUserTraceForumListCompletedEventHandler(object sender, GetUserTraceForumListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTraceForumListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTraceForumListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetFavoriteForumListByUserIdCompletedEventHandler(object sender, GetFavoriteForumListByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFavoriteForumListByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFavoriteForumListByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetFavoriteTopicListByUserIdCompletedEventHandler(object sender, GetFavoriteTopicListByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFavoriteTopicListByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFavoriteTopicListByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int topicCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateForumsFavoriteCompletedEventHandler(object sender, CreateForumsFavoriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateForumsFavoriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateForumsFavoriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateTopicFavoriteCompletedEventHandler(object sender, CreateTopicFavoriteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTopicFavoriteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTopicFavoriteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteForumsFavoriteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteTopicFavoriteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetHaiLiangWeiGuiPostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateUserInfoToForumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetUserForumUrlCompletedEventHandler(object sender, GetUserForumUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserForumUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserForumUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumTodayPostCountCompletedEventHandler(object sender, GetForumTodayPostCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumTodayPostCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumTodayPostCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteSignAndNicknameByUserIdCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumYesterdayPostCountCompletedEventHandler(object sender, GetForumYesterdayPostCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumYesterdayPostCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumYesterdayPostCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumByCityIdCompletedEventHandler(object sender, GetForumByCityIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumByCityIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumByCityIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumByProvinceIdCompletedEventHandler(object sender, GetForumByProvinceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumByProvinceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumByProvinceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumBySerialIdCompletedEventHandler(object sender, GetForumBySerialIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumBySerialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumBySerialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetUserFourmInfoCompletedEventHandler(object sender, GetUserFourmInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFourmInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFourmInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumGroupTopicListSummaryForXMLStringCompletedEventHandler(object sender, GetForumGroupTopicListSummaryForXMLStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumGroupTopicListSummaryForXMLStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumGroupTopicListSummaryForXMLStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumManagerCompletedEventHandler(object sender, GetForumManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateTopicSpamFilterCompletedEventHandler(object sender, CreateTopicSpamFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTopicSpamFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTopicSpamFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateReplySpamFilterCompletedEventHandler(object sender, CreateReplySpamFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateReplySpamFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateReplySpamFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateQuoteReplySpamFilterCompletedEventHandler(object sender, CreateQuoteReplySpamFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateQuoteReplySpamFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateQuoteReplySpamFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorMsg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumAlbumCategoryCompletedEventHandler(object sender, GetForumAlbumCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumAlbumCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumAlbumCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DictionaryEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DictionaryEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumAlbumCompletedEventHandler(object sender, GetForumAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPhotoListByAlbumIdCompletedEventHandler(object sender, GetPhotoListByAlbumIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhotoListByAlbumIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhotoListByAlbumIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumsByFgidCompletedEventHandler(object sender, GetForumsByFgidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumsByFgidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumsByFgidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPostListForXMLStringCompletedEventHandler(object sender, GetPostListForXMLStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostListForXMLStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostListForXMLStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRecords {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumGroupTopicListForXMLStringCompletedEventHandler(object sender, GetForumGroupTopicListForXMLStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumGroupTopicListForXMLStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumGroupTopicListForXMLStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalTopics {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTopicListByFgidCompletedEventHandler(object sender, GetTopicListByFgidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicListByFgidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicListByFgidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTopicListAndImgListByFgidCompletedEventHandler(object sender, GetTopicListAndImgListByFgidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicListAndImgListByFgidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicListAndImgListByFgidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public TopicImgsInfo[] ImgList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TopicImgsInfo[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumGroupInfoListCompletedEventHandler(object sender, GetForumGroupInfoListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumGroupInfoListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumGroupInfoListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPostListCustomWidthForXMLStringCompletedEventHandler(object sender, GetPostListCustomWidthForXMLStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostListCustomWidthForXMLStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostListCustomWidthForXMLStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRecords {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPostListCustomWidthByPosterIdForXMLStringCompletedEventHandler(object sender, GetPostListCustomWidthByPosterIdForXMLStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostListCustomWidthByPosterIdForXMLStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostListCustomWidthByPosterIdForXMLStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRecords {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTopicListByGuidCompletedEventHandler(object sender, GetTopicListByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicListByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicListByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetHavePicDigestTopicsCompletedEventHandler(object sender, GetHavePicDigestTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHavePicDigestTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHavePicDigestTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeletePostByIdCompletedEventHandler(object sender, DeletePostByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePostByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePostByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DeleteTopicByIdCompletedEventHandler(object sender, DeleteTopicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTopicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTopicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTopicsByUserIdCompletedEventHandler(object sender, GetTopicsByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicsByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicsByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPostTopicsByUserIdCompletedEventHandler(object sender, GetPostTopicsByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostTopicsByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostTopicsByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumDigestAndAlbumCountByCsIDCompletedEventHandler(object sender, GetForumDigestAndAlbumCountByCsIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumDigestAndAlbumCountByCsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumDigestAndAlbumCountByCsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetLatestTopicListByBrandCompletedEventHandler(object sender, GetLatestTopicListByBrandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestTopicListByBrandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestTopicListByBrandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string forumApp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetLatestTopicListByBrandAndImgListByFgidCompletedEventHandler(object sender, GetLatestTopicListByBrandAndImgListByFgidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestTopicListByBrandAndImgListByFgidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestTopicListByBrandAndImgListByFgidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string forumApp {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public TopicImgsInfo[] ImgList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TopicImgsInfo[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCampLinkBy_cb_IdCompletedEventHandler(object sender, GetCampLinkBy_cb_IdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampLinkBy_cb_IdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampLinkBy_cb_IdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCampLinkBy_bs_IdCompletedEventHandler(object sender, GetCampLinkBy_bs_IdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCampLinkBy_bs_IdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCampLinkBy_bs_IdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDegestTopicListBy_BsIdCompletedEventHandler(object sender, GetDegestTopicListBy_BsIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDegestTopicListBy_BsIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDegestTopicListBy_BsIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable forumList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDegestTopicListBy_CbIdCompletedEventHandler(object sender, GetDegestTopicListBy_CbIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDegestTopicListBy_CbIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDegestTopicListBy_CbIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataTable forumList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumsOrderByPlayCountCompletedEventHandler(object sender, GetForumsOrderByPlayCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumsOrderByPlayCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumsOrderByPlayCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetUsersOrderByPlayCountCompletedEventHandler(object sender, GetUsersOrderByPlayCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersOrderByPlayCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersOrderByPlayCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCityPlayCountCompletedEventHandler(object sender, GetCityPlayCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityPlayCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityPlayCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumPlayTopicCompletedEventHandler(object sender, GetForumPlayTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumPlayTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumPlayTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetLatestPlayTopicsCompletedEventHandler(object sender, GetLatestPlayTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestPlayTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestPlayTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumPlayTopicBySerchCompletedEventHandler(object sender, GetForumPlayTopicBySerchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumPlayTopicBySerchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumPlayTopicBySerchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTopicInfoByTidForCheYiSouCompletedEventHandler(object sender, GetTopicInfoByTidForCheYiSouCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicInfoByTidForCheYiSouCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicInfoByTidForCheYiSouCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTopicListForPageForZJYCompletedEventHandler(object sender, GetTopicListForPageForZJYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicListForPageForZJYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicListForPageForZJYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRecords {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetTopicByTidForZJYCompletedEventHandler(object sender, GetTopicByTidForZJYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicByTidForZJYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicByTidForZJYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetPostByTidForZJYCompletedEventHandler(object sender, GetPostByTidForZJYCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostByTidForZJYCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostByTidForZJYCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateRedirectTopicCompletedEventHandler(object sender, CreateRedirectTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRedirectTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRedirectTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumDigestTopicsCompletedEventHandler(object sender, GetForumDigestTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumDigestTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumDigestTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetRecommendTopicsByDigestAndSerialIdCompletedEventHandler(object sender, GetRecommendTopicsByDigestAndSerialIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecommendTopicsByDigestAndSerialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecommendTopicsByDigestAndSerialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetForumGroupStatisticsByDateCompletedEventHandler(object sender, GetForumGroupStatisticsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForumGroupStatisticsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForumGroupStatisticsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetGlobalDigestTopicForPageCompletedEventHandler(object sender, GetGlobalDigestTopicForPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGlobalDigestTopicForPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGlobalDigestTopicForPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int recordCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591