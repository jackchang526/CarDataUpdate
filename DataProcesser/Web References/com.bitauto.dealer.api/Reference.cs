//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.CarDataUpdate.DataProcesser.com.bitauto.dealer.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VendorInforSoap", Namespace="http://tempuri.org/")]
    public partial class VendorInfor : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetVendorNewsListBySerialIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorNewsListByBrandIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListBySerialIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListByBrandIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListBySerialIdWithMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDealerListByCityIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorCountByCityIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorListMapInforOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCarIDSalePriceBySerialIDDealerIDOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VendorInfor() {
            this.Url = global::BitAuto.CarDataUpdate.DataProcesser.Properties.Settings.Default.DataProcesser_com_bitauto_dealer_api1_VendorInfor;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetVendorNewsListBySerialIdCompletedEventHandler GetVendorNewsListBySerialIdCompleted;
        
        /// <remarks/>
        public event GetVendorNewsListByBrandIdCompletedEventHandler GetVendorNewsListByBrandIdCompleted;
        
        /// <remarks/>
        public event GetVendorInfoByIDCompletedEventHandler GetVendorInfoByIDCompleted;
        
        /// <remarks/>
        public event GetVendorListBySerialIdCompletedEventHandler GetVendorListBySerialIdCompleted;
        
        /// <remarks/>
        public event GetVendorListByBrandIdCompletedEventHandler GetVendorListByBrandIdCompleted;
        
        /// <remarks/>
        public event GetVendorListBySerialIdWithMapCompletedEventHandler GetVendorListBySerialIdWithMapCompleted;
        
        /// <remarks/>
        public event GetDealerListByCityIdCompletedEventHandler GetDealerListByCityIdCompleted;
        
        /// <remarks/>
        public event GetVendorCountByCityIdCompletedEventHandler GetVendorCountByCityIdCompleted;
        
        /// <remarks/>
        public event GetVendorListMapInforCompletedEventHandler GetVendorListMapInforCompleted;
        
        /// <remarks/>
        public event GetCarIDSalePriceBySerialIDDealerIDCompletedEventHandler GetCarIDSalePriceBySerialIDDealerIDCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorNewsListBySerialId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorNewsListBySerialId(int SeriesID, int ProvinceID, int CityID, int RowCount, string ProductName) {
            object[] results = this.Invoke("GetVendorNewsListBySerialId", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        RowCount,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorNewsListBySerialIdAsync(int SeriesID, int ProvinceID, int CityID, int RowCount, string ProductName) {
            this.GetVendorNewsListBySerialIdAsync(SeriesID, ProvinceID, CityID, RowCount, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorNewsListBySerialIdAsync(int SeriesID, int ProvinceID, int CityID, int RowCount, string ProductName, object userState) {
            if ((this.GetVendorNewsListBySerialIdOperationCompleted == null)) {
                this.GetVendorNewsListBySerialIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorNewsListBySerialIdOperationCompleted);
            }
            this.InvokeAsync("GetVendorNewsListBySerialId", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        RowCount,
                        ProductName}, this.GetVendorNewsListBySerialIdOperationCompleted, userState);
        }
        
        private void OnGetVendorNewsListBySerialIdOperationCompleted(object arg) {
            if ((this.GetVendorNewsListBySerialIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorNewsListBySerialIdCompleted(this, new GetVendorNewsListBySerialIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorNewsListByBrandId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorNewsListByBrandId(int BrandID, int ProvinceID, int CityID, string ProductName) {
            object[] results = this.Invoke("GetVendorNewsListByBrandId", new object[] {
                        BrandID,
                        ProvinceID,
                        CityID,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorNewsListByBrandIdAsync(int BrandID, int ProvinceID, int CityID, string ProductName) {
            this.GetVendorNewsListByBrandIdAsync(BrandID, ProvinceID, CityID, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorNewsListByBrandIdAsync(int BrandID, int ProvinceID, int CityID, string ProductName, object userState) {
            if ((this.GetVendorNewsListByBrandIdOperationCompleted == null)) {
                this.GetVendorNewsListByBrandIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorNewsListByBrandIdOperationCompleted);
            }
            this.InvokeAsync("GetVendorNewsListByBrandId", new object[] {
                        BrandID,
                        ProvinceID,
                        CityID,
                        ProductName}, this.GetVendorNewsListByBrandIdOperationCompleted, userState);
        }
        
        private void OnGetVendorNewsListByBrandIdOperationCompleted(object arg) {
            if ((this.GetVendorNewsListByBrandIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorNewsListByBrandIdCompleted(this, new GetVendorNewsListByBrandIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorInfoByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public VendorInfoEntity GetVendorInfoByID(int DealerID) {
            object[] results = this.Invoke("GetVendorInfoByID", new object[] {
                        DealerID});
            return ((VendorInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorInfoByIDAsync(int DealerID) {
            this.GetVendorInfoByIDAsync(DealerID, null);
        }
        
        /// <remarks/>
        public void GetVendorInfoByIDAsync(int DealerID, object userState) {
            if ((this.GetVendorInfoByIDOperationCompleted == null)) {
                this.GetVendorInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorInfoByIDOperationCompleted);
            }
            this.InvokeAsync("GetVendorInfoByID", new object[] {
                        DealerID}, this.GetVendorInfoByIDOperationCompleted, userState);
        }
        
        private void OnGetVendorInfoByIDOperationCompleted(object arg) {
            if ((this.GetVendorInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorInfoByIDCompleted(this, new GetVendorInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListBySerialId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorListBySerialId(int SerialID, int ProvinceID, int CityID, string ProductName) {
            object[] results = this.Invoke("GetVendorListBySerialId", new object[] {
                        SerialID,
                        ProvinceID,
                        CityID,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListBySerialIdAsync(int SerialID, int ProvinceID, int CityID, string ProductName) {
            this.GetVendorListBySerialIdAsync(SerialID, ProvinceID, CityID, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListBySerialIdAsync(int SerialID, int ProvinceID, int CityID, string ProductName, object userState) {
            if ((this.GetVendorListBySerialIdOperationCompleted == null)) {
                this.GetVendorListBySerialIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListBySerialIdOperationCompleted);
            }
            this.InvokeAsync("GetVendorListBySerialId", new object[] {
                        SerialID,
                        ProvinceID,
                        CityID,
                        ProductName}, this.GetVendorListBySerialIdOperationCompleted, userState);
        }
        
        private void OnGetVendorListBySerialIdOperationCompleted(object arg) {
            if ((this.GetVendorListBySerialIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListBySerialIdCompleted(this, new GetVendorListBySerialIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListByBrandId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorListByBrandId(int BrandID, int ProvinceID, int CityID, string ProductName) {
            object[] results = this.Invoke("GetVendorListByBrandId", new object[] {
                        BrandID,
                        ProvinceID,
                        CityID,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListByBrandIdAsync(int BrandID, int ProvinceID, int CityID, string ProductName) {
            this.GetVendorListByBrandIdAsync(BrandID, ProvinceID, CityID, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListByBrandIdAsync(int BrandID, int ProvinceID, int CityID, string ProductName, object userState) {
            if ((this.GetVendorListByBrandIdOperationCompleted == null)) {
                this.GetVendorListByBrandIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListByBrandIdOperationCompleted);
            }
            this.InvokeAsync("GetVendorListByBrandId", new object[] {
                        BrandID,
                        ProvinceID,
                        CityID,
                        ProductName}, this.GetVendorListByBrandIdOperationCompleted, userState);
        }
        
        private void OnGetVendorListByBrandIdOperationCompleted(object arg) {
            if ((this.GetVendorListByBrandIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListByBrandIdCompleted(this, new GetVendorListByBrandIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListBySerialIdWithMap", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorListBySerialIdWithMap(int SerialID, int ProvinceID, int CityID, string ProductName) {
            object[] results = this.Invoke("GetVendorListBySerialIdWithMap", new object[] {
                        SerialID,
                        ProvinceID,
                        CityID,
                        ProductName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListBySerialIdWithMapAsync(int SerialID, int ProvinceID, int CityID, string ProductName) {
            this.GetVendorListBySerialIdWithMapAsync(SerialID, ProvinceID, CityID, ProductName, null);
        }
        
        /// <remarks/>
        public void GetVendorListBySerialIdWithMapAsync(int SerialID, int ProvinceID, int CityID, string ProductName, object userState) {
            if ((this.GetVendorListBySerialIdWithMapOperationCompleted == null)) {
                this.GetVendorListBySerialIdWithMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListBySerialIdWithMapOperationCompleted);
            }
            this.InvokeAsync("GetVendorListBySerialIdWithMap", new object[] {
                        SerialID,
                        ProvinceID,
                        CityID,
                        ProductName}, this.GetVendorListBySerialIdWithMapOperationCompleted, userState);
        }
        
        private void OnGetVendorListBySerialIdWithMapOperationCompleted(object arg) {
            if ((this.GetVendorListBySerialIdWithMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListBySerialIdWithMapCompleted(this, new GetVendorListBySerialIdWithMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDealerListByCityId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDealerListByCityId(int TopNum, int CityID) {
            object[] results = this.Invoke("GetDealerListByCityId", new object[] {
                        TopNum,
                        CityID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDealerListByCityIdAsync(int TopNum, int CityID) {
            this.GetDealerListByCityIdAsync(TopNum, CityID, null);
        }
        
        /// <remarks/>
        public void GetDealerListByCityIdAsync(int TopNum, int CityID, object userState) {
            if ((this.GetDealerListByCityIdOperationCompleted == null)) {
                this.GetDealerListByCityIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDealerListByCityIdOperationCompleted);
            }
            this.InvokeAsync("GetDealerListByCityId", new object[] {
                        TopNum,
                        CityID}, this.GetDealerListByCityIdOperationCompleted, userState);
        }
        
        private void OnGetDealerListByCityIdOperationCompleted(object arg) {
            if ((this.GetDealerListByCityIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDealerListByCityIdCompleted(this, new GetDealerListByCityIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorCountByCityId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorCountByCityId(int CityID) {
            object[] results = this.Invoke("GetVendorCountByCityId", new object[] {
                        CityID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorCountByCityIdAsync(int CityID) {
            this.GetVendorCountByCityIdAsync(CityID, null);
        }
        
        /// <remarks/>
        public void GetVendorCountByCityIdAsync(int CityID, object userState) {
            if ((this.GetVendorCountByCityIdOperationCompleted == null)) {
                this.GetVendorCountByCityIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorCountByCityIdOperationCompleted);
            }
            this.InvokeAsync("GetVendorCountByCityId", new object[] {
                        CityID}, this.GetVendorCountByCityIdOperationCompleted, userState);
        }
        
        private void OnGetVendorCountByCityIdOperationCompleted(object arg) {
            if ((this.GetVendorCountByCityIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorCountByCityIdCompleted(this, new GetVendorCountByCityIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorListMapInfor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorListMapInfor() {
            object[] results = this.Invoke("GetVendorListMapInfor", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorListMapInforAsync() {
            this.GetVendorListMapInforAsync(null);
        }
        
        /// <remarks/>
        public void GetVendorListMapInforAsync(object userState) {
            if ((this.GetVendorListMapInforOperationCompleted == null)) {
                this.GetVendorListMapInforOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorListMapInforOperationCompleted);
            }
            this.InvokeAsync("GetVendorListMapInfor", new object[0], this.GetVendorListMapInforOperationCompleted, userState);
        }
        
        private void OnGetVendorListMapInforOperationCompleted(object arg) {
            if ((this.GetVendorListMapInforCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorListMapInforCompleted(this, new GetVendorListMapInforCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCarIDSalePriceBySerialIDDealerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCarIDSalePriceBySerialIDDealerID(int SerialID, int DealerID) {
            object[] results = this.Invoke("GetCarIDSalePriceBySerialIDDealerID", new object[] {
                        SerialID,
                        DealerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCarIDSalePriceBySerialIDDealerIDAsync(int SerialID, int DealerID) {
            this.GetCarIDSalePriceBySerialIDDealerIDAsync(SerialID, DealerID, null);
        }
        
        /// <remarks/>
        public void GetCarIDSalePriceBySerialIDDealerIDAsync(int SerialID, int DealerID, object userState) {
            if ((this.GetCarIDSalePriceBySerialIDDealerIDOperationCompleted == null)) {
                this.GetCarIDSalePriceBySerialIDDealerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCarIDSalePriceBySerialIDDealerIDOperationCompleted);
            }
            this.InvokeAsync("GetCarIDSalePriceBySerialIDDealerID", new object[] {
                        SerialID,
                        DealerID}, this.GetCarIDSalePriceBySerialIDDealerIDOperationCompleted, userState);
        }
        
        private void OnGetCarIDSalePriceBySerialIDDealerIDOperationCompleted(object arg) {
            if ((this.GetCarIDSalePriceBySerialIDDealerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCarIDSalePriceBySerialIDDealerIDCompleted(this, new GetCarIDSalePriceBySerialIDDealerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class VendorInfoEntity {
        
        private int vendorIDField;
        
        private string vendorNameField;
        
        private short vendorBizModeField;
        
        private short cityIDField;
        
        private short provinceIDField;
        
        private string vendorTelField;
        
        private int vendorStatusField;
        
        private System.DateTime lastModifyTimeField;
        
        private byte isShowMapField;
        
        private int vendorMapIDField;
        
        private string vendorMapPicField;
        
        private string vendorFullNameField;
        
        private string vendorBizModeOldField;
        
        private string vendorSaleAddrField;
        
        private string vendorWebSiteField;
        
        private string vendorEmailField;
        
        private string vendor2DomainNameField;
        
        private int weighingField;
        
        private short brandGroupIDField;
        
        private string vendorShopPicField;
        
        private string mainBrandField;
        
        private string mainSeriesField;
        
        private string autoSiteDomainField;
        
        private string callCenterNumberField;
        
        private string callCenterOtherNumberField;
        
        private byte telShowTypeField;
        
        private string cityNameField;
        
        private string provinceNameField;
        
        private double iconProportionField;
        
        private string googleMapLatField;
        
        private string googleMapLngField;
        
        /// <remarks/>
        public int VendorID {
            get {
                return this.vendorIDField;
            }
            set {
                this.vendorIDField = value;
            }
        }
        
        /// <remarks/>
        public string VendorName {
            get {
                return this.vendorNameField;
            }
            set {
                this.vendorNameField = value;
            }
        }
        
        /// <remarks/>
        public short VendorBizMode {
            get {
                return this.vendorBizModeField;
            }
            set {
                this.vendorBizModeField = value;
            }
        }
        
        /// <remarks/>
        public short CityID {
            get {
                return this.cityIDField;
            }
            set {
                this.cityIDField = value;
            }
        }
        
        /// <remarks/>
        public short ProvinceID {
            get {
                return this.provinceIDField;
            }
            set {
                this.provinceIDField = value;
            }
        }
        
        /// <remarks/>
        public string VendorTel {
            get {
                return this.vendorTelField;
            }
            set {
                this.vendorTelField = value;
            }
        }
        
        /// <remarks/>
        public int VendorStatus {
            get {
                return this.vendorStatusField;
            }
            set {
                this.vendorStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastModifyTime {
            get {
                return this.lastModifyTimeField;
            }
            set {
                this.lastModifyTimeField = value;
            }
        }
        
        /// <remarks/>
        public byte IsShowMap {
            get {
                return this.isShowMapField;
            }
            set {
                this.isShowMapField = value;
            }
        }
        
        /// <remarks/>
        public int VendorMapID {
            get {
                return this.vendorMapIDField;
            }
            set {
                this.vendorMapIDField = value;
            }
        }
        
        /// <remarks/>
        public string VendorMapPic {
            get {
                return this.vendorMapPicField;
            }
            set {
                this.vendorMapPicField = value;
            }
        }
        
        /// <remarks/>
        public string VendorFullName {
            get {
                return this.vendorFullNameField;
            }
            set {
                this.vendorFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string VendorBizModeOld {
            get {
                return this.vendorBizModeOldField;
            }
            set {
                this.vendorBizModeOldField = value;
            }
        }
        
        /// <remarks/>
        public string VendorSaleAddr {
            get {
                return this.vendorSaleAddrField;
            }
            set {
                this.vendorSaleAddrField = value;
            }
        }
        
        /// <remarks/>
        public string VendorWebSite {
            get {
                return this.vendorWebSiteField;
            }
            set {
                this.vendorWebSiteField = value;
            }
        }
        
        /// <remarks/>
        public string VendorEmail {
            get {
                return this.vendorEmailField;
            }
            set {
                this.vendorEmailField = value;
            }
        }
        
        /// <remarks/>
        public string Vendor2DomainName {
            get {
                return this.vendor2DomainNameField;
            }
            set {
                this.vendor2DomainNameField = value;
            }
        }
        
        /// <remarks/>
        public int Weighing {
            get {
                return this.weighingField;
            }
            set {
                this.weighingField = value;
            }
        }
        
        /// <remarks/>
        public short BrandGroupID {
            get {
                return this.brandGroupIDField;
            }
            set {
                this.brandGroupIDField = value;
            }
        }
        
        /// <remarks/>
        public string VendorShopPic {
            get {
                return this.vendorShopPicField;
            }
            set {
                this.vendorShopPicField = value;
            }
        }
        
        /// <remarks/>
        public string MainBrand {
            get {
                return this.mainBrandField;
            }
            set {
                this.mainBrandField = value;
            }
        }
        
        /// <remarks/>
        public string MainSeries {
            get {
                return this.mainSeriesField;
            }
            set {
                this.mainSeriesField = value;
            }
        }
        
        /// <remarks/>
        public string AutoSiteDomain {
            get {
                return this.autoSiteDomainField;
            }
            set {
                this.autoSiteDomainField = value;
            }
        }
        
        /// <remarks/>
        public string CallCenterNumber {
            get {
                return this.callCenterNumberField;
            }
            set {
                this.callCenterNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CallCenterOtherNumber {
            get {
                return this.callCenterOtherNumberField;
            }
            set {
                this.callCenterOtherNumberField = value;
            }
        }
        
        /// <remarks/>
        public byte TelShowType {
            get {
                return this.telShowTypeField;
            }
            set {
                this.telShowTypeField = value;
            }
        }
        
        /// <remarks/>
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
            }
        }
        
        /// <remarks/>
        public string ProvinceName {
            get {
                return this.provinceNameField;
            }
            set {
                this.provinceNameField = value;
            }
        }
        
        /// <remarks/>
        public double IconProportion {
            get {
                return this.iconProportionField;
            }
            set {
                this.iconProportionField = value;
            }
        }
        
        /// <remarks/>
        public string GoogleMapLat {
            get {
                return this.googleMapLatField;
            }
            set {
                this.googleMapLatField = value;
            }
        }
        
        /// <remarks/>
        public string GoogleMapLng {
            get {
                return this.googleMapLngField;
            }
            set {
                this.googleMapLngField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorNewsListBySerialIdCompletedEventHandler(object sender, GetVendorNewsListBySerialIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorNewsListBySerialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorNewsListBySerialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorNewsListByBrandIdCompletedEventHandler(object sender, GetVendorNewsListByBrandIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorNewsListByBrandIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorNewsListByBrandIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorInfoByIDCompletedEventHandler(object sender, GetVendorInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public VendorInfoEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((VendorInfoEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorListBySerialIdCompletedEventHandler(object sender, GetVendorListBySerialIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListBySerialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListBySerialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorListByBrandIdCompletedEventHandler(object sender, GetVendorListByBrandIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListByBrandIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListByBrandIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorListBySerialIdWithMapCompletedEventHandler(object sender, GetVendorListBySerialIdWithMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListBySerialIdWithMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListBySerialIdWithMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDealerListByCityIdCompletedEventHandler(object sender, GetDealerListByCityIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDealerListByCityIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDealerListByCityIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorCountByCityIdCompletedEventHandler(object sender, GetVendorCountByCityIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorCountByCityIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorCountByCityIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorListMapInforCompletedEventHandler(object sender, GetVendorListMapInforCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorListMapInforCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorListMapInforCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCarIDSalePriceBySerialIDDealerIDCompletedEventHandler(object sender, GetCarIDSalePriceBySerialIDDealerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCarIDSalePriceBySerialIDDealerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCarIDSalePriceBySerialIDDealerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591