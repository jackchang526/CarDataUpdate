//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.CarDataUpdate.DataProcesser.com.bitauto.dealer {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="VendorNewsSoap", Namespace="http://tempuri.org/")]
    public partial class VendorNews : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetTodayNewsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsListBySerialIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsPageListAndCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsPageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsPageListByNCIdListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetThirdClassCityNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorBrandNewsByCarSerialIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVendorAfterSaleNewsByCarSerialIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCityRecommendNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateVendorNewsBasicTemplate_CMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDateVendorPrice_CMSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public VendorNews() {
            this.Url = global::BitAuto.CarDataUpdate.DataProcesser.Properties.Settings.Default.DataProcesser_com_bitauto_dealer_api1_VendorNews;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTodayNewsInfoCompletedEventHandler GetTodayNewsInfoCompleted;
        
        /// <remarks/>
        public event GetNewsListBySerialIDCompletedEventHandler GetNewsListBySerialIDCompleted;
        
        /// <remarks/>
        public event GetNewsPageListAndCountCompletedEventHandler GetNewsPageListAndCountCompleted;
        
        /// <remarks/>
        public event GetNewsPageListCompletedEventHandler GetNewsPageListCompleted;
        
        /// <remarks/>
        public event GetNewsPageListByNCIdListCompletedEventHandler GetNewsPageListByNCIdListCompleted;
        
        /// <remarks/>
        public event GetThirdClassCityNewsListCompletedEventHandler GetThirdClassCityNewsListCompleted;
        
        /// <remarks/>
        public event GetVendorBrandNewsByCarSerialIDCompletedEventHandler GetVendorBrandNewsByCarSerialIDCompleted;
        
        /// <remarks/>
        public event GetVendorAfterSaleNewsByCarSerialIDCompletedEventHandler GetVendorAfterSaleNewsByCarSerialIDCompleted;
        
        /// <remarks/>
        public event GetCityRecommendNewsCompletedEventHandler GetCityRecommendNewsCompleted;
        
        /// <remarks/>
        public event GetNewsContentCompletedEventHandler GetNewsContentCompleted;
        
        /// <remarks/>
        public event GetDateVendorNewsBasicTemplate_CMSCompletedEventHandler GetDateVendorNewsBasicTemplate_CMSCompleted;
        
        /// <remarks/>
        public event GetDateVendorPrice_CMSCompletedEventHandler GetDateVendorPrice_CMSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTodayNewsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTodayNewsInfo() {
            object[] results = this.Invoke("GetTodayNewsInfo", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTodayNewsInfoAsync() {
            this.GetTodayNewsInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetTodayNewsInfoAsync(object userState) {
            if ((this.GetTodayNewsInfoOperationCompleted == null)) {
                this.GetTodayNewsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTodayNewsInfoOperationCompleted);
            }
            this.InvokeAsync("GetTodayNewsInfo", new object[0], this.GetTodayNewsInfoOperationCompleted, userState);
        }
        
        private void OnGetTodayNewsInfoOperationCompleted(object arg) {
            if ((this.GetTodayNewsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTodayNewsInfoCompleted(this, new GetTodayNewsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsListBySerialID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNewsListBySerialID(int SerialId, int RowCount) {
            object[] results = this.Invoke("GetNewsListBySerialID", new object[] {
                        SerialId,
                        RowCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsListBySerialIDAsync(int SerialId, int RowCount) {
            this.GetNewsListBySerialIDAsync(SerialId, RowCount, null);
        }
        
        /// <remarks/>
        public void GetNewsListBySerialIDAsync(int SerialId, int RowCount, object userState) {
            if ((this.GetNewsListBySerialIDOperationCompleted == null)) {
                this.GetNewsListBySerialIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsListBySerialIDOperationCompleted);
            }
            this.InvokeAsync("GetNewsListBySerialID", new object[] {
                        SerialId,
                        RowCount}, this.GetNewsListBySerialIDOperationCompleted, userState);
        }
        
        private void OnGetNewsListBySerialIDOperationCompleted(object arg) {
            if ((this.GetNewsListBySerialIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsListBySerialIDCompleted(this, new GetNewsListBySerialIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsPageListAndCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNewsPageListAndCount(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, int PageCount, int PageIndex, out int TotalCount) {
            object[] results = this.Invoke("GetNewsPageListAndCount", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        VendorId,
                        ncId,
                        vendorBizMode,
                        IsCharge,
                        PageCount,
                        PageIndex});
            TotalCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsPageListAndCountAsync(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, int PageCount, int PageIndex) {
            this.GetNewsPageListAndCountAsync(SeriesID, ProvinceID, CityID, VendorId, ncId, vendorBizMode, IsCharge, PageCount, PageIndex, null);
        }
        
        /// <remarks/>
        public void GetNewsPageListAndCountAsync(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, int PageCount, int PageIndex, object userState) {
            if ((this.GetNewsPageListAndCountOperationCompleted == null)) {
                this.GetNewsPageListAndCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsPageListAndCountOperationCompleted);
            }
            this.InvokeAsync("GetNewsPageListAndCount", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        VendorId,
                        ncId,
                        vendorBizMode,
                        IsCharge,
                        PageCount,
                        PageIndex}, this.GetNewsPageListAndCountOperationCompleted, userState);
        }
        
        private void OnGetNewsPageListAndCountOperationCompleted(object arg) {
            if ((this.GetNewsPageListAndCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsPageListAndCountCompleted(this, new GetNewsPageListAndCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsPageList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNewsPageList(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, int PageCount, int PageIndex) {
            object[] results = this.Invoke("GetNewsPageList", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        VendorId,
                        ncId,
                        vendorBizMode,
                        IsCharge,
                        PageCount,
                        PageIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsPageListAsync(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, int PageCount, int PageIndex) {
            this.GetNewsPageListAsync(SeriesID, ProvinceID, CityID, VendorId, ncId, vendorBizMode, IsCharge, PageCount, PageIndex, null);
        }
        
        /// <remarks/>
        public void GetNewsPageListAsync(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, int PageCount, int PageIndex, object userState) {
            if ((this.GetNewsPageListOperationCompleted == null)) {
                this.GetNewsPageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsPageListOperationCompleted);
            }
            this.InvokeAsync("GetNewsPageList", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        VendorId,
                        ncId,
                        vendorBizMode,
                        IsCharge,
                        PageCount,
                        PageIndex}, this.GetNewsPageListOperationCompleted, userState);
        }
        
        private void OnGetNewsPageListOperationCompleted(object arg) {
            if ((this.GetNewsPageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsPageListCompleted(this, new GetNewsPageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsPageListByNCIdList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNewsPageListByNCIdList(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, string ncIdList, int PageCount, int PageIndex) {
            object[] results = this.Invoke("GetNewsPageListByNCIdList", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        VendorId,
                        ncId,
                        vendorBizMode,
                        IsCharge,
                        ncIdList,
                        PageCount,
                        PageIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsPageListByNCIdListAsync(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, string ncIdList, int PageCount, int PageIndex) {
            this.GetNewsPageListByNCIdListAsync(SeriesID, ProvinceID, CityID, VendorId, ncId, vendorBizMode, IsCharge, ncIdList, PageCount, PageIndex, null);
        }
        
        /// <remarks/>
        public void GetNewsPageListByNCIdListAsync(int SeriesID, int ProvinceID, int CityID, int VendorId, int ncId, int vendorBizMode, int IsCharge, string ncIdList, int PageCount, int PageIndex, object userState) {
            if ((this.GetNewsPageListByNCIdListOperationCompleted == null)) {
                this.GetNewsPageListByNCIdListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsPageListByNCIdListOperationCompleted);
            }
            this.InvokeAsync("GetNewsPageListByNCIdList", new object[] {
                        SeriesID,
                        ProvinceID,
                        CityID,
                        VendorId,
                        ncId,
                        vendorBizMode,
                        IsCharge,
                        ncIdList,
                        PageCount,
                        PageIndex}, this.GetNewsPageListByNCIdListOperationCompleted, userState);
        }
        
        private void OnGetNewsPageListByNCIdListOperationCompleted(object arg) {
            if ((this.GetNewsPageListByNCIdListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsPageListByNCIdListCompleted(this, new GetNewsPageListByNCIdListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetThirdClassCityNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetThirdClassCityNewsList(int CityID, int RowCount) {
            object[] results = this.Invoke("GetThirdClassCityNewsList", new object[] {
                        CityID,
                        RowCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetThirdClassCityNewsListAsync(int CityID, int RowCount) {
            this.GetThirdClassCityNewsListAsync(CityID, RowCount, null);
        }
        
        /// <remarks/>
        public void GetThirdClassCityNewsListAsync(int CityID, int RowCount, object userState) {
            if ((this.GetThirdClassCityNewsListOperationCompleted == null)) {
                this.GetThirdClassCityNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetThirdClassCityNewsListOperationCompleted);
            }
            this.InvokeAsync("GetThirdClassCityNewsList", new object[] {
                        CityID,
                        RowCount}, this.GetThirdClassCityNewsListOperationCompleted, userState);
        }
        
        private void OnGetThirdClassCityNewsListOperationCompleted(object arg) {
            if ((this.GetThirdClassCityNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetThirdClassCityNewsListCompleted(this, new GetThirdClassCityNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorBrandNewsByCarSerialID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorBrandNewsByCarSerialID(int SerialID) {
            object[] results = this.Invoke("GetVendorBrandNewsByCarSerialID", new object[] {
                        SerialID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorBrandNewsByCarSerialIDAsync(int SerialID) {
            this.GetVendorBrandNewsByCarSerialIDAsync(SerialID, null);
        }
        
        /// <remarks/>
        public void GetVendorBrandNewsByCarSerialIDAsync(int SerialID, object userState) {
            if ((this.GetVendorBrandNewsByCarSerialIDOperationCompleted == null)) {
                this.GetVendorBrandNewsByCarSerialIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorBrandNewsByCarSerialIDOperationCompleted);
            }
            this.InvokeAsync("GetVendorBrandNewsByCarSerialID", new object[] {
                        SerialID}, this.GetVendorBrandNewsByCarSerialIDOperationCompleted, userState);
        }
        
        private void OnGetVendorBrandNewsByCarSerialIDOperationCompleted(object arg) {
            if ((this.GetVendorBrandNewsByCarSerialIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorBrandNewsByCarSerialIDCompleted(this, new GetVendorBrandNewsByCarSerialIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetVendorAfterSaleNewsByCarSerialID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetVendorAfterSaleNewsByCarSerialID(int SerialID) {
            object[] results = this.Invoke("GetVendorAfterSaleNewsByCarSerialID", new object[] {
                        SerialID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetVendorAfterSaleNewsByCarSerialIDAsync(int SerialID) {
            this.GetVendorAfterSaleNewsByCarSerialIDAsync(SerialID, null);
        }
        
        /// <remarks/>
        public void GetVendorAfterSaleNewsByCarSerialIDAsync(int SerialID, object userState) {
            if ((this.GetVendorAfterSaleNewsByCarSerialIDOperationCompleted == null)) {
                this.GetVendorAfterSaleNewsByCarSerialIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVendorAfterSaleNewsByCarSerialIDOperationCompleted);
            }
            this.InvokeAsync("GetVendorAfterSaleNewsByCarSerialID", new object[] {
                        SerialID}, this.GetVendorAfterSaleNewsByCarSerialIDOperationCompleted, userState);
        }
        
        private void OnGetVendorAfterSaleNewsByCarSerialIDOperationCompleted(object arg) {
            if ((this.GetVendorAfterSaleNewsByCarSerialIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVendorAfterSaleNewsByCarSerialIDCompleted(this, new GetVendorAfterSaleNewsByCarSerialIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCityRecommendNews", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCityRecommendNews(int CityID, int VendorBizMode, bool IsImport, int RowCount) {
            object[] results = this.Invoke("GetCityRecommendNews", new object[] {
                        CityID,
                        VendorBizMode,
                        IsImport,
                        RowCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCityRecommendNewsAsync(int CityID, int VendorBizMode, bool IsImport, int RowCount) {
            this.GetCityRecommendNewsAsync(CityID, VendorBizMode, IsImport, RowCount, null);
        }
        
        /// <remarks/>
        public void GetCityRecommendNewsAsync(int CityID, int VendorBizMode, bool IsImport, int RowCount, object userState) {
            if ((this.GetCityRecommendNewsOperationCompleted == null)) {
                this.GetCityRecommendNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCityRecommendNewsOperationCompleted);
            }
            this.InvokeAsync("GetCityRecommendNews", new object[] {
                        CityID,
                        VendorBizMode,
                        IsImport,
                        RowCount}, this.GetCityRecommendNewsOperationCompleted, userState);
        }
        
        private void OnGetCityRecommendNewsOperationCompleted(object arg) {
            if ((this.GetCityRecommendNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCityRecommendNewsCompleted(this, new GetCityRecommendNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsContent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNewsContent(int NewsID) {
            object[] results = this.Invoke("GetNewsContent", new object[] {
                        NewsID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsContentAsync(int NewsID) {
            this.GetNewsContentAsync(NewsID, null);
        }
        
        /// <remarks/>
        public void GetNewsContentAsync(int NewsID, object userState) {
            if ((this.GetNewsContentOperationCompleted == null)) {
                this.GetNewsContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsContentOperationCompleted);
            }
            this.InvokeAsync("GetNewsContent", new object[] {
                        NewsID}, this.GetNewsContentOperationCompleted, userState);
        }
        
        private void OnGetNewsContentOperationCompleted(object arg) {
            if ((this.GetNewsContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsContentCompleted(this, new GetNewsContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDateVendorNewsBasicTemplate_CMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDateVendorNewsBasicTemplate_CMS() {
            object[] results = this.Invoke("GetDateVendorNewsBasicTemplate_CMS", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateVendorNewsBasicTemplate_CMSAsync() {
            this.GetDateVendorNewsBasicTemplate_CMSAsync(null);
        }
        
        /// <remarks/>
        public void GetDateVendorNewsBasicTemplate_CMSAsync(object userState) {
            if ((this.GetDateVendorNewsBasicTemplate_CMSOperationCompleted == null)) {
                this.GetDateVendorNewsBasicTemplate_CMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateVendorNewsBasicTemplate_CMSOperationCompleted);
            }
            this.InvokeAsync("GetDateVendorNewsBasicTemplate_CMS", new object[0], this.GetDateVendorNewsBasicTemplate_CMSOperationCompleted, userState);
        }
        
        private void OnGetDateVendorNewsBasicTemplate_CMSOperationCompleted(object arg) {
            if ((this.GetDateVendorNewsBasicTemplate_CMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateVendorNewsBasicTemplate_CMSCompleted(this, new GetDateVendorNewsBasicTemplate_CMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDateVendorPrice_CMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDateVendorPrice_CMS(int pageIndex, int pageCount) {
            object[] results = this.Invoke("GetDateVendorPrice_CMS", new object[] {
                        pageIndex,
                        pageCount});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDateVendorPrice_CMSAsync(int pageIndex, int pageCount) {
            this.GetDateVendorPrice_CMSAsync(pageIndex, pageCount, null);
        }
        
        /// <remarks/>
        public void GetDateVendorPrice_CMSAsync(int pageIndex, int pageCount, object userState) {
            if ((this.GetDateVendorPrice_CMSOperationCompleted == null)) {
                this.GetDateVendorPrice_CMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDateVendorPrice_CMSOperationCompleted);
            }
            this.InvokeAsync("GetDateVendorPrice_CMS", new object[] {
                        pageIndex,
                        pageCount}, this.GetDateVendorPrice_CMSOperationCompleted, userState);
        }
        
        private void OnGetDateVendorPrice_CMSOperationCompleted(object arg) {
            if ((this.GetDateVendorPrice_CMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDateVendorPrice_CMSCompleted(this, new GetDateVendorPrice_CMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTodayNewsInfoCompletedEventHandler(object sender, GetTodayNewsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTodayNewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTodayNewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewsListBySerialIDCompletedEventHandler(object sender, GetNewsListBySerialIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsListBySerialIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsListBySerialIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewsPageListAndCountCompletedEventHandler(object sender, GetNewsPageListAndCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsPageListAndCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsPageListAndCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewsPageListCompletedEventHandler(object sender, GetNewsPageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsPageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsPageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewsPageListByNCIdListCompletedEventHandler(object sender, GetNewsPageListByNCIdListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsPageListByNCIdListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsPageListByNCIdListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetThirdClassCityNewsListCompletedEventHandler(object sender, GetThirdClassCityNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetThirdClassCityNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetThirdClassCityNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorBrandNewsByCarSerialIDCompletedEventHandler(object sender, GetVendorBrandNewsByCarSerialIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorBrandNewsByCarSerialIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorBrandNewsByCarSerialIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVendorAfterSaleNewsByCarSerialIDCompletedEventHandler(object sender, GetVendorAfterSaleNewsByCarSerialIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVendorAfterSaleNewsByCarSerialIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVendorAfterSaleNewsByCarSerialIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCityRecommendNewsCompletedEventHandler(object sender, GetCityRecommendNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCityRecommendNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCityRecommendNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewsContentCompletedEventHandler(object sender, GetNewsContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDateVendorNewsBasicTemplate_CMSCompletedEventHandler(object sender, GetDateVendorNewsBasicTemplate_CMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateVendorNewsBasicTemplate_CMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateVendorNewsBasicTemplate_CMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDateVendorPrice_CMSCompletedEventHandler(object sender, GetDateVendorPrice_CMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDateVendorPrice_CMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDateVendorPrice_CMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591