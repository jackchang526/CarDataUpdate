//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace BitAuto.CarDataUpdate.DataProcesser.com.bitauto.imgsvr {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CommonServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CommonService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPropertyItemListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPropertyGroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChildrenByParentIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumListByClassIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumListByClassIdPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageListByAlbumIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageListByAlbumIdPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupListBySerialIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageListBySerialIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageListBySerialIdPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageListBySerialIdAndGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageListBySerialIdAndGroupIdPagedOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CommonService() {
            this.Url = global::BitAuto.CarDataUpdate.DataProcesser.Properties.Settings.Default.DataProcesser_com_bitauto_imgsvr_CommonService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPropertyItemListCompletedEventHandler GetPropertyItemListCompleted;
        
        /// <remarks/>
        public event GetPropertyGroupListCompletedEventHandler GetPropertyGroupListCompleted;
        
        /// <remarks/>
        public event GetChildrenByParentIdCompletedEventHandler GetChildrenByParentIdCompleted;
        
        /// <remarks/>
        public event GetAlbumListByClassIdCompletedEventHandler GetAlbumListByClassIdCompleted;
        
        /// <remarks/>
        public event GetAlbumListByClassIdPagedCompletedEventHandler GetAlbumListByClassIdPagedCompleted;
        
        /// <remarks/>
        public event GetImageListByAlbumIdCompletedEventHandler GetImageListByAlbumIdCompleted;
        
        /// <remarks/>
        public event GetImageListByAlbumIdPagedCompletedEventHandler GetImageListByAlbumIdPagedCompleted;
        
        /// <remarks/>
        public event GetGroupListBySerialIdCompletedEventHandler GetGroupListBySerialIdCompleted;
        
        /// <remarks/>
        public event GetImageListBySerialIdCompletedEventHandler GetImageListBySerialIdCompleted;
        
        /// <remarks/>
        public event GetImageListBySerialIdPagedCompletedEventHandler GetImageListBySerialIdPagedCompleted;
        
        /// <remarks/>
        public event GetImageListBySerialIdAndGroupIdCompletedEventHandler GetImageListBySerialIdAndGroupIdCompleted;
        
        /// <remarks/>
        public event GetImageListBySerialIdAndGroupIdPagedCompletedEventHandler GetImageListBySerialIdAndGroupIdPagedCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropertyItemList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPropertyItemList() {
            object[] results = this.Invoke("GetPropertyItemList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyItemListAsync() {
            this.GetPropertyItemListAsync(null);
        }
        
        /// <remarks/>
        public void GetPropertyItemListAsync(object userState) {
            if ((this.GetPropertyItemListOperationCompleted == null)) {
                this.GetPropertyItemListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyItemListOperationCompleted);
            }
            this.InvokeAsync("GetPropertyItemList", new object[0], this.GetPropertyItemListOperationCompleted, userState);
        }
        
        private void OnGetPropertyItemListOperationCompleted(object arg) {
            if ((this.GetPropertyItemListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyItemListCompleted(this, new GetPropertyItemListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPropertyGroupList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPropertyGroupList() {
            object[] results = this.Invoke("GetPropertyGroupList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPropertyGroupListAsync() {
            this.GetPropertyGroupListAsync(null);
        }
        
        /// <remarks/>
        public void GetPropertyGroupListAsync(object userState) {
            if ((this.GetPropertyGroupListOperationCompleted == null)) {
                this.GetPropertyGroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyGroupListOperationCompleted);
            }
            this.InvokeAsync("GetPropertyGroupList", new object[0], this.GetPropertyGroupListOperationCompleted, userState);
        }
        
        private void OnGetPropertyGroupListOperationCompleted(object arg) {
            if ((this.GetPropertyGroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPropertyGroupListCompleted(this, new GetPropertyGroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetChildrenByParentId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetChildrenByParentId(int parentId, bool recurseAll) {
            object[] results = this.Invoke("GetChildrenByParentId", new object[] {
                        parentId,
                        recurseAll});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetChildrenByParentIdAsync(int parentId, bool recurseAll) {
            this.GetChildrenByParentIdAsync(parentId, recurseAll, null);
        }
        
        /// <remarks/>
        public void GetChildrenByParentIdAsync(int parentId, bool recurseAll, object userState) {
            if ((this.GetChildrenByParentIdOperationCompleted == null)) {
                this.GetChildrenByParentIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChildrenByParentIdOperationCompleted);
            }
            this.InvokeAsync("GetChildrenByParentId", new object[] {
                        parentId,
                        recurseAll}, this.GetChildrenByParentIdOperationCompleted, userState);
        }
        
        private void OnGetChildrenByParentIdOperationCompleted(object arg) {
            if ((this.GetChildrenByParentIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChildrenByParentIdCompleted(this, new GetChildrenByParentIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlbumListByClassId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAlbumListByClassId(int classId) {
            object[] results = this.Invoke("GetAlbumListByClassId", new object[] {
                        classId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumListByClassIdAsync(int classId) {
            this.GetAlbumListByClassIdAsync(classId, null);
        }
        
        /// <remarks/>
        public void GetAlbumListByClassIdAsync(int classId, object userState) {
            if ((this.GetAlbumListByClassIdOperationCompleted == null)) {
                this.GetAlbumListByClassIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumListByClassIdOperationCompleted);
            }
            this.InvokeAsync("GetAlbumListByClassId", new object[] {
                        classId}, this.GetAlbumListByClassIdOperationCompleted, userState);
        }
        
        private void OnGetAlbumListByClassIdOperationCompleted(object arg) {
            if ((this.GetAlbumListByClassIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumListByClassIdCompleted(this, new GetAlbumListByClassIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlbumListByClassIdPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAlbumListByClassIdPaged(int classId, int pageSize, int pageIndex, out int rowCount, out int imageCount) {
            object[] results = this.Invoke("GetAlbumListByClassIdPaged", new object[] {
                        classId,
                        pageSize,
                        pageIndex});
            rowCount = ((int)(results[1]));
            imageCount = ((int)(results[2]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumListByClassIdPagedAsync(int classId, int pageSize, int pageIndex) {
            this.GetAlbumListByClassIdPagedAsync(classId, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetAlbumListByClassIdPagedAsync(int classId, int pageSize, int pageIndex, object userState) {
            if ((this.GetAlbumListByClassIdPagedOperationCompleted == null)) {
                this.GetAlbumListByClassIdPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumListByClassIdPagedOperationCompleted);
            }
            this.InvokeAsync("GetAlbumListByClassIdPaged", new object[] {
                        classId,
                        pageSize,
                        pageIndex}, this.GetAlbumListByClassIdPagedOperationCompleted, userState);
        }
        
        private void OnGetAlbumListByClassIdPagedOperationCompleted(object arg) {
            if ((this.GetAlbumListByClassIdPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumListByClassIdPagedCompleted(this, new GetAlbumListByClassIdPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageListByAlbumId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageListByAlbumId(int albumId) {
            object[] results = this.Invoke("GetImageListByAlbumId", new object[] {
                        albumId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageListByAlbumIdAsync(int albumId) {
            this.GetImageListByAlbumIdAsync(albumId, null);
        }
        
        /// <remarks/>
        public void GetImageListByAlbumIdAsync(int albumId, object userState) {
            if ((this.GetImageListByAlbumIdOperationCompleted == null)) {
                this.GetImageListByAlbumIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageListByAlbumIdOperationCompleted);
            }
            this.InvokeAsync("GetImageListByAlbumId", new object[] {
                        albumId}, this.GetImageListByAlbumIdOperationCompleted, userState);
        }
        
        private void OnGetImageListByAlbumIdOperationCompleted(object arg) {
            if ((this.GetImageListByAlbumIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageListByAlbumIdCompleted(this, new GetImageListByAlbumIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageListByAlbumIdPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PagedImageList GetImageListByAlbumIdPaged(int albumId, int pageSize, int pageIndex) {
            object[] results = this.Invoke("GetImageListByAlbumIdPaged", new object[] {
                        albumId,
                        pageSize,
                        pageIndex});
            return ((PagedImageList)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageListByAlbumIdPagedAsync(int albumId, int pageSize, int pageIndex) {
            this.GetImageListByAlbumIdPagedAsync(albumId, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetImageListByAlbumIdPagedAsync(int albumId, int pageSize, int pageIndex, object userState) {
            if ((this.GetImageListByAlbumIdPagedOperationCompleted == null)) {
                this.GetImageListByAlbumIdPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageListByAlbumIdPagedOperationCompleted);
            }
            this.InvokeAsync("GetImageListByAlbumIdPaged", new object[] {
                        albumId,
                        pageSize,
                        pageIndex}, this.GetImageListByAlbumIdPagedOperationCompleted, userState);
        }
        
        private void OnGetImageListByAlbumIdPagedOperationCompleted(object arg) {
            if ((this.GetImageListByAlbumIdPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageListByAlbumIdPagedCompleted(this, new GetImageListByAlbumIdPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGroupListBySerialId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetGroupListBySerialId(int serialId) {
            object[] results = this.Invoke("GetGroupListBySerialId", new object[] {
                        serialId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupListBySerialIdAsync(int serialId) {
            this.GetGroupListBySerialIdAsync(serialId, null);
        }
        
        /// <remarks/>
        public void GetGroupListBySerialIdAsync(int serialId, object userState) {
            if ((this.GetGroupListBySerialIdOperationCompleted == null)) {
                this.GetGroupListBySerialIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupListBySerialIdOperationCompleted);
            }
            this.InvokeAsync("GetGroupListBySerialId", new object[] {
                        serialId}, this.GetGroupListBySerialIdOperationCompleted, userState);
        }
        
        private void OnGetGroupListBySerialIdOperationCompleted(object arg) {
            if ((this.GetGroupListBySerialIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupListBySerialIdCompleted(this, new GetGroupListBySerialIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageListBySerialId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageListBySerialId(int serial) {
            object[] results = this.Invoke("GetImageListBySerialId", new object[] {
                        serial});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdAsync(int serial) {
            this.GetImageListBySerialIdAsync(serial, null);
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdAsync(int serial, object userState) {
            if ((this.GetImageListBySerialIdOperationCompleted == null)) {
                this.GetImageListBySerialIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageListBySerialIdOperationCompleted);
            }
            this.InvokeAsync("GetImageListBySerialId", new object[] {
                        serial}, this.GetImageListBySerialIdOperationCompleted, userState);
        }
        
        private void OnGetImageListBySerialIdOperationCompleted(object arg) {
            if ((this.GetImageListBySerialIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageListBySerialIdCompleted(this, new GetImageListBySerialIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageListBySerialIdPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageListBySerialIdPaged(int serialId, int pageSize, int pageIndex, out int RowCount) {
            object[] results = this.Invoke("GetImageListBySerialIdPaged", new object[] {
                        serialId,
                        pageSize,
                        pageIndex});
            RowCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdPagedAsync(int serialId, int pageSize, int pageIndex) {
            this.GetImageListBySerialIdPagedAsync(serialId, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdPagedAsync(int serialId, int pageSize, int pageIndex, object userState) {
            if ((this.GetImageListBySerialIdPagedOperationCompleted == null)) {
                this.GetImageListBySerialIdPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageListBySerialIdPagedOperationCompleted);
            }
            this.InvokeAsync("GetImageListBySerialIdPaged", new object[] {
                        serialId,
                        pageSize,
                        pageIndex}, this.GetImageListBySerialIdPagedOperationCompleted, userState);
        }
        
        private void OnGetImageListBySerialIdPagedOperationCompleted(object arg) {
            if ((this.GetImageListBySerialIdPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageListBySerialIdPagedCompleted(this, new GetImageListBySerialIdPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageListBySerialIdAndGroupId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageListBySerialIdAndGroupId(int serialId, int groupId) {
            object[] results = this.Invoke("GetImageListBySerialIdAndGroupId", new object[] {
                        serialId,
                        groupId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdAndGroupIdAsync(int serialId, int groupId) {
            this.GetImageListBySerialIdAndGroupIdAsync(serialId, groupId, null);
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdAndGroupIdAsync(int serialId, int groupId, object userState) {
            if ((this.GetImageListBySerialIdAndGroupIdOperationCompleted == null)) {
                this.GetImageListBySerialIdAndGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageListBySerialIdAndGroupIdOperationCompleted);
            }
            this.InvokeAsync("GetImageListBySerialIdAndGroupId", new object[] {
                        serialId,
                        groupId}, this.GetImageListBySerialIdAndGroupIdOperationCompleted, userState);
        }
        
        private void OnGetImageListBySerialIdAndGroupIdOperationCompleted(object arg) {
            if ((this.GetImageListBySerialIdAndGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageListBySerialIdAndGroupIdCompleted(this, new GetImageListBySerialIdAndGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageListBySerialIdAndGroupIdPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetImageListBySerialIdAndGroupIdPaged(int serialId, int groupId, int pageSize, int pageIndex, out int rowCount) {
            object[] results = this.Invoke("GetImageListBySerialIdAndGroupIdPaged", new object[] {
                        serialId,
                        groupId,
                        pageSize,
                        pageIndex});
            rowCount = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdAndGroupIdPagedAsync(int serialId, int groupId, int pageSize, int pageIndex) {
            this.GetImageListBySerialIdAndGroupIdPagedAsync(serialId, groupId, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetImageListBySerialIdAndGroupIdPagedAsync(int serialId, int groupId, int pageSize, int pageIndex, object userState) {
            if ((this.GetImageListBySerialIdAndGroupIdPagedOperationCompleted == null)) {
                this.GetImageListBySerialIdAndGroupIdPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageListBySerialIdAndGroupIdPagedOperationCompleted);
            }
            this.InvokeAsync("GetImageListBySerialIdAndGroupIdPaged", new object[] {
                        serialId,
                        groupId,
                        pageSize,
                        pageIndex}, this.GetImageListBySerialIdAndGroupIdPagedOperationCompleted, userState);
        }
        
        private void OnGetImageListBySerialIdAndGroupIdPagedOperationCompleted(object arg) {
            if ((this.GetImageListBySerialIdAndGroupIdPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageListBySerialIdAndGroupIdPagedCompleted(this, new GetImageListBySerialIdAndGroupIdPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PagedImageList {
        
        private int classIdField;
        
        private int pageSizeField;
        
        private int pageIndexField;
        
        private int pageCountField;
        
        private System.Data.DataSet dataField;
        
        private int rowCountField;
        
        /// <remarks/>
        public int ClassId {
            get {
                return this.classIdField;
            }
            set {
                this.classIdField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageIndex {
            get {
                return this.pageIndexField;
            }
            set {
                this.pageIndexField = value;
            }
        }
        
        /// <remarks/>
        public int PageCount {
            get {
                return this.pageCountField;
            }
            set {
                this.pageCountField = value;
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPropertyItemListCompletedEventHandler(object sender, GetPropertyItemListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyItemListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyItemListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPropertyGroupListCompletedEventHandler(object sender, GetPropertyGroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPropertyGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPropertyGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetChildrenByParentIdCompletedEventHandler(object sender, GetChildrenByParentIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChildrenByParentIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChildrenByParentIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAlbumListByClassIdCompletedEventHandler(object sender, GetAlbumListByClassIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumListByClassIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumListByClassIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAlbumListByClassIdPagedCompletedEventHandler(object sender, GetAlbumListByClassIdPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumListByClassIdPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumListByClassIdPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int imageCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImageListByAlbumIdCompletedEventHandler(object sender, GetImageListByAlbumIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageListByAlbumIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageListByAlbumIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImageListByAlbumIdPagedCompletedEventHandler(object sender, GetImageListByAlbumIdPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageListByAlbumIdPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageListByAlbumIdPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PagedImageList Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PagedImageList)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetGroupListBySerialIdCompletedEventHandler(object sender, GetGroupListBySerialIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupListBySerialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupListBySerialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImageListBySerialIdCompletedEventHandler(object sender, GetImageListBySerialIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageListBySerialIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageListBySerialIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImageListBySerialIdPagedCompletedEventHandler(object sender, GetImageListBySerialIdPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageListBySerialIdPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageListBySerialIdPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int RowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImageListBySerialIdAndGroupIdCompletedEventHandler(object sender, GetImageListBySerialIdAndGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageListBySerialIdAndGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageListBySerialIdAndGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImageListBySerialIdAndGroupIdPagedCompletedEventHandler(object sender, GetImageListBySerialIdAndGroupIdPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageListBySerialIdAndGroupIdPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageListBySerialIdAndGroupIdPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int rowCount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591