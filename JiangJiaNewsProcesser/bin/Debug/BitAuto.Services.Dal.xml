<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BitAuto.Services.Dal</name>
    </assembly>
    <members>
        <member name="T:BitAuto.Services.Dal.IEntityViewProvider`1">
            <summary>
            Defines the common data access methods that can be used by the
            ReadOnlyDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityViewProvider`1.Get(BitAuto.Services.Dal.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityViewProvider`1.GetPaged(BitAuto.Services.Dal.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityViewProvider`1.GetAll(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityViewProvider`1.Find(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Dal.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.DeepLoadType">
            <summary>
            DeepLoad options for deep loading entities
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.DeepLoadType.IncludeChildren">
            <summary>
            Will Include a child property collection 1 Level Deep
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.DeepLoadType.ExcludeChildren">
            <summary>
            Will Exclude a child property collection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.DeepLoadType.Ignore">
            <summary>
            Will ignore the request and return the entity.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.DeepSaveType">
            <summary>
            DeepSave options for deep saving entities
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.DeepSaveType.IncludeChildren">
            <summary>Will Include a child property collection</summary>
        </member>
        <member name="F:BitAuto.Services.Dal.DeepSaveType.ExcludeChildren">
            <summary>Will Exclude a child property collection</summary>
        </member>
        <member name="F:BitAuto.Services.Dal.DeepSaveType.Ignore">
            <summary>Will ignore the request and return the entity.</summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Utility">
            <summary>
            Contains some helper function for SQL.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.GetDefaultByType(System.Data.DbType)">
            <summary>
            Get a default value for a given data type
            </summary>
            <param name="dataType">Data type for which to get the default value</param>
            <returns>An object of the default value.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.GetDataValue(System.Data.IDataParameter)">
            <summary>
            Get Value or Default Value from an IDataParamater
            Based on DbType
            </summary>
            <param name="p">The IDataParameter instance type is used to determine the default value.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.DefaultToDBNull(System.Object,System.Data.DbType)">
            <summary>
            Checks to see if the Default Value has been set to the parameter.
            If it's the default value, then create.
            </summary>
            <param name="val">The value we want to check.</param>
            <param name="dbtype">The DbType from wich we take the default value.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.GetParameterValue``1(System.Data.IDataParameter)">
            <summary>
            Generic method to return the value of a nullable parameter
            </summary>
            <typeparam name="T">Type of value to return</typeparam>
            <param name="parameter">Parameter from which to extract the value</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ConvertDataReaderToDataSet(System.Data.IDataReader)">
            <summary>
            Converts a IDataReader to a DataSet.  For use when a custom stored procedure returns an <see cref="T:System.Data.IDataReader"/>, it will 
            convert all result sets returned as a DataSet.
            </summary>
            <param name="reader">The reader to convert</param>
            <returns>A dataset with one table per result in the reader</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.DetectSqlInjection(System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.DetectSqlInjection(System.String,System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <param name="orderBy">string of the orderBy clause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ParseSortExpression(System.Type,System.String)">
            <summary>
            Parses the supplied sort expression parameter to verify that it
            matches the specifed column name enumeration.
            </summary>
            <param name="columnEnum"></param>
            <param name="sortExpression"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteReader(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteReader(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteNonQuery(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteNonQuery(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteDataSet(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteDataSet(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteScalar(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the scalar object. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Utility.ExecuteScalar(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returnsthe scalar object. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:BitAuto.Services.Dal.StringBuilderExpression">
            <summary>
            Represents a SQL filter builder expression enumeration.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendEquals">
            <summary>
            AppendEquals
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendNotEquals">
            <summary>
            AppendNotEquals
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendIn">
            <summary>
            AppendIn
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendNotIn">
            <summary>
            AppendNotIn
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendInQuery">
            <summary>
            AppendInQuery
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendNotInQuery">
            <summary>
            AppendNotInQuery
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendRange">
            <summary>
            AppendRange
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendIsNull">
            <summary>
            AppendIsNull
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendIsNotNull">
            <summary>
            
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendGreaterThan">
            <summary>
            AppendGreaterThan
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendGreaterThanOrEqual">
            <summary>
            AppendGreaterThanOrEqual
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendLessThan">
            <summary>
            AppendLessThan
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.StringBuilderExpression.AppendLessThanOrEqual">
            <summary>
            AppendLessThanOrEqual
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.SqlStringBuilder">
            <summary>
            Represents a SQL filter expression.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.Append(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.Append(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.Append(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIn(System.String,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIn(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIn(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIn(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotIn(System.String,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotIn(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendNotInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendRange(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIsNull(System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIsNull(System.String,System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIsNotNull(System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendIsNotNull(System.String,System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendGreaterThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendLessThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="column">The column.</param>
            <param name="compare">The compare.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.AppendInternal(System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="query">The query.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.Clear">
            <summary>
            Clears the internal string buffer.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.ToString">
            <summary>
            Converts the value of this instance to a System.String.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.ToString(System.String)">
            <summary>
            Converts the value of this instance to a System.String and
            prepends the specified junction if the expression is not empty.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.BeginGroup">
            <summary>
            Begins a new group of parameters by adding an open parenthesis "("
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.BeginGroup(System.String)">
            <summary>
            Begins a new groups of parameters using the specified junction operator
            </summary>
            <param name="junction">The junction operator to be used</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.EndGroup">
            <summary>
            Ends a group of parameters by add a closing parenthesis ")"
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlStringBuilder.EnsureGroups">
            <summary>
            Makes sure that all groups have been ended (each call to BeginGroup has a corresponding EndGroup)
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlStringBuilder.junction">
            <summary>
            The Junction member variable.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlStringBuilder.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlStringBuilder.Junction">
            <summary>
            Gets or sets the Junction property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlStringBuilder.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlStringBuilder.Length">
            <summary>
            Gets or sets the length of the internal StringBuilder object.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:BitAuto.Services.Dal.SqlFilterBuilder`1">
            <summary>
            Allows for building SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.Append(`0,System.String)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.Append(`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIn(`0,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIn(`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotIn(`0,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotIn(`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIsNull(`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIsNull(System.String,`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIsNotNull(`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendIsNotNull(System.String,`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendRange(`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendGreaterThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendGreaterThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendLessThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendLessThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterBuilder`1.GetColumnName(`0)">
            <summary>
            Gets the column name from the specified column enumeration value.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1">
            <summary>
            Allows for building parameterized SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:BitAuto.Services.Dal.IFilterParameterCollection">
            <summary>
              Represents a type which will contain a method to 
              retrieve the A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameterCollection"/> 
              objects to use dynamic and parameterized filters.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.IFilterParameterCollection.GetParameters">
            <summary>
            Gets a collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects
            </summary>
            <returns><see cref="T:BitAuto.Services.Dal.SqlFilterParameterCollection"/> object</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.GetParameters">
            <summary>
            Gets the current collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects and
            also sets the collection's FilterExpression property.
            </summary>
            <returns></returns>
        </member>
        <member name="F:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.BitAuto#Services#Dal#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects 
            </summary>
            <returns></returns>
        </member>
        <member name="P:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.SqlFilterParameterCollection">
            <summary>
            A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterParameterCollection.SetCurrentColumn(System.Object)">
            <summary>
            Sets the CurrentColumn property.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterParameterCollection.GetParameter(System.String)">
            <summary>
            Gets the next parameter name for the specified value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlFilterParameterCollection.currentColumn">
            <summary>
            The CurrentColumn member variable.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlFilterParameterCollection.filterExpression">
            <summary>
            The FilterExpression member variable.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterParameterCollection.BitAuto#Services#Dal#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a list of sql parameters for the filter 
            </summary>
            <returns></returns>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameterCollection.CurrentColumn">
            <summary>
            Gets the CurrentColumn property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameterCollection.FilterExpression">
            <summary>
            Gets or sets the FilterExpression property.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.SqlFilterParameter">
            <summary>
            Represents the information needed for a database command parameter.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterParameter.#ctor(System.Enum,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the SqlFilterParameter class.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="index"></param>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlFilterParameter.column">
            <summary>
            The Column member variable.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlFilterParameter.parameterValue">
            <summary>
            The Value member variable.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlFilterParameter.parameterIndex">
            <summary>
            The Index member variable.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlFilterParameter.GetValue">
            <summary>
            Gets the current value converted to the appropriate <see cref="T:System.Type"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameter.Column">
            <summary>
            Gets or sets the Column property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameter.Value">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameter.Index">
            <summary>
            Gets the parameter index.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameter.Name">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameter.DbType">
            <summary>
            Gets the <see cref="T:System.Data.SqlDbType"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.SqlFilterParameter.SystemType">
            <summary>
            Gets the <see cref="T:System.Type"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityProviderBase`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="T:BitAuto.Services.Dal.IEntityProvider`2">
            <summary>
            Defines the common data access methods that can be used by the
            ProviderDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.Get(BitAuto.Services.Dal.TransactionManager,`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.GetAll(BitAuto.Services.Dal.TransactionManager)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.GetPaged(BitAuto.Services.Dal.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.Insert(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.Update(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.Delete(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.Save(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.IEntityProvider`2.DeepSave(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Get(`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Get(BitAuto.Services.Dal.TransactionManager,`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Get(`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Get(BitAuto.Services.Dal.TransactionManager,`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetAll">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetAll(BitAuto.Services.Dal.TransactionManager)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetAll(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetAll(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetPaged(BitAuto.Services.Dal.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetPaged(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetPaged(BitAuto.Services.Dal.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetTotalItems(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.IFilterParameterCollection)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> or <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Dal.IFilterParameterCollection)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> or <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.IFilterParameterCollection,System.String)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> or <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Dal.IFilterParameterCollection,System.String)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> or <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> or <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Find(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Dal.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> or <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Insert(`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Insert(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Insert(BitAuto.Services.Entities.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Insert(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.BulkInsert(BitAuto.Services.Entities.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.BulkInsert(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Update(`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Update(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Update(BitAuto.Services.Entities.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Update(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Save(`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Save(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Save(BitAuto.Services.Entities.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Save(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Delete(`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Delete(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Delete(`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Delete(BitAuto.Services.Dal.TransactionManager,`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Delete(BitAuto.Services.Entities.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,`0,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,`0,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0},System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">The Entity List object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Entities.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Entities.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Entities.TList{`0},System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0},System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Dal.TransactionManager,`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(`0,BitAuto.Services.Dal.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Dal.TransactionManager,`0,BitAuto.Services.Dal.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Dal.TransactionManager,`0,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep save functionality.
            </remarks>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A <c>DeepSession</c> of child types for easy access.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Entities.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Entities.TList{`0},BitAuto.Services.Dal.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0},BitAuto.Services.Dal.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.TList{`0},BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">The transaction manager.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.CanDeepLoad(BitAuto.Services.Entities.IEntity,System.String,BitAuto.Services.Dal.DeepLoadType,BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
             Enforces the rules set in order to load this property for a given type.
            </summary>
             <param name="entity">The entity.</param>
             <param name="key">The key.</param>
             <param name="deepLoadType">Type of the deep load.</param>
             <param name="innerList">The inner list.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.CanDeepSave(System.Object,System.String,BitAuto.Services.Dal.DeepSaveType,BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Enforces the rules set in order to save this property for a given type.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <param name="deepSaveType">Type of the deep save.</param>
            <param name="innerList">The inner list.</param>
            <returns>
            	<c>true</c> if this instance [can deep save] the specified entity; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.GetDeepSessionArgs(BitAuto.Services.Dal.Bases.DeepSession,System.Enum,System.Object,System.String)">
            <summary>
            Gets the DeepSession Arguments for an event.
            </summary>
            <param name="deepSession">the current DeepSession.</param>
            <param name="deepTypeValue"> The Deep Type Value</param>
            <param name="obj">The current entity or list.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>DeepSessionEventArgs</c> if the item being run is a valid entity or list.
            </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.OnDataRequesting(BitAuto.Services.Dal.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just before accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.OnDataRequested(BitAuto.Services.Dal.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.OnDeepLoading(BitAuto.Services.Dal.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.OnDeepSaving(BitAuto.Services.Dal.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="E:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DataRequesting">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DataRequested">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoading">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSaving">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DataRequestingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DataRequestedEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepLoadingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityProviderBaseCore`2.DeepSavingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserWithCarValueKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userWithCarValue">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userWithCarValue">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserWithCarValueKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByUserWithCarValue(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserWithCarValue index.
            </summary>
            <param name="userWithCarValue"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByUserWithCarValue(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserWithCarValue index.
            </summary>
            <param name="userWithCarValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByUserWithCarValue(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserWithCarValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userWithCarValue"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByUserWithCarValue(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserWithCarValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userWithCarValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByUserWithCarValue(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserWithCarValue index.
            </summary>
            <param name="userWithCarValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByUserWithCarValue(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserWithCarValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userWithCarValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByValueName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_UserWithCarValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByValueName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserWithCarValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserWithCarValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserWithCarValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByValueName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserWithCarValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserWithCarValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserWithCarValue},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserWithCarValue&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserWithCarValue)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserWithCarValue)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserWithCarValue,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserWithCarValue Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserWithCarValue,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserWithCarValue object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserWithCarValue instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserWithCarValue Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoBaseKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoBaseKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByUserId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserInfoBase index.
            </summary>
            <param name="userId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoBase index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoBase index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoBase index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoBase index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoBase index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByAttentionBrandId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoBase_AttentionBrandId index.
            </summary>
            <param name="attentionBrandId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByAttentionBrandId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoBase_AttentionBrandId index.
            </summary>
            <param name="attentionBrandId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByAttentionBrandId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoBase_AttentionBrandId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="attentionBrandId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByAttentionBrandId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoBase_AttentionBrandId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="attentionBrandId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByAttentionBrandId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoBase_AttentionBrandId index.
            </summary>
            <param name="attentionBrandId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.GetByAttentionBrandId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoBase_AttentionBrandId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="attentionBrandId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserInfoBase},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserInfoBase&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserInfoBase)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserInfoBase)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoBase,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserInfoBase Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoBase,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserInfoBase object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserInfoBase instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserInfoBase Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserGenderValueProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserGenderValueProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserGenderValueProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserGenderValueKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userGenderValueId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userGenderValueId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserGenderValueKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByUserGenderValueId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserGenderValue index.
            </summary>
            <param name="userGenderValueId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByUserGenderValueId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGenderValue index.
            </summary>
            <param name="userGenderValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByUserGenderValueId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGenderValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userGenderValueId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByUserGenderValueId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGenderValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userGenderValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByUserGenderValueId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGenderValue index.
            </summary>
            <param name="userGenderValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByUserGenderValueId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserGenderValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userGenderValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByValueName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_UserGenderValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByValueName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserGenderValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserGenderValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserGenderValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByValueName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserGenderValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserGenderValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserGenderValue},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserGenderValue&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserGenderValue)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserGenderValue)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserGenderValue,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserGenderValue Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserGenderValue,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserGenderValue object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserGenderValue instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserGenderValue Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserStatusValueProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserStatusValueKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userStatusValueId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userStatusValueId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserStatusValueKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByUserStatusValueId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserStatusValue index.
            </summary>
            <param name="userStatusValueId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByUserStatusValueId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserStatusValue index.
            </summary>
            <param name="userStatusValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByUserStatusValueId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserStatusValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userStatusValueId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByUserStatusValueId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserStatusValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userStatusValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByUserStatusValueId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserStatusValue index.
            </summary>
            <param name="userStatusValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByUserStatusValueId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserStatusValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userStatusValueId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByValueName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_UserStatusValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByValueName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserStatusValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserStatusValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserStatusValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByValueName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserStatusValue_ValueName index.
            </summary>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.GetByValueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserStatusValue_ValueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="valueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserStatusValue},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserStatusValue&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserStatusValue)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserStatusValue)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserStatusValue,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserStatusValue Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserStatusValue,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserStatusValue object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserStatusValue instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserStatusValue Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserStatusValueChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserStatusValue</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserStatusValueFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserStatusValueFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserStatusValueParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserStatusValueParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserStatusValueParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationDetailProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.OperationDetailProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.OperationDetailProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationDetailKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="detailId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="detailId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByOptId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the OperationLog_OperationDetail_FK key.
            	OperationLog_OperationDetail_FK Description: 
            </summary>
            <param name="optId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.OperationDetail objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByOptId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the OperationLog_OperationDetail_FK key.
            	OperationLog_OperationDetail_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="optId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.OperationDetail objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByOptId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_OperationDetail_FK key.
            	OperationLog_OperationDetail_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="optId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.OperationDetail objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByOptId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_OperationDetail_FK key.
            	operationLogOperationDetailFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="optId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.OperationDetail objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByOptId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_OperationDetail_FK key.
            	operationLogOperationDetailFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="optId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.OperationDetail objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByOptId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_OperationDetail_FK key.
            	OperationLog_OperationDetail_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="optId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.OperationDetail objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationDetailKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByDetailId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key OperationDetail_PK index.
            </summary>
            <param name="detailId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByDetailId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the OperationDetail_PK index.
            </summary>
            <param name="detailId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByDetailId(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the OperationDetail_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="detailId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByDetailId(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the OperationDetail_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="detailId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByDetailId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OperationDetail_PK index.
            </summary>
            <param name="detailId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.GetByDetailId(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OperationDetail_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="detailId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.OperationDetail},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;OperationDetail&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.OperationDetail)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.OperationDetail)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationDetail,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.OperationDetail Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationDetail,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.OperationDetail object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.OperationDetail instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.OperationDetail Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.ExpressionParserBase">
            <summary>
            Provides the base functionality required to parse search terms.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.#ctor(System.String,BitAuto.Services.Dal.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ExpressionParserBase class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.ParseCore(System.String)">
            <summary>
            Appends the specified search text to the current expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.ParseQuotes(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Parses quoted search terms.
            </summary>
            <param name="searchText"></param>
            <param name="quotedValues"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.IsKeyWord(System.String)">
            <summary>
            Determines whether the specified word is a reserved keyword.
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.AppendOr">
            <summary>
            Appends an OR expression.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.AppendAnd">
            <summary>
            Appends an AND expression.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.AppendSpace">
            <summary>
            Appends an expression separator.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.OpenGrouping">
            <summary>
            Appends a group opened expression.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.CloseGrouping">
            <summary>
            Appends a group closed expression.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ExpressionParserBase.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="F:BitAuto.Services.Dal.ExpressionParserBase.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.ExpressionParserBase.propertyName">
            <summary>
            The PropertyName member variable.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.ExpressionParserBase.comparisonType">
            <summary>
            The ComparisonType member variable.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.ExpressionParserBase.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.ExpressionParserBase.PropertyName">
            <summary>
            Gets or sets the PropertyName property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.ExpressionParserBase.ComparisonType">
            <summary>
            Gets or sets the ComparisonType property.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityViewProviderBase`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetAll">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetAll(BitAuto.Services.Dal.TransactionManager)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetAll(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetAll(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(BitAuto.Services.Dal.TransactionManager)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(BitAuto.Services.Dal.TransactionManager,System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(BitAuto.Services.Dal.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Get(BitAuto.Services.Dal.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetPaged(BitAuto.Services.Dal.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetPaged(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetPaged(BitAuto.Services.Dal.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.GetTotalItems(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Find(BitAuto.Services.Dal.IFilterParameterCollection)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Find(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Dal.IFilterParameterCollection)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Find(BitAuto.Services.Dal.IFilterParameterCollection,System.String)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Find(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Dal.IFilterParameterCollection,System.String)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Find(BitAuto.Services.Dal.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.EntityViewProviderBaseCore`1.Find(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Dal.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:BitAuto.Services.Dal.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogNoticeReceiverKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="noticeReceiverId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="noticeReceiverId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByProjectId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the Project_NoticeReceive_FK key.
            	Project_NoticeReceive_FK Description: 
            </summary>
            <param name="projectId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogNoticeReceiver objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the Project_NoticeReceive_FK key.
            	Project_NoticeReceive_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogNoticeReceiver objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_NoticeReceive_FK key.
            	Project_NoticeReceive_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogNoticeReceiver objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByProjectId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_NoticeReceive_FK key.
            	projectNoticeReceiveFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="projectId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogNoticeReceiver objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByProjectId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Project_NoticeReceive_FK key.
            	projectNoticeReceiveFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="projectId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogNoticeReceiver objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Project_NoticeReceive_FK key.
            	Project_NoticeReceive_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogNoticeReceiver objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogNoticeReceiverKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByNoticeReceiverId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key NoticeReceive_PK index.
            </summary>
            <param name="noticeReceiverId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByNoticeReceiverId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the NoticeReceive_PK index.
            </summary>
            <param name="noticeReceiverId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByNoticeReceiverId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the NoticeReceive_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="noticeReceiverId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByNoticeReceiverId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the NoticeReceive_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="noticeReceiverId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByNoticeReceiverId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the NoticeReceive_PK index.
            </summary>
            <param name="noticeReceiverId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.GetByNoticeReceiverId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the NoticeReceive_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="noticeReceiverId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SysLogNoticeReceiver},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SysLogNoticeReceiver&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SysLogNoticeReceiver)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SysLogNoticeReceiver)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogNoticeReceiver,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogNoticeReceiver Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogNoticeReceiver,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SysLogNoticeReceiver object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SysLogNoticeReceiver instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogNoticeReceiver Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SysLogNoticeReceiver</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverChildEntityTypes.SysLogProject">
            <summary>
             Composite Property for <c>SysLogProject</c> at ProjectIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogImportantPageKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="imptPageId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="imptPageId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByProjectId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the SysLogProject_SysLogImportantPage_FK1 key.
            	SysLogProject_SysLogImportantPage_FK1 Description: 
            </summary>
            <param name="projectId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogImportantPage objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the SysLogProject_SysLogImportantPage_FK1 key.
            	SysLogProject_SysLogImportantPage_FK1 Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogImportantPage objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the SysLogProject_SysLogImportantPage_FK1 key.
            	SysLogProject_SysLogImportantPage_FK1 Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogImportantPage objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByProjectId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the SysLogProject_SysLogImportantPage_FK1 key.
            	sysLogProjectSysLogImportantPageFk1 Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="projectId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogImportantPage objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByProjectId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the SysLogProject_SysLogImportantPage_FK1 key.
            	sysLogProjectSysLogImportantPageFk1 Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="projectId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogImportantPage objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the SysLogProject_SysLogImportantPage_FK1 key.
            	SysLogProject_SysLogImportantPage_FK1 Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogImportantPage objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogImportantPageKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByImptPageId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key SysLogImportantPage_PK index.
            </summary>
            <param name="imptPageId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByImptPageId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the SysLogImportantPage_PK index.
            </summary>
            <param name="imptPageId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByImptPageId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the SysLogImportantPage_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="imptPageId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByImptPageId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the SysLogImportantPage_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="imptPageId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByImptPageId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the SysLogImportantPage_PK index.
            </summary>
            <param name="imptPageId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByImptPageId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the SysLogImportantPage_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="imptPageId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByWholeUrl(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SysLogImportantPage_WholeUrl index.
            </summary>
            <param name="wholeUrl"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByWholeUrl(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogImportantPage_WholeUrl index.
            </summary>
            <param name="wholeUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByWholeUrl(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogImportantPage_WholeUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="wholeUrl"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByWholeUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogImportantPage_WholeUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="wholeUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByWholeUrl(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogImportantPage_WholeUrl index.
            </summary>
            <param name="wholeUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.GetByWholeUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogImportantPage_WholeUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="wholeUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SysLogImportantPage},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SysLogImportantPage&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SysLogImportantPage)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SysLogImportantPage)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogImportantPage,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogImportantPage Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogImportantPage,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SysLogImportantPage object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SysLogImportantPage instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogImportantPage Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogImportantPageChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SysLogImportantPage</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogImportantPageChildEntityTypes.SysLogProject">
            <summary>
             Composite Property for <c>SysLogProject</c> at ProjectIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogImportantPageFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogImportantPageFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogImportantPageParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogImportantPageParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogImportantPageProviderBase.IsExistByProjectIDAndExceptionURL(System.Int32,System.String)">
            <summary>
            根据项目ID和异常URL，来判断是否为重要URL
            </summary>
            <param name="projectID">项目ID</param>
            <param name="exceptionURL">异常URL</param>
            <returns>若为存在，则大于0；否则小于0。</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCodeSchemaKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.Delete(System.Int32,System.Byte[])">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="busiCodeSchemaId">. Primary Key.</param>
            <param name="updateTime">The timestamp field used for concurrency check.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Byte[])">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeSchemaId">. Primary Key.</param>
            <param name="updateTime">The timestamp field used for concurrency check.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the BusiCode_CodeSchema_FK key.
            	BusiCode_CodeSchema_FK Description: 
            </summary>
            <param name="busiCodeId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.BusiCodeSchema objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the BusiCode_CodeSchema_FK key.
            	BusiCode_CodeSchema_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.BusiCodeSchema objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the BusiCode_CodeSchema_FK key.
            	BusiCode_CodeSchema_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.BusiCodeSchema objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the BusiCode_CodeSchema_FK key.
            	busiCodeCodeSchemaFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="busiCodeId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.BusiCodeSchema objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the BusiCode_CodeSchema_FK key.
            	busiCodeCodeSchemaFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="busiCodeId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.BusiCodeSchema objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the BusiCode_CodeSchema_FK key.
            	BusiCode_CodeSchema_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.BusiCodeSchema objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCodeSchemaKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeSchemaId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CodeSchema index.
            </summary>
            <param name="busiCodeSchemaId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeSchemaId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CodeSchema index.
            </summary>
            <param name="busiCodeSchemaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeSchemaId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CodeSchema index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeSchemaId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeSchemaId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CodeSchema index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeSchemaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeSchemaId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CodeSchema index.
            </summary>
            <param name="busiCodeSchemaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeSchemaId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CodeSchema index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeSchemaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeIdBeginCode(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key Uni_CodeSchema_BeginCode index.
            </summary>
            <param name="busiCodeId"></param>
            <param name="beginCode"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeIdBeginCode(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Uni_CodeSchema_BeginCode index.
            </summary>
            <param name="busiCodeId"></param>
            <param name="beginCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeIdBeginCode(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the Uni_CodeSchema_BeginCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <param name="beginCode"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeIdBeginCode(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Uni_CodeSchema_BeginCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <param name="beginCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeIdBeginCode(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Uni_CodeSchema_BeginCode index.
            </summary>
            <param name="busiCodeId"></param>
            <param name="beginCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.GetByBusiCodeIdBeginCode(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Uni_CodeSchema_BeginCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <param name="beginCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.BusiCodeSchema},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;BusiCodeSchema&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.BusiCodeSchema)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.BusiCodeSchema)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCodeSchema,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.BusiCodeSchema Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCodeSchema,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.BusiCodeSchema object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.BusiCodeSchema instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.BusiCodeSchema Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.CommunityUserProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.CommunityUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.CommunityUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.CommunityUserKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="cmuId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.CommunityUserKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.GetByCmuId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key Community_User_PK index.
            </summary>
            <param name="cmuId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.GetByCmuId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Community_User_PK index.
            </summary>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.GetByCmuId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Community_User_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.GetByCmuId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Community_User_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.GetByCmuId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Community_User_PK index.
            </summary>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.GetByCmuId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Community_User_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.CommunityUser},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;CommunityUser&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.CommunityUser)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.CommunityUser)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.CommunityUser,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.CommunityUser Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.CommunityUser,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.CommunityUser object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.CommunityUser instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.CommunityUser Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceTypeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorResourceTypeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceTypeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceTypeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByAuthorResourceTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_ResourceType index.
            </summary>
            <param name="authorResourceTypeId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByAuthorResourceTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ResourceType index.
            </summary>
            <param name="authorResourceTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByAuthorResourceTypeId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ResourceType index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceTypeId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByAuthorResourceTypeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_ResourceType index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByAuthorResourceTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ResourceType index.
            </summary>
            <param name="authorResourceTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByAuthorResourceTypeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_ResourceType index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByResourceTypeValue(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_ResourceType_ResourceTypeValue index.
            </summary>
            <param name="resourceTypeValue"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByResourceTypeValue(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_ResourceType_ResourceTypeValue index.
            </summary>
            <param name="resourceTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByResourceTypeValue(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_ResourceType_ResourceTypeValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceTypeValue"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByResourceTypeValue(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_ResourceType_ResourceTypeValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByResourceTypeValue(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_ResourceType_ResourceTypeValue index.
            </summary>
            <param name="resourceTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.GetByResourceTypeValue(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_ResourceType_ResourceTypeValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorResourceType},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorResourceType&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorResourceType)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorResourceType)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceType,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorResourceType Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceType,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorResourceType object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorResourceType instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorResourceType Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserStatusValueProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserStatusValueProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCommonKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCommonKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserInfoCommon index.
            </summary>
            <param name="userId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCommon index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCommon index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCommon index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCommon index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCommon index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCommon_UserName index.
            </summary>
            <param name="userName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_UserName index.
            </summary>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_UserName index.
            </summary>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserApplicationIdUserName(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_UserInfoCommon_UserApplicationID_UserName index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserApplicationIdUserName(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserInfoCommon_UserApplicationID_UserName index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserApplicationIdUserName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserInfoCommon_UserApplicationID_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserApplicationIdUserName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserInfoCommon_UserApplicationID_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserApplicationIdUserName(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserInfoCommon_UserApplicationID_UserName index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByUserApplicationIdUserName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserInfoCommon_UserApplicationID_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByCreateTime(System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCommon_CreateTime index.
            </summary>
            <param name="createTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByCreateTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_CreateTime index.
            </summary>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByCreateTime(BitAuto.Services.Dal.TransactionManager,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_CreateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="createTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByCreateTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_CreateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByCreateTime(System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_CreateTime index.
            </summary>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByCreateTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_CreateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByLastChangeTime(System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCommon_LastChangeTime index.
            </summary>
            <param name="lastChangeTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByLastChangeTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_LastChangeTime index.
            </summary>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByLastChangeTime(BitAuto.Services.Dal.TransactionManager,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_LastChangeTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastChangeTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByLastChangeTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_LastChangeTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByLastChangeTime(System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_LastChangeTime index.
            </summary>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByLastChangeTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_LastChangeTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByTrueName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCommon_TrueName index.
            </summary>
            <param name="trueName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByTrueName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_TrueName index.
            </summary>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByTrueName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_TrueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="trueName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByTrueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_TrueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByTrueName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_TrueName index.
            </summary>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByTrueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_TrueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByEmail(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCommon_Email index.
            </summary>
            <param name="email"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByEmail(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_Email index.
            </summary>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByEmail(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_Email index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="email"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByEmail(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_Email index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_Email index.
            </summary>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByEmail(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_Email index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByMobilePhone(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCommon_MobilePhone index.
            </summary>
            <param name="mobilePhone"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByMobilePhone(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_MobilePhone index.
            </summary>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByMobilePhone(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_MobilePhone index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="mobilePhone"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByMobilePhone(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_MobilePhone index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByMobilePhone(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_MobilePhone index.
            </summary>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.GetByMobilePhone(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCommon_MobilePhone index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserInfoCommon},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserInfoCommon&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserInfoCommon)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserInfoCommon)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCommon,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserInfoCommon Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCommon,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserInfoCommon object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserInfoCommon instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserInfoCommon Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.CommunityUserChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.CommunityUser</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.CommunityUserFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CommunityUserFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.CommunityUserParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CommunityUserParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommunityUserParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRoleUserKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorRoleUserId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleUserId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRoleUserKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleUserId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorRoleUser index.
            </summary>
            <param name="authorRoleUserId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRoleUser index.
            </summary>
            <param name="authorRoleUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleUserId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRoleUser index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleUserId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRoleUser index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleUserId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRoleUser index.
            </summary>
            <param name="authorRoleUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRoleUser index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleIdUserId(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_AuthorRoleUser_AuthorRoleId_UserId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="userId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleIdUserId(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleUser_AuthorRoleId_UserId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleIdUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleUser_AuthorRoleId_UserId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleIdUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleUser_AuthorRoleId_UserId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleIdUserId(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleUser_AuthorRoleId_UserId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleIdUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleUser_AuthorRoleId_UserId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_AuthorRoleUser_AuthorRoleId index.
            </summary>
            <param name="authorRoleId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_AuthorRoleId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_AuthorRoleId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_AuthorRoleId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_AuthorRoleId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_AuthorRoleId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByUserId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_AuthorRoleUser_UserId index.
            </summary>
            <param name="userId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByUserId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_UserId index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_UserId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_UserId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByUserId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_UserId index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleUser_UserId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorRoleUser},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorRoleUser&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorRoleUser)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorRoleUser)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRoleUser,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorRoleUser Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRoleUser,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorRoleUser object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorRoleUser instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorRoleUser Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleUserChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorRoleUser</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorRoleUserChildEntityTypes.AuthorRole">
            <summary>
             Composite Property for <c>AuthorRole</c> at AuthorRoleIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleUserFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleUserFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleUserParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleUserParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleUserParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.OperationLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationLogKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="optId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="optId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationLogKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOptId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key OperationLog_PK index.
            </summary>
            <param name="optId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationLog"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOptId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_PK index.
            </summary>
            <param name="optId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationLog"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOptId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="optId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationLog"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOptId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="optId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationLog"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOptId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_PK index.
            </summary>
            <param name="optId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationLog"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOptId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the OperationLog_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="optId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.OperationLog"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByUserName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_OperationLog_UserName index.
            </summary>
            <param name="userName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByUserName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_UserName index.
            </summary>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByUserName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_UserName index.
            </summary>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByClientIp(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_OperationLog_ClientIP index.
            </summary>
            <param name="clientIp"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByClientIp(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ClientIP index.
            </summary>
            <param name="clientIp"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByClientIp(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ClientIP index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="clientIp"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByClientIp(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ClientIP index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="clientIp"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByClientIp(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ClientIP index.
            </summary>
            <param name="clientIp"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByClientIp(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ClientIP index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="clientIp"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOccurredTime(System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_OperationLog_OccurredTime index.
            </summary>
            <param name="occurredTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOccurredTime(System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_OccurredTime index.
            </summary>
            <param name="occurredTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOccurredTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_OccurredTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="occurredTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOccurredTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_OccurredTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="occurredTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOccurredTime(System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_OccurredTime index.
            </summary>
            <param name="occurredTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByOccurredTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_OccurredTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="occurredTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByResourceUrl(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_OperationLog_ResourceUrl index.
            </summary>
            <param name="resourceUrl"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByResourceUrl(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ResourceUrl index.
            </summary>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByResourceUrl(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ResourceUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceUrl"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByResourceUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ResourceUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByResourceUrl(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ResourceUrl index.
            </summary>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.GetByResourceUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_OperationLog_ResourceUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.OperationLog},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;OperationLog&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.OperationLog)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.OperationLog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.OperationLog"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.OperationLog)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.OperationLog"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.OperationLog"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationLog,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.OperationLog"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.OperationLog Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.OperationLog,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.OperationLog object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.OperationLog instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.OperationLog Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationLogChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.OperationLog</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.OperationLogChildEntityTypes.OperationDetailCollection">
            <summary>
             Collection of <c>OperationLog</c> as OneToMany for OperationDetailCollection
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationLogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationLog"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the OperationLogFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationLogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationLog"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the OperationLogParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationLogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationLogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.OperationLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.NetTiersProvider">
            <summary>
             The base class to implements to create a .NetTiers provider.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.CreateTransaction">
            <summary>
            Creates a new <c cref="T:BitAuto.Services.Dal.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteNonQuery(BitAuto.Services.Dal.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteNonQuery(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteNonQuery(BitAuto.Services.Dal.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteReader(BitAuto.Services.Dal.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteReader(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteReader(BitAuto.Services.Dal.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteDataSet(BitAuto.Services.Dal.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteDataSet(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteDataSet(BitAuto.Services.Dal.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteScalar(BitAuto.Services.Dal.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteScalar(BitAuto.Services.Dal.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProvider.ExecuteScalar(BitAuto.Services.Dal.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.EntityCreationalFactoryType">
            <summary>
            Gets or sets the Creational Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.EnableEntityTracking">
            <summary>
            Gets or sets the ability to track entities.
            </summary>
            <value>true/false.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.EnableListTracking">
            <summary>
            Gets or sets the Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UseEntityFactory">
            <summary>
            Gets or sets the use entity factory property to enable the usage of the EntityFactory and it's type cache.
            </summary>
            <value>bool value</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.EnableMethodAuthorization">
            <summary>
            Gets or sets the use Enable Method Authorization to enable the usage of the Microsoft Patterns and Practices 
            IAuthorizationRuleProvider for code level authorization.
            </summary>
            <value>A bool value.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.DefaultCommandTimeout">
            <summary>
            Gets or sets the default timeout for every command
            </summary>
            <value>integer value in seconds.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.CurrentLoadPolicy">
            <summary>
            Get or set the current LoadPolicy in effect
            </summary>
            <value>A <c cref="T:BitAuto.Services.Dal.Bases.LoadPolicy"/> enumeration member.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.IsTransactionSupported">
            <summary>
             Indicates if the current <c cref="T:BitAuto.Services.Dal.Bases.NetTiersProvider"/> implementation is supporting Transactions.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorResourceProvider">
            <summary>
             Current AuthorResourceProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorDataCategoryProvider">
            <summary>
             Current AuthorDataCategoryProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorRoleProvider">
            <summary>
             Current AuthorRoleProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorResourceAclProvider">
            <summary>
             Current AuthorResourceAclProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SysLogProjectProvider">
            <summary>
             Current SysLogProjectProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorResourceTypeProvider">
            <summary>
             Current AuthorResourceTypeProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorDataValueRangeProvider">
            <summary>
             Current AuthorDataValueRangeProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.PersonalBaaInfoProvider">
            <summary>
             Current PersonalBaaInfoProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.OperationLogProvider">
            <summary>
             Current OperationLogProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorRoleUserProvider">
            <summary>
             Current AuthorRoleUserProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.CommunityUserProvider">
            <summary>
             Current CommunityUserProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.BusiCodeProvider">
            <summary>
             Current BusiCodeProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.OperationDetailProvider">
            <summary>
             Current OperationDetailProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorWebsiteUrlProvider">
            <summary>
             Current AuthorWebsiteUrlProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.BusiCodeSchemaProvider">
            <summary>
             Current BusiCodeSchemaProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SsoWebsiteProvider">
            <summary>
             Current SsoWebsiteProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SysLogEnumTypeProvider">
            <summary>
             Current SysLogEnumTypeProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SysLogExceptionInfoProvider">
            <summary>
             Current SysLogExceptionInfoProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SysLogImportantPageProvider">
            <summary>
             Current SysLogImportantPageProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.AuthorDataAclProvider">
            <summary>
             Current AuthorDataAclProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SysLogNoticeReceiverProvider">
            <summary>
             Current SysLogNoticeReceiverProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SysLogProcessRecordProvider">
            <summary>
             Current SysLogProcessRecordProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.SysLogExceptionTimeProvider">
            <summary>
             Current SysLogExceptionTimeProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserAccountProvider">
            <summary>
             Current UserAccountProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserApplicationProvider">
            <summary>
             Current UserApplicationProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserGenderValueProvider">
            <summary>
             Current UserGenderValueProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserInfoBaseProvider">
            <summary>
             Current UserInfoBaseProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserInfoCommonProvider">
            <summary>
             Current UserInfoCommonProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserInfoCoreProvider">
            <summary>
             Current UserInfoCoreProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserStatusValueProvider">
            <summary>
             Current UserStatusValueProviderBase instance.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProvider.UserWithCarValueProvider">
            <summary>
             Current UserWithCarValueProviderBase instance.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.LoadPolicy">
            <summary>
            Possibel load policies that can be applied when a provider Load method is called. Determines 
            how entities with EntityState.Unchanged and EntityState.Changed are treated during a Load
            when entity tracking is enabled.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.LoadPolicy.PreserveChanges">
            <summary>
            Refresh entities with EntityState.Unchanged if entity tracking is enabled. Entities with 
            EntityState.Changed will not be refreshed with information from the database.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.LoadPolicy.DiscardChanges">
            <summary>
            Refresh entities with EntityState.Changed as well as EntityState.Unchanged i.e. discard any
            unsaved changes.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorResourceType</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceTypeFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceTypeParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceTypeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.DeepSessionEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.#ctor(BitAuto.Services.Dal.Bases.DeepSession,System.String,System.Enum,BitAuto.Services.Entities.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
            <param name="deepSession">The Current Deep Session.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.#ctor(BitAuto.Services.Dal.Bases.DeepSession,System.String,System.Enum,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="list">The list.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.#ctor(BitAuto.Services.Dal.Bases.DeepSession,System.String,System.Enum,BitAuto.Services.Entities.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key.</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.DeepSession">
            <summary>
            Gets or sets the current DeepSession.
            </summary>
            <value>The DeepSession.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.CurrentTypePropertyKey">
            <summary>
            Gets or Sets the name of the current type property key that 
            will be used to determine if the property will be run in the deep session.
            </summary>
            <value>A string value of the type property key.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.DeepTypeValue">
            <summary>
             The current DeepType Value, Either <c>DeepLoadType</c>, or <c>DeepSaveType</c>.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.Cancel">
            <summary>
            Gets or sets the Cancel property of the event.
            </summary>
            <value>Current Cancel Value.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSessionEventArgs.Skip">
            <summary>
            Gets or sets the current Skip value.  
            Setting this property will skip the current Deep Property.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.CommandEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommandEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,BitAuto.Services.Entities.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,BitAuto.Services.Entities.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.CommandEventArgs.Command">
            <summary>
            Gets or sets the current command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.CommandEventArgs.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.CommandEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.CommandEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.DeepSession">
            <summary>
            Keeps a weak reference of the entire deep transaction for tracking purposes.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSession"/> class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.GetSessionObjects">
            <summary>
            Gets the set of current loaded objects.
            </summary>
            <returns>a list of already run objects</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.AddRun(System.Object,System.String)">
            <summary>
            Adds the specified entity property to the collection of properties.
            </summary>
            <param name="entity"></param>
            <param name="key"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.ContainsType(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.ContainsTypeExcluded(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.HasRun(System.Object,System.String)">
            <summary>
            Determines whether the specified obj has run.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.GetReference(System.Object,System.String)">
            <summary>
            Get's the reference of the object that has run
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	object of the run reference
            </returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.DeepSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSession.DeepSessionInnerList">
            <summary>
            Gets the Deep Session nner list.
            </summary>
            <value>The inner list.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSession.CancelSession">
            <summary>
            If set to true, any further requests for this deep session will be canceled.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.DeepSession.SkipChildren">
            <summary>
            If set to true, any further requests for this deep session requesting to Load a child collection will be skipped.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.ChildEntityTypeAttribute">
            <summary>
             Attribute used to decorate enumerations with underlying system type.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.ChildEntityTypeAttribute.#ctor(System.Type)">
            <summary>
             Marks the underlying type of a child entity property.
             </summary>
             <param name="entityType">Type of the property to load.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.ChildEntityTypeAttribute.GetType(System.Enum)">
            <summary>
            Gets the underlying system type for the specified enumeration value.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.ChildEntityTypeAttribute.EntityType">
            <summary>
            The underlying type for the ChildEntityTypes enumerations.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.IChildEntityProperty">
            <summary>
            Provides a common property used to access the child entity type enumeration value.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.IChildEntityProperty.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.ChildEntityProperty`1">
            <summary>
            A generic wrapper for the generated ChildEntityTypes enumerations.
            </summary>
            <typeparam name="ChildEntityTypesEnum"></typeparam>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.ChildEntityProperty`1.name">
            <summary>
            The Name member variable.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.ChildEntityProperty`1.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.ChildEntityProperty`1.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.BusiCodeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCodeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.Delete(System.Int32,System.Byte[])">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="busiCodeId">. Primary Key.</param>
            <param name="updateTime">The timestamp field used for concurrency check.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Byte[])">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId">. Primary Key.</param>
            <param name="updateTime">The timestamp field used for concurrency check.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCodeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByBusiCodeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_BusiCode index.
            </summary>
            <param name="busiCodeId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByBusiCodeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_BusiCode index.
            </summary>
            <param name="busiCodeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByBusiCodeId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_BusiCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByBusiCodeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_BusiCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByBusiCodeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_BusiCode index.
            </summary>
            <param name="busiCodeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByBusiCodeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_BusiCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="busiCodeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByCodeName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key Uni_BusiCode_CodeName index.
            </summary>
            <param name="codeName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByCodeName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Uni_BusiCode_CodeName index.
            </summary>
            <param name="codeName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByCodeName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the Uni_BusiCode_CodeName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="codeName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByCodeName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Uni_BusiCode_CodeName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="codeName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByCodeName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Uni_BusiCode_CodeName index.
            </summary>
            <param name="codeName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.GetByCodeName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Uni_BusiCode_CodeName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="codeName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.BusiCode"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.BusiCode},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;BusiCode&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.BusiCode)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.BusiCode"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.BusiCode"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.BusiCode)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.BusiCode"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.BusiCode"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCode,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.BusiCode"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.BusiCode Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.BusiCode,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.BusiCode object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.BusiCode instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.BusiCode Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.BusiCode</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.BusiCodeChildEntityTypes.BusiCodeSchemaCollection">
            <summary>
             Collection of <c>BusiCode</c> as OneToMany for BusiCodeSchemaCollection
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCode"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCode"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserApplicationProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserApplicationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserApplicationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserApplicationKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userApplicationId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserApplicationKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByUserApplicationId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserApplication index.
            </summary>
            <param name="userApplicationId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserApplication"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByUserApplicationId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserApplication index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserApplication"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByUserApplicationId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserApplication index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserApplication"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByUserApplicationId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserApplication index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserApplication"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByUserApplicationId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserApplication index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserApplication"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByUserApplicationId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserApplication index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserApplication"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByApplicationName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_Application_ApplicationName index.
            </summary>
            <param name="applicationName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByApplicationName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Application_ApplicationName index.
            </summary>
            <param name="applicationName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByApplicationName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_Application_ApplicationName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="applicationName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByApplicationName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_Application_ApplicationName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="applicationName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByApplicationName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Application_ApplicationName index.
            </summary>
            <param name="applicationName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.GetByApplicationName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_Application_ApplicationName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="applicationName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserApplication},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserApplication&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserApplication)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserApplication"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserApplication"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserApplication)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserApplication"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserApplication"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserApplication,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserApplication"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserApplication Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserApplication,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserApplication object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserApplication instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserApplication Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataAclKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorDataAclId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByResourceCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorResource key.
            	FK_AuthorDataAcl_AuthorResource Description: 
            </summary>
            <param name="resourceCode"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorResource key.
            	FK_AuthorDataAcl_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorResource key.
            	FK_AuthorDataAcl_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorResource key.
            	fkAuthorDataAclAuthorResource Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="resourceCode"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorResource key.
            	fkAuthorDataAclAuthorResource Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="resourceCode"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorResource key.
            	FK_AuthorDataAcl_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorDataCategory key.
            	FK_AuthorDataAcl_AuthorDataCategory Description: 
            </summary>
            <param name="authorDataCategoryId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorDataCategory key.
            	FK_AuthorDataAcl_AuthorDataCategory Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorDataCategory key.
            	FK_AuthorDataAcl_AuthorDataCategory Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorDataCategory key.
            	fkAuthorDataAclAuthorDataCategory Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="authorDataCategoryId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorDataCategory key.
            	fkAuthorDataAclAuthorDataCategory Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="authorDataCategoryId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorDataCategory key.
            	FK_AuthorDataAcl_AuthorDataCategory Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorRoleId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorRole key.
            	FK_AuthorDataAcl_AuthorRole Description: 
            </summary>
            <param name="authorRoleId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorRole key.
            	FK_AuthorDataAcl_AuthorRole Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorRole key.
            	FK_AuthorDataAcl_AuthorRole Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorRole key.
            	fkAuthorDataAclAuthorRole Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="authorRoleId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorRole key.
            	fkAuthorDataAclAuthorRole Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="authorRoleId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataAcl_AuthorRole key.
            	FK_AuthorDataAcl_AuthorRole Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataAcl objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataAclKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataAclId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorDataAcl index.
            </summary>
            <param name="authorDataAclId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataAclId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataAcl index.
            </summary>
            <param name="authorDataAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataAclId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataAcl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataAclId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataAcl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataAclId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataAcl index.
            </summary>
            <param name="authorDataAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataAclId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataAcl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryIdResourceCodeAuthorRoleId(System.Int32,System.String,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_AuthorDataAcl_TripleIndex index.
            </summary>
            <param name="authorDataCategoryId"></param>
            <param name="resourceCode"></param>
            <param name="authorRoleId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryIdResourceCodeAuthorRoleId(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataAcl_TripleIndex index.
            </summary>
            <param name="authorDataCategoryId"></param>
            <param name="resourceCode"></param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryIdResourceCodeAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataAcl_TripleIndex index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <param name="resourceCode"></param>
            <param name="authorRoleId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryIdResourceCodeAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataAcl_TripleIndex index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <param name="resourceCode"></param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryIdResourceCodeAuthorRoleId(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataAcl_TripleIndex index.
            </summary>
            <param name="authorDataCategoryId"></param>
            <param name="resourceCode"></param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.GetByAuthorDataCategoryIdResourceCodeAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataAcl_TripleIndex index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <param name="resourceCode"></param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorDataAcl},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorDataAcl&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorDataAcl)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorDataAcl)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataAcl,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorDataAcl Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataAcl,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorDataAcl object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorDataAcl instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorDataAcl Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataAclChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorDataAcl</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorDataAclChildEntityTypes.AuthorResource">
            <summary>
             Composite Property for <c>AuthorResource</c> at ResourceCodeSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorDataAclChildEntityTypes.AuthorDataCategory">
            <summary>
             Composite Property for <c>AuthorDataCategory</c> at AuthorDataCategoryIdSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorDataAclChildEntityTypes.AuthorRole">
            <summary>
             Composite Property for <c>AuthorRole</c> at AuthorRoleIdSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorDataAclChildEntityTypes.AuthorDataValueRangeCollection">
            <summary>
             Collection of <c>AuthorDataAcl</c> as OneToMany for AuthorDataValueRangeCollection
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataAclFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataAclFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataAclParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataAclParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataAclParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProjectProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogProjectProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogProjectProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProjectKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="projectId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByResourceCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the AuthorResource_SysLogProject_FK key.
            	AuthorResource_SysLogProject_FK Description: 
            </summary>
            <param name="resourceCode"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProject objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the AuthorResource_SysLogProject_FK key.
            	AuthorResource_SysLogProject_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProject objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AuthorResource_SysLogProject_FK key.
            	AuthorResource_SysLogProject_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProject objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the AuthorResource_SysLogProject_FK key.
            	authorResourceSysLogProjectFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="resourceCode"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProject objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AuthorResource_SysLogProject_FK key.
            	authorResourceSysLogProjectFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="resourceCode"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProject objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the AuthorResource_SysLogProject_FK key.
            	AuthorResource_SysLogProject_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProject objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProjectKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByProjectId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key Project_PK index.
            </summary>
            <param name="projectId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByProjectId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_PK index.
            </summary>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByProjectId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Project_PK index.
            </summary>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Project_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SysLogProject},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SysLogProject&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SysLogProject)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SysLogProject)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProject,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogProject Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProject,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SysLogProject object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SysLogProject instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogProject Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBase.GetProjectMailList">
            <summary>
            获得项目定时发送邮件的时间间隔列表
            </summary>
            <returns>若有数据，则返回DataSet类型；否则返回Null</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBase.GetDomainNameURL(System.String)">
            <summary>
            通过指定的URL信息，获得除去域名之外的信息
            </summary>
            <param name="exceptionUrl"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectProviderBase.GetProjectIDByProjectShortName(System.String)">
            <summary>
            根据项目名称获取项目ID
            </summary>
            <param name="projectShortName">项目名称</param>
            <returns>若不存在，则返回-1</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoBaseChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserInfoBase</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.UserInfoBaseChildEntityTypes.UserAccount">
            <summary>
             Composite Property for <c>UserAccount</c> at UserIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoBaseFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoBaseFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoBaseParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoBaseParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoBaseParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProcessRecordKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="processRecordId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="processRecordId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByExceptionInfoId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ModifyRecord_FK key.
            	ExceptionInfo_ModifyRecord_FK Description: 
            </summary>
            <param name="exceptionInfoId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProcessRecord objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ModifyRecord_FK key.
            	ExceptionInfo_ModifyRecord_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProcessRecord objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ModifyRecord_FK key.
            	ExceptionInfo_ModifyRecord_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProcessRecord objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByExceptionInfoId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ModifyRecord_FK key.
            	exceptionInfoModifyRecordFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="exceptionInfoId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProcessRecord objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByExceptionInfoId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ModifyRecord_FK key.
            	exceptionInfoModifyRecordFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="exceptionInfoId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProcessRecord objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ModifyRecord_FK key.
            	ExceptionInfo_ModifyRecord_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogProcessRecord objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProcessRecordKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessRecordId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key ModifyRecord_PK index.
            </summary>
            <param name="processRecordId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessRecordId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ModifyRecord_PK index.
            </summary>
            <param name="processRecordId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessRecordId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ModifyRecord_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="processRecordId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessRecordId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ModifyRecord_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="processRecordId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessRecordId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ModifyRecord_PK index.
            </summary>
            <param name="processRecordId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessRecordId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ModifyRecord_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="processRecordId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessTime(System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SysLogProcessRecord_ProcessTime index.
            </summary>
            <param name="processTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessTime(System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogProcessRecord_ProcessTime index.
            </summary>
            <param name="processTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogProcessRecord_ProcessTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="processTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogProcessRecord_ProcessTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="processTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessTime(System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogProcessRecord_ProcessTime index.
            </summary>
            <param name="processTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.GetByProcessTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogProcessRecord_ProcessTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="processTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SysLogProcessRecord},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SysLogProcessRecord&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SysLogProcessRecord)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SysLogProcessRecord)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProcessRecord,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogProcessRecord Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogProcessRecord,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SysLogProcessRecord object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SysLogProcessRecord instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogProcessRecord Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SysLogProcessRecord</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogProcessRecordChildEntityTypes.SysLogExceptionInfo">
            <summary>
             Composite Property for <c>SysLogExceptionInfo</c> at ExceptionInfoIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogProcessRecordFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogProcessRecordParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProcessRecordParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionInfoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="exceptionInfoId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByProjectId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_ExceptionInfo_FK key.
            	Project_ExceptionInfo_FK Description: 
            </summary>
            <param name="projectId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionInfo objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_ExceptionInfo_FK key.
            	Project_ExceptionInfo_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionInfo objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_ExceptionInfo_FK key.
            	Project_ExceptionInfo_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionInfo objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByProjectId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Project_ExceptionInfo_FK key.
            	projectExceptionInfoFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="projectId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionInfo objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByProjectId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Project_ExceptionInfo_FK key.
            	projectExceptionInfoFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="projectId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionInfo objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByProjectId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Project_ExceptionInfo_FK key.
            	Project_ExceptionInfo_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="projectId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionInfo objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionInfoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionInfoId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key ExceptionInfo_PK index.
            </summary>
            <param name="exceptionInfoId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionInfoId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_PK index.
            </summary>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionInfoId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_PK index.
            </summary>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionHash(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_SysLogExceptionInfo_ExceptionHash index.
            </summary>
            <param name="exceptionHash"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionHash(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogExceptionInfo_ExceptionHash index.
            </summary>
            <param name="exceptionHash"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionHash(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogExceptionInfo_ExceptionHash index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionHash"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionHash(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogExceptionInfo_ExceptionHash index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionHash"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionHash(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogExceptionInfo_ExceptionHash index.
            </summary>
            <param name="exceptionHash"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByExceptionHash(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogExceptionInfo_ExceptionHash index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionHash"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastGenerateTime(System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SysLogExceptionInfo_LastGenerateTime index.
            </summary>
            <param name="lastGenerateTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastGenerateTime(System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastGenerateTime index.
            </summary>
            <param name="lastGenerateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastGenerateTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastGenerateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastGenerateTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastGenerateTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastGenerateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastGenerateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastGenerateTime(System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastGenerateTime index.
            </summary>
            <param name="lastGenerateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastGenerateTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastGenerateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastGenerateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastSendMailTime(System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SysLogExceptionInfo_LastSendMailTime index.
            </summary>
            <param name="lastSendMailTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastSendMailTime(System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastSendMailTime index.
            </summary>
            <param name="lastSendMailTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastSendMailTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastSendMailTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastSendMailTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastSendMailTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastSendMailTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastSendMailTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastSendMailTime(System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastSendMailTime index.
            </summary>
            <param name="lastSendMailTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.GetByLastSendMailTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionInfo_LastSendMailTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastSendMailTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SysLogExceptionInfo},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SysLogExceptionInfo&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SysLogExceptionInfo)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SysLogExceptionInfo)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionInfo,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogExceptionInfo Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionInfo,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SysLogExceptionInfo object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SysLogExceptionInfo instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogExceptionInfo Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SysLogExceptionInfo</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogExceptionInfoChildEntityTypes.SysLogProject">
            <summary>
             Composite Property for <c>SysLogProject</c> at ProjectIdSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogExceptionInfoChildEntityTypes.SysLogExceptionTimeCollection">
            <summary>
             Collection of <c>SysLogExceptionInfo</c> as OneToMany for SysLogExceptionTimeCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogExceptionInfoChildEntityTypes.SysLogProcessRecordCollection">
            <summary>
             Collection of <c>SysLogExceptionInfo</c> as OneToMany for SysLogProcessRecordCollection
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorRoleUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataValueRangeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorDataValueRangeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataValueRangeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataValueRange_AuthorDataAcl key.
            	FK_AuthorDataValueRange_AuthorDataAcl Description: 
            </summary>
            <param name="authorDataAclId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataValueRange objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataValueRange_AuthorDataAcl key.
            	FK_AuthorDataValueRange_AuthorDataAcl Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataValueRange objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataValueRange_AuthorDataAcl key.
            	FK_AuthorDataValueRange_AuthorDataAcl Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataValueRange objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataValueRange_AuthorDataAcl key.
            	fkAuthorDataValueRangeAuthorDataAcl Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="authorDataAclId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataValueRange objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataValueRange_AuthorDataAcl key.
            	fkAuthorDataValueRangeAuthorDataAcl Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="authorDataAclId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataValueRange objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataValueRange_AuthorDataAcl key.
            	FK_AuthorDataValueRange_AuthorDataAcl Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataValueRange objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataValueRangeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataValueRangeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorDataValueRange index.
            </summary>
            <param name="authorDataValueRangeId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataValueRangeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataValueRange index.
            </summary>
            <param name="authorDataValueRangeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataValueRangeId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataValueRange index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataValueRangeId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataValueRangeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataValueRange index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataValueRangeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataValueRangeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataValueRange index.
            </summary>
            <param name="authorDataValueRangeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataValueRangeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataValueRange index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataValueRangeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclIdDataValue(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_AuthorDataValueRange_Main index.
            </summary>
            <param name="authorDataAclId"></param>
            <param name="dataValue"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclIdDataValue(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataValueRange_Main index.
            </summary>
            <param name="authorDataAclId"></param>
            <param name="dataValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclIdDataValue(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataValueRange_Main index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <param name="dataValue"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclIdDataValue(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataValueRange_Main index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <param name="dataValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclIdDataValue(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataValueRange_Main index.
            </summary>
            <param name="authorDataAclId"></param>
            <param name="dataValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.GetByAuthorDataAclIdDataValue(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorDataValueRange_Main index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataAclId"></param>
            <param name="dataValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorDataValueRange},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorDataValueRange&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorDataValueRange)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorDataValueRange)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataValueRange,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorDataValueRange Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataValueRange,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorDataValueRange object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorDataValueRange instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorDataValueRange Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceAclKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorResourceAclId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceAclId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceAclKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorResourceAclId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorResourceAcl index.
            </summary>
            <param name="authorResourceAclId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorResourceAclId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResourceAcl index.
            </summary>
            <param name="authorResourceAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorResourceAclId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResourceAcl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceAclId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorResourceAclId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResourceAcl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorResourceAclId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResourceAcl index.
            </summary>
            <param name="authorResourceAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorResourceAclId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResourceAcl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceAclId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleIdResourceCode(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_AuthorRoleAcl_AuthorRoleId_AuthorResourceId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="resourceCode"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleIdResourceCode(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleAcl_AuthorRoleId_AuthorResourceId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleIdResourceCode(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleAcl_AuthorRoleId_AuthorResourceId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="resourceCode"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleIdResourceCode(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleAcl_AuthorRoleId_AuthorResourceId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleIdResourceCode(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleAcl_AuthorRoleId_AuthorResourceId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleIdResourceCode(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRoleAcl_AuthorRoleId_AuthorResourceId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByResourceCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_AuthorRoleAcl_ResourceCode index.
            </summary>
            <param name="resourceCode"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_ResourceCode index.
            </summary>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_ResourceCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_ResourceCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_ResourceCode index.
            </summary>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_ResourceCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_AuthorRoleAcl_AuthorRoleId index.
            </summary>
            <param name="authorRoleId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_AuthorRoleId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_AuthorRoleId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_AuthorRoleId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_AuthorRoleId index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRoleAcl_AuthorRoleId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorResourceAcl},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorResourceAcl&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorResourceAcl)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorResourceAcl)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceAcl,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorResourceAcl Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceAcl,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorResourceAcl object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorResourceAcl instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorResourceAcl Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.NetTiersProviderCollection">
            <summary>
            Reprensents the strongly typed collection of NetTiersProvider.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.NetTiersProviderCollection.Add(BitAuto.Services.Dal.Bases.NetTiersProvider)">
            <summary>
            Adds the specified provider.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NetTiersProvider"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogEnumTypeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="enumTypeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="enumTypeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogEnumTypeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SysLogEnumType index.
            </summary>
            <param name="enumTypeId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLogEnumType index.
            </summary>
            <param name="enumTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLogEnumType index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="enumTypeId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLogEnumType index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="enumTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLogEnumType index.
            </summary>
            <param name="enumTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLogEnumType index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="enumTypeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeValue(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_SysLogEnumType_EnumTypeValue index.
            </summary>
            <param name="enumTypeValue"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeValue(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogEnumType_EnumTypeValue index.
            </summary>
            <param name="enumTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeValue(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogEnumType_EnumTypeValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="enumTypeValue"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeValue(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogEnumType_EnumTypeValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="enumTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeValue(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogEnumType_EnumTypeValue index.
            </summary>
            <param name="enumTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.GetByEnumTypeValue(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_SysLogEnumType_EnumTypeValue index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="enumTypeValue"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SysLogEnumType},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SysLogEnumType&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SysLogEnumType)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SysLogEnumType)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogEnumType,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogEnumType Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogEnumType,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SysLogEnumType object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SysLogEnumType instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogEnumType Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.BusiCodeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorResourceId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResourceKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByAuthorResourceId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorResource index.
            </summary>
            <param name="authorResourceId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByAuthorResourceId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResource index.
            </summary>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByAuthorResourceId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResource index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByAuthorResourceId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResource index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByAuthorResourceId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResource index.
            </summary>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByAuthorResourceId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorResource index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceCode(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_AuthorResource_ResourceCode index.
            </summary>
            <param name="resourceCode"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorResource_ResourceCode index.
            </summary>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorResource_ResourceCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorResource_ResourceCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceCode(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorResource_ResourceCode index.
            </summary>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceCode(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorResource_ResourceCode index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceCode"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceUrl(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_AuthorResource_ResourcePartialUrl index.
            </summary>
            <param name="resourceUrl"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceUrl(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorResource_ResourcePartialUrl index.
            </summary>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceUrl(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorResource_ResourcePartialUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceUrl"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorResource_ResourcePartialUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceUrl(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorResource_ResourcePartialUrl index.
            </summary>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.GetByResourceUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorResource_ResourcePartialUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="resourceUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorResource},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorResource&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorResource)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorResource)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResource,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorResource Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorResource,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorResource object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorResource instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorResource Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBase.FindByPartialUrl(System.String,System.String)">
            <summary>
            根据系统编号和部分资源Url取得资源对象
            </summary>
            <param name="sysCode">系统编号</param>
            <param name="partialUrl">不包含站点Url的部分Url</param>
            <returns>符合条件的资源对象</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceProviderBase.QueryResource(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            查询资源
            </summary>
            <param name="sysCode">系统Code</param>
            <param name="resourceName">资源名称</param>
            <param name="parentResource">上级资源</param>
            <param name="resourceType">资源类型</param>
            <param name="pageIndex">第几页</param>
            <param name="pageSize">一页显示多少条记录</param>
            <param name="recordCount">总共多少条记录</param>
            <returns>资源集合</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.NetTiersServiceSection">
            <summary>
            The class that hold the configuration section for the NetTiers Service.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersServiceSection.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.Bases.NetTiersServiceSection.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserWithCarValueChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserWithCarValue</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserWithCarValueFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserWithCarValueFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserWithCarValueParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserWithCarValueParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserWithCarValueParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverProviderBase.GetEmailArrayByProjectID(System.Int32)">
            <summary>
            根据指定的项目ID，获取用户Email地址数组
            </summary>
            <param name="projectid">项目ID</param>
            <returns>若有，则返回用户Email地址数组；否则，返回null</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataAclProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.BusiCodeSchema</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.BusiCodeSchemaChildEntityTypes.BusiCode">
            <summary>
             Composite Property for <c>BusiCode</c> at BusiCodeIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeSchemaFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeSchemaParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.BusiCodeSchemaParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProjectChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SysLogProject</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogProjectChildEntityTypes.AuthorResource">
            <summary>
             Composite Property for <c>AuthorResource</c> at ResourceCodeSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogProjectChildEntityTypes.SysLogExceptionInfoCollection">
            <summary>
             Collection of <c>SysLogProject</c> as OneToMany for SysLogExceptionInfoCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogProjectChildEntityTypes.SysLogImportantPageCollection">
            <summary>
             Collection of <c>SysLogProject</c> as OneToMany for SysLogImportantPageCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogProjectChildEntityTypes.SysLogNoticeReceiverCollection">
            <summary>
             Collection of <c>SysLogProject</c> as OneToMany for SysLogNoticeReceiverCollection
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProjectFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogProjectFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogProjectParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogProjectParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogProjectParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorResource</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceChildEntityTypes.AuthorRoleCollection">
            <summary>
             Collection of <c>AuthorResource</c> as OneToMany for AuthorRoleCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceChildEntityTypes.SysLogProjectCollection">
            <summary>
             Collection of <c>AuthorResource</c> as OneToMany for SysLogProjectCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceChildEntityTypes.AuthorWebsiteUrlCollection">
            <summary>
             Collection of <c>AuthorResource</c> as OneToMany for AuthorWebsiteUrlCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceChildEntityTypes.AuthorResourceAclCollection">
            <summary>
             Collection of <c>AuthorResource</c> as OneToMany for AuthorResourceAclCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceChildEntityTypes.AuthorDataCategoryCollection">
            <summary>
             Collection of <c>AuthorResource</c> as OneToMany for AuthorDataCategoryCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceChildEntityTypes.AuthorDataAclCollection">
            <summary>
             Collection of <c>AuthorResource</c> as OneToMany for AuthorDataAclCollection
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCoreKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCoreKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByUserId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserInfoCore index.
            </summary>
            <param name="userId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCore index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCore index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCore index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCore index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfoCore index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByTrueName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCore_TrueName index.
            </summary>
            <param name="trueName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByTrueName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_TrueName index.
            </summary>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByTrueName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_TrueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="trueName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByTrueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_TrueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByTrueName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_TrueName index.
            </summary>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByTrueName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_TrueName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="trueName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByEmail(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCore_Email index.
            </summary>
            <param name="email"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByEmail(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_Email index.
            </summary>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByEmail(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_Email index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="email"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByEmail(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_Email index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_Email index.
            </summary>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByEmail(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_Email index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="email"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByMobilePhone(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserInfoCore_MobilePhone index.
            </summary>
            <param name="mobilePhone"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByMobilePhone(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_MobilePhone index.
            </summary>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByMobilePhone(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_MobilePhone index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="mobilePhone"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByMobilePhone(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_MobilePhone index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByMobilePhone(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_MobilePhone index.
            </summary>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.GetByMobilePhone(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserInfoCore_MobilePhone index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="mobilePhone"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserInfoCore},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserInfoCore&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserInfoCore)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserInfoCore)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCore,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserInfoCore Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserInfoCore,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserInfoCore object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserInfoCore instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserInfoCore Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCoreChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserInfoCore</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.UserInfoCoreChildEntityTypes.UserAccount">
            <summary>
             Composite Property for <c>UserAccount</c> at UserIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCoreFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCoreFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCoreParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCoreParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCoreParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserAccountProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserAccountProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserAccountProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserAccountKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserAccountKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserAccount index.
            </summary>
            <param name="userId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserAccount index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserAccount index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserAccount index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserAccount index.
            </summary>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserAccount index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserAccount_UserName index.
            </summary>
            <param name="userName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_UserName index.
            </summary>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_UserName index.
            </summary>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserName(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserApplicationIdUserName(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_UserAccount_UserApplicationID_UserName index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserApplicationIdUserName(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserAccount_UserApplicationID_UserName index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserApplicationIdUserName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserAccount_UserApplicationID_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserApplicationIdUserName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserAccount_UserApplicationID_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserApplicationIdUserName(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserAccount_UserApplicationID_UserName index.
            </summary>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByUserApplicationIdUserName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_UserAccount_UserApplicationID_UserName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="userApplicationId"></param>
            <param name="userName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.UserAccount"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByCreateTime(System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserAccount_CreateTime index.
            </summary>
            <param name="createTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByCreateTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_CreateTime index.
            </summary>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByCreateTime(BitAuto.Services.Dal.TransactionManager,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_CreateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="createTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByCreateTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_CreateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByCreateTime(System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_CreateTime index.
            </summary>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByCreateTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_CreateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="createTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByLastChangeTime(System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_UserAccount_LastChangeTime index.
            </summary>
            <param name="lastChangeTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByLastChangeTime(System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_LastChangeTime index.
            </summary>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByLastChangeTime(BitAuto.Services.Dal.TransactionManager,System.DateTime)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_LastChangeTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastChangeTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByLastChangeTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_LastChangeTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByLastChangeTime(System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_LastChangeTime index.
            </summary>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.GetByLastChangeTime(BitAuto.Services.Dal.TransactionManager,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_UserAccount_LastChangeTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="lastChangeTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.UserAccount},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;UserAccount&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.UserAccount)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserAccount"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserAccount"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.UserAccount)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.UserAccount"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserAccount"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserAccount,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.UserAccount"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserAccount Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.UserAccount,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.UserAccount object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.UserAccount instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.UserAccount Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SsoWebsiteKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="ssoWebsiteId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="ssoWebsiteId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SsoWebsiteKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.GetBySsoWebsiteId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SsoWebsite index.
            </summary>
            <param name="ssoWebsiteId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.GetBySsoWebsiteId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SsoWebsite index.
            </summary>
            <param name="ssoWebsiteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.GetBySsoWebsiteId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SsoWebsite index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="ssoWebsiteId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.GetBySsoWebsiteId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SsoWebsite index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="ssoWebsiteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.GetBySsoWebsiteId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SsoWebsite index.
            </summary>
            <param name="ssoWebsiteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.GetBySsoWebsiteId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SsoWebsite index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="ssoWebsiteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SsoWebsite},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SsoWebsite&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SsoWebsite)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SsoWebsite)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SsoWebsite,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SsoWebsite Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SsoWebsite,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SsoWebsite object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SsoWebsite instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SsoWebsite Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SsoWebsiteChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SsoWebsite</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SsoWebsiteFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SsoWebsiteFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SsoWebsiteParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SsoWebsiteParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SsoWebsiteParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.PersonalBaaInfoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="cmuId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.PersonalBaaInfoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.GetByCmuId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key Personal_BAA_Info_PK index.
            </summary>
            <param name="cmuId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.GetByCmuId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Personal_BAA_Info_PK index.
            </summary>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.GetByCmuId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Personal_BAA_Info_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.GetByCmuId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the Personal_BAA_Info_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.GetByCmuId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Personal_BAA_Info_PK index.
            </summary>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.GetByCmuId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the Personal_BAA_Info_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="cmuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.PersonalBaaInfo},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;PersonalBaaInfo&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.PersonalBaaInfo)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.PersonalBaaInfo)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.PersonalBaaInfo,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.PersonalBaaInfo Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.PersonalBaaInfo,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.PersonalBaaInfo object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.PersonalBaaInfo instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.PersonalBaaInfo Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.PersonalBaaInfo</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PersonalBaaInfoFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PersonalBaaInfoParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.PersonalBaaInfoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.DataRepository">
            <summary>
            This class represents the Data source repository and gives access to all the underlying providers.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.LoadProvider(BitAuto.Services.Dal.Bases.NetTiersProvider)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.LoadProvider(BitAuto.Services.Dal.Bases.NetTiersProvider,System.Boolean)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
            <param name="setAsDefault">ability to set any valid provider as the default provider for the DataRepository.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.LoadProviders">
            <summary>
             Configuration based provider loading, will load the providers on first call.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.CreateTransaction">
            <summary>
            Creates a new <c cref="T:BitAuto.Services.Dal.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.AddConnection(System.String,System.String)">
            <summary>
            Adds the specified connection string to the map of connection strings.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.Providers">
            <summary>
            Gets the provider collection.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.NetTiersSection">
            <summary>
            Gets a reference to the configured NetTiersServiceSection object.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.Configuration">
            <summary>
            Gets a reference to the application configuration object.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.ConnectionStrings">
            <summary>
            Gets a reference to the ConnectionStringSettings collection.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.Connections">
            <summary>
            Gets the dictionary of connection providers.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorResourceProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorResource"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorDataCategoryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorRoleProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorResourceAclProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SysLogProjectProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SysLogProject"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorResourceTypeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorDataValueRangeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.PersonalBaaInfoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.OperationLogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.OperationLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorRoleUserProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.CommunityUserProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.CommunityUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.BusiCodeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.BusiCode"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.OperationDetailProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.OperationDetail"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorWebsiteUrlProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.BusiCodeSchemaProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SsoWebsiteProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SysLogEnumTypeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SysLogExceptionInfoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SysLogImportantPageProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.AuthorDataAclProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SysLogNoticeReceiverProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SysLogProcessRecordProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.SysLogExceptionTimeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserAccountProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserAccount"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserApplicationProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserApplication"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserGenderValueProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserInfoBaseProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserInfoCommonProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserInfoCoreProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserStatusValueProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.UserWithCarValueProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.DataRepository.ConnectionProvider">
            <summary>
            Provides ability to switch connection string at runtime.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.ConnectionProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConnectionProvider class.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.ConnectionProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ConnectionProvider class.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.DataRepository.ConnectionProvider.LoadProviders">
            <summary>
            Instantiates the configured providers based on the supplied connection string.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.ConnectionProvider.Provider">
            <summary>
            Gets the provider.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.DataRepository.ConnectionProvider.Providers">
            <summary>
            Gets the provider collection.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorResourceFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorResourceQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResource"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorDataCategoryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataCategoryFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataCategoryFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataCategoryFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataCategoryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataCategoryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorDataCategoryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataCategoryParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataCategoryQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataCategoryQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataCategoryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataCategoryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataCategoryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorRoleFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorRoleQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorRoleParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorResourceAclFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceAclFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceAclFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceAclFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceAclFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceAclFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceAclFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorResourceAclQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceAclParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceAclParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceAcl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceAclParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorResourceAclParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceAclQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceAclQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceAclQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceAclQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceAclQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogProjectFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProjectFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogProjectFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProjectFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProjectFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogProjectQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SysLogProjectParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProject"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProjectQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogProjectQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProjectQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProjectQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProjectQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorResourceTypeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceTypeFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceTypeFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceTypeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceTypeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorResourceTypeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorResourceTypeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorResourceType"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceTypeQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorResourceTypeQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceTypeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorResourceTypeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorResourceTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorDataValueRangeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataValueRangeFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataValueRangeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataValueRangeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorDataValueRangeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataValueRange"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataValueRangeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataValueRangeQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataValueRangeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataValueRangeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataValueRangeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.PersonalBaaInfoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.PersonalBaaInfoFilters.#ctor">
            <summary>
            Initializes a new instance of the PersonalBaaInfoFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.PersonalBaaInfoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.PersonalBaaInfoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.PersonalBaaInfoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.PersonalBaaInfoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.PersonalBaaInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.PersonalBaaInfoQuery.#ctor">
            <summary>
            Initializes a new instance of the PersonalBaaInfoQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.PersonalBaaInfoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.PersonalBaaInfoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PersonalBaaInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.OperationLogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationLog"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationLogFilters.#ctor">
            <summary>
            Initializes a new instance of the OperationLogFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationLogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationLogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.OperationLogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.OperationLogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationLog"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationLogQuery.#ctor">
            <summary>
            Initializes a new instance of the OperationLogQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationLogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationLogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorRoleUserFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleUserFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleUserFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleUserFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleUserFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorRoleUserQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorRoleUserParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorRoleUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleUserQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorRoleUserQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleUserQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorRoleUserQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorRoleUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.CommunityUserFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.CommunityUserFilters.#ctor">
            <summary>
            Initializes a new instance of the CommunityUserFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.CommunityUserFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.CommunityUserFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.CommunityUserQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.CommunityUserParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.CommunityUser"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.CommunityUserQuery.#ctor">
            <summary>
            Initializes a new instance of the CommunityUserQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.CommunityUserQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.CommunityUserQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CommunityUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.BusiCodeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCode"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeFilters.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.BusiCodeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.BusiCodeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCode"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeQuery.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.OperationDetailFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationDetailFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the OperationDetailFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationDetailFilters.#ctor">
            <summary>
            Initializes a new instance of the OperationDetailFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationDetailFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationDetailFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.OperationDetailQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.OperationDetailParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationDetailParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.OperationDetail"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the OperationDetailParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.OperationDetailParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationDetailQuery.#ctor">
            <summary>
            Initializes a new instance of the OperationDetailQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationDetailQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.OperationDetailQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the OperationDetailQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorWebsiteUrlFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorWebsiteUrlFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorWebsiteUrlFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorWebsiteUrlFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorWebsiteUrlQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorWebsiteUrlQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorWebsiteUrlQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorWebsiteUrlQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorWebsiteUrlQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.BusiCodeSchemaFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeSchemaFilters.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeSchemaFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeSchemaFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeSchemaFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.BusiCodeSchemaQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.BusiCodeSchemaParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.BusiCodeSchema"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeSchemaQuery.#ctor">
            <summary>
            Initializes a new instance of the BusiCodeSchemaQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeSchemaQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.BusiCodeSchemaQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BusiCodeSchemaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SsoWebsiteFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SsoWebsiteFilters.#ctor">
            <summary>
            Initializes a new instance of the SsoWebsiteFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SsoWebsiteFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SsoWebsiteFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SsoWebsiteQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SsoWebsiteParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SsoWebsite"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SsoWebsiteQuery.#ctor">
            <summary>
            Initializes a new instance of the SsoWebsiteQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SsoWebsiteQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SsoWebsiteQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SsoWebsiteQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogEnumTypeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogEnumTypeFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogEnumTypeFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogEnumTypeFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogEnumTypeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogEnumTypeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogEnumTypeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogEnumType"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogEnumTypeParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogEnumTypeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogEnumTypeQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogEnumTypeQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogEnumTypeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogEnumTypeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogEnumTypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogExceptionInfoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionInfoFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionInfoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionInfoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogExceptionInfoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionInfo"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionInfoQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionInfoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionInfoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogImportantPageFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogImportantPageFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogImportantPageFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogImportantPageFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogImportantPageFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogImportantPageQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SysLogImportantPageParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogImportantPage"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogImportantPageQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogImportantPageQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogImportantPageQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogImportantPageQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogImportantPageQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorDataAclFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataAclFilters.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataAclFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataAclFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataAclFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.AuthorDataAclQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataAclParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.AuthorDataAcl"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataAclQuery.#ctor">
            <summary>
            Initializes a new instance of the AuthorDataAclQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataAclQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.AuthorDataAclQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the AuthorDataAclQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogNoticeReceiverFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogNoticeReceiverFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogNoticeReceiverFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogNoticeReceiverFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogNoticeReceiverQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SysLogNoticeReceiverParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogNoticeReceiver"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogNoticeReceiverQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogNoticeReceiverQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogNoticeReceiverQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogNoticeReceiverQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogProcessRecordFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProcessRecordFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogProcessRecordFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProcessRecordFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProcessRecordFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogProcessRecordQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SysLogProcessRecordParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogProcessRecord"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProcessRecordQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogProcessRecordQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProcessRecordQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogProcessRecordQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogProcessRecordQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogExceptionTimeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionTimeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionTimeFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionTimeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionTimeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.SysLogExceptionTimeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.SysLogExceptionTimeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionTimeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionTimeQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionTimeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SysLogExceptionTimeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogExceptionTimeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserAccountFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserAccount"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserAccountFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserAccount"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserAccountFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserAccountFilters.#ctor">
            <summary>
            Initializes a new instance of the UserAccountFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserAccountFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserAccountFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserAccountQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserAccountParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserAccount"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserAccountParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserAccount"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserAccountParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserAccountParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserAccountQuery.#ctor">
            <summary>
            Initializes a new instance of the UserAccountQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserAccountQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserAccountQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserAccountQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserApplicationFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserApplication"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserApplicationFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserApplication"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserApplicationFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserApplicationFilters.#ctor">
            <summary>
            Initializes a new instance of the UserApplicationFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserApplicationFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserApplicationFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserApplicationQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserApplicationParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserApplication"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserApplicationParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserApplication"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserApplicationParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserApplicationParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserApplicationQuery.#ctor">
            <summary>
            Initializes a new instance of the UserApplicationQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserApplicationQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserApplicationQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserApplicationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserGenderValueFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserGenderValueFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserGenderValueFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserGenderValueFilters.#ctor">
            <summary>
            Initializes a new instance of the UserGenderValueFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserGenderValueFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserGenderValueFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserGenderValueQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserGenderValueParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserGenderValueParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserGenderValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserGenderValueParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserGenderValueParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserGenderValueQuery.#ctor">
            <summary>
            Initializes a new instance of the UserGenderValueQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserGenderValueQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserGenderValueQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGenderValueQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserInfoBaseFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoBaseFilters.#ctor">
            <summary>
            Initializes a new instance of the UserInfoBaseFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoBaseFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoBaseFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserInfoBaseQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserInfoBaseParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoBase"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoBaseQuery.#ctor">
            <summary>
            Initializes a new instance of the UserInfoBaseQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoBaseQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoBaseQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoBaseQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserInfoCommonFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCommonFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCommonFilterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCommonFilters.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCommonFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCommonFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCommonFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserInfoCommonQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserInfoCommonParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCommonParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCommon"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCommonParameterBuilder class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.UserInfoCommonParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCommonQuery.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCommonQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCommonQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCommonQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCommonQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserInfoCoreFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCoreFilters.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCoreFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCoreFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCoreFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserInfoCoreQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserInfoCoreParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserInfoCore"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCoreQuery.#ctor">
            <summary>
            Initializes a new instance of the UserInfoCoreQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCoreQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserInfoCoreQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoCoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserStatusValueFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserStatusValueFilters.#ctor">
            <summary>
            Initializes a new instance of the UserStatusValueFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserStatusValueFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserStatusValueFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserStatusValueQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserStatusValueParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserStatusValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserStatusValueQuery.#ctor">
            <summary>
            Initializes a new instance of the UserStatusValueQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserStatusValueQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserStatusValueQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserStatusValueQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserWithCarValueFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserWithCarValueFilters.#ctor">
            <summary>
            Initializes a new instance of the UserWithCarValueFilters class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserWithCarValueFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserWithCarValueFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.UserWithCarValueQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:BitAuto.Services.Dal.Bases.UserWithCarValueParameterBuilder"/> class
            that is used exclusively with a <see cref="T:BitAuto.Services.Entities.UserWithCarValue"/> object.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserWithCarValueQuery.#ctor">
            <summary>
            Initializes a new instance of the UserWithCarValueQuery class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.UserWithCarValueQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.UserWithCarValueQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserWithCarValueQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionTimeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="exceptionTimeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionTimeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionInfoId(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ExceptionTime_FK key.
            	ExceptionInfo_ExceptionTime_FK Description: 
            </summary>
            <param name="exceptionInfoId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionTime objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ExceptionTime_FK key.
            	ExceptionInfo_ExceptionTime_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionTime objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ExceptionTime_FK key.
            	ExceptionInfo_ExceptionTime_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionTime objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionInfoId(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ExceptionTime_FK key.
            	exceptionInfoExceptionTimeFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="exceptionInfoId"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionTime objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionInfoId(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ExceptionTime_FK key.
            	exceptionInfoExceptionTimeFk Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="exceptionInfoId"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionTime objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionInfoId(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionInfo_ExceptionTime_FK key.
            	ExceptionInfo_ExceptionTime_FK Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionInfoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.SysLogExceptionTime objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionTimeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionTimeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key ExceptionTime_PK index.
            </summary>
            <param name="exceptionTimeId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionTimeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionTime_PK index.
            </summary>
            <param name="exceptionTimeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionTimeId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionTime_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionTimeId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionTimeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the ExceptionTime_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionTimeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionTimeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionTime_PK index.
            </summary>
            <param name="exceptionTimeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByExceptionTimeId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the ExceptionTime_PK index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="exceptionTimeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByGenerateTime(System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_SysLogExceptionTime_GenerateTime index.
            </summary>
            <param name="generateTime"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByGenerateTime(System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionTime_GenerateTime index.
            </summary>
            <param name="generateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByGenerateTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime})">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionTime_GenerateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="generateTime"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByGenerateTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionTime_GenerateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="generateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByGenerateTime(System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionTime_GenerateTime index.
            </summary>
            <param name="generateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.GetByGenerateTime(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_SysLogExceptionTime_GenerateTime index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="generateTime"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.SysLogExceptionTime},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;SysLogExceptionTime&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.SysLogExceptionTime)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.SysLogExceptionTime)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionTime,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.SysLogExceptionTime"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogExceptionTime Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.SysLogExceptionTime,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.SysLogExceptionTime object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.SysLogExceptionTime instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.SysLogExceptionTime Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionTimeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SysLogExceptionTime</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.SysLogExceptionTimeChildEntityTypes.SysLogExceptionInfo">
            <summary>
             Composite Property for <c>SysLogExceptionInfo</c> at ExceptionInfoIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorWebsiteUrlKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorWebsiteUrlId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorWebsiteUrlId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorWebsiteUrlKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorWebsiteUrlId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorWebsiteUrl index.
            </summary>
            <param name="authorWebsiteUrlId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorWebsiteUrlId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorWebsiteUrl index.
            </summary>
            <param name="authorWebsiteUrlId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorWebsiteUrlId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorWebsiteUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorWebsiteUrlId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorWebsiteUrlId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorWebsiteUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorWebsiteUrlId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorWebsiteUrlId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorWebsiteUrl index.
            </summary>
            <param name="authorWebsiteUrlId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorWebsiteUrlId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorWebsiteUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorWebsiteUrlId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByWebsiteUrl(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_AuthorWebsiteUrl_WebsiteUrl index.
            </summary>
            <param name="websiteUrl"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByWebsiteUrl(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorWebsiteUrl_WebsiteUrl index.
            </summary>
            <param name="websiteUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByWebsiteUrl(BitAuto.Services.Dal.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorWebsiteUrl_WebsiteUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="websiteUrl"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByWebsiteUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorWebsiteUrl_WebsiteUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="websiteUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByWebsiteUrl(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorWebsiteUrl_WebsiteUrl index.
            </summary>
            <param name="websiteUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByWebsiteUrl(BitAuto.Services.Dal.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorWebsiteUrl_WebsiteUrl index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="websiteUrl"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorResourceId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key IX_AuthorWebsiteUrl_AuthorResourceId index.
            </summary>
            <param name="authorResourceId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorResourceId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorWebsiteUrl_AuthorResourceId index.
            </summary>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorResourceId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorWebsiteUrl_AuthorResourceId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorResourceId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorWebsiteUrl_AuthorResourceId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorResourceId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorWebsiteUrl_AuthorResourceId index.
            </summary>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.GetByAuthorResourceId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorWebsiteUrl_AuthorResourceId index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorResourceId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorWebsiteUrl},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorWebsiteUrl&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorWebsiteUrl)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorWebsiteUrl)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorWebsiteUrl,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorWebsiteUrl"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorWebsiteUrl Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorWebsiteUrl,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorWebsiteUrl object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorWebsiteUrl instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorWebsiteUrl Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorWebsiteUrl</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlChildEntityTypes.AuthorResource">
            <summary>
             Composite Property for <c>AuthorResource</c> at AuthorResourceIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.OperationDetailChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.OperationDetail</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.OperationDetailChildEntityTypes.OperationLog">
            <summary>
             Composite Property for <c>OperationLog</c> at OptIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.StringTokenizer">
            <summary>
            Implements a StringTokenizer class for splitting a string
            into substrings using a set of delimiters.
            </summary>
            <remarks>
            C# version of the java.util.StringTokenizer class.
            Basicly it's a wrapper class around the <c>String.Split</c> method.<pare/>
            It implements all of it's Java equivalent methods apart from those only needed by the Enumeration interface.
            All implemented Java-compilant methods have their C# equivalents in properties. They however differ in names
            since Java uses the (Hungarian-like) notation <c>runMe()</c> while C# uses Camel-cased <c>RunMe()</c> and thus
            Java's <c>nextToken()</c> method is just an alias of the <c>NextToken</c> property.
            </remarks>
        </member>
        <member name="F:BitAuto.Services.Dal.StringTokenizer.DefaultDelimiters">
            <summary>
            String conatining the default set of delimiters which are <c>" \t\n\r\f"</c>:
            the space character, the tab character, the newline character, the carriage-return character, and the form-feed character.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.#ctor(System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the <see cref="F:DefaultDelimiters">default delimiters</see>.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters and optionally returning them as tokens.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <see cref="!:String.Empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <paramref name="empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <param name="empty">The string to be returned as an empty token.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.Reset">
            <summary>
            Resets the current position index so that the tokens can be extracted again.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.StringTokenizer.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:BitAuto.Services.Dal.StringTokenizer.HasMoreTokens">
            <summary>
            Tests if there are more tokens available from this tokenizer's string.
            If this method returns <c>true</c>, then a subsequent
            use of the <see cref="P:NextToken"/> property will successfully return a token.
            </summary>
            <value>
            	<c>true</c> if more tokens are available; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:BitAuto.Services.Dal.StringTokenizer.NextToken">
            <summary>
            Gets the next token.
            </summary>
            <value>The next token.</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist.
            Usually caused by not checking if the <see cref="P:HasMoreTokens"/> property returns <c>true</c> before trying to get the next token.</exception>
        </member>
        <member name="P:BitAuto.Services.Dal.StringTokenizer.CountTokens">
            <summary>
            Counts the <see cref="!:remaining"/> tokens - the number of times the
            <see cref="P:NextToken"/> property can be used before it throws an exception.
            </summary>
            <value>The number of remaining tokens.</value>
            <seealso cref="P:Count"/>
        </member>
        <member name="P:BitAuto.Services.Dal.StringTokenizer.Count">
            <summary>
            Gets the total number of tokens extracted.
            </summary>
            <remarks>
            <see cref="!:Equivalent not available in Java!"/>
            This property returns the total number of extracted tokens,
            contrary to <see cref="P:CountTokens"/>.
            </remarks>
            <value>The number of tokens extracted.</value>
            <seealso cref="P:StringTokenizer.CountTokens"/>
        </member>
        <member name="P:BitAuto.Services.Dal.StringTokenizer.Item(System.Int32)">
            <summary>
            Gets the token with the specified index from the tokenizer without moving the current position index.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
            <param name="index">The index of the token to get.</param>
            <value>The token with the given index</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist, that is when <see cref="!:index"/> is equal or greater then <see cref="!:Count"/> or <see cref="!:index"/> is negative.</exception>
        </member>
        <member name="P:BitAuto.Services.Dal.StringTokenizer.EmptyString">
            <summary>
            Gets the currently set string for empty tokens.
            </summary>
            <remarks>Default is <c>System.String.Empty</c></remarks>
            <value>The empty token string.</value>
        </member>
        <member name="T:BitAuto.Services.Dal.SqlUtil">
            <summary>
            Provides utility methods for generating SQL expressions.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.AND">
            <summary>
            SQL AND keyword.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.OR">
            <summary>
            SQL OR keyword.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.ASC">
            <summary>
            SQL ASC keyword.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.DESC">
            <summary>
            SQL DESC keyword.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.NULL">
            <summary>
            SQL NULL keyword.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.TOKEN">
            <summary>
            Used to represent quoted search terms.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.QUOTE">
            <summary>
            Delimiter for quoted search terms.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.STAR">
            <summary>
            Used as wildcard character within search text.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.WILD">
            <summary>
            SQL wildcard character.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.LEFT">
            <summary>
            SQL grouping open character.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.RIGHT">
            <summary>
            SQL grouping close character.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.COMMA">
            <summary>
            Delimiter for optional search terms.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlUtil.PAGE_INDEX">
            <summary>
            PageIndex Temp Table
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Equals(System.String,System.String)">
            <summary>
            Creates an <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates an <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Equals(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates an <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Equals(System.String)">
            <summary>
            Encodes the value for a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Contains(System.String,System.String)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Contains(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Contains(System.String)">
            <summary>
            Encodes the value for a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.StartsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.StartsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.StartsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.EndsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.EndsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.EndsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Like(System.String,System.String)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Like(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Like(System.String)">
            <summary>
            Encodes the value for a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.IsNull(System.String)">
            <summary>
            Creates an IS NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.IsNotNull(System.String)">
            <summary>
            Creates an IS NOT NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Encode(System.String)">
            <summary>
            Encodes the specified value for use in SQL expressions.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Encode(System.String,System.Boolean)">
            <summary>
            Encodes the specified value for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="value"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Encode(System.String[])">
            <summary>
            Encodes the specified values for use in SQL expressions.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.Encode(System.String[],System.Boolean)">
            <summary>
            Encodes the specified values for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="values"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.GetLikeFormat(System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.GetLikeFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.GetEqualFormat(System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlUtil.GetEqualFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="T:BitAuto.Services.Dal.SqlComparisonType">
            <summary>
            Enumeration of SQL expression comparison types.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlComparisonType.Equals">
            <summary>
            Represents = value.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlComparisonType.StartsWith">
            <summary>
            Represents LIKE value%.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlComparisonType.EndsWith">
            <summary>
            Represents LIKE %value.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlComparisonType.Contains">
            <summary>
            Represents LIKE %value%.
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.SqlComparisonType.Like">
            <summary>
            Represents LIKE value.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.UserInfoCoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserGenderValueChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserGenderValue</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBase.StatMailBodyByProjectID(System.Int32,System.String,System.Collections.ArrayList@,System.String)">
            <summary>
            根据指定projectID和lastSendMailTime，来统计发送邮件的内容
            </summary>
            <param name="projectID">项目ID</param>
            <param name="lastSendMailTime">当前系统时间</param>
            <param name="lastSendMailExceptionIDs">满足条件的异常ID</param>
            <returns>返回邮件内容</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBase.ExceptionViewQuery(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String)">
            <summary>
            根据条件返回一条SQL 语句
            </summary>
            <param name="starttime">开始时间</param>
            <param name="endtime">结束时间</param>
            <param name="siteName">网站名</param>
            <param name="projectName">项目名称</param>
            <param name="siteType">类型</param>
            <param name="siteUrl">URL地址</param>
            <param name="siteMessage">消息</param>
            <param name="state">状态</param>
            <returns>SQL语句</returns>
            
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBase.ExceptionDetail(System.String,System.String,System.Int32)">
            <summary>
            根据条件返回一条SQL语句 
            </summary>
            <param name="starttime">开始时间</param>
            <param name="endtime">结束时间</param>
            <param name="exid">异常ID</param>
            <returns>SQL语句</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionInfoProviderBase.StatMailBodyByExceptionInfoID(BitAuto.Services.Entities.SysLogExceptionInfo,System.String,System.String)">
            <summary>
            根据指定SysLogExceptionInfo实体和系统名称，来统计发送邮件的内容
            </summary>
            <param name="sleiModel">SysLogExceptionInfo实体</param>
            <param name="sysName">系统名称</param>
            <returns>统计发送邮件的内容</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataValueRangeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorDataValueRange</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorDataValueRangeChildEntityTypes.AuthorDataAcl">
            <summary>
             Composite Property for <c>AuthorDataAcl</c> at AuthorDataAclIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataCategoryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorDataCategoryId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetBySysBelongTo(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataCategory_AuthorResource key.
            	FK_AuthorDataCategory_AuthorResource Description: 
            </summary>
            <param name="sysBelongTo"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataCategory objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetBySysBelongTo(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataCategory_AuthorResource key.
            	FK_AuthorDataCategory_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataCategory objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetBySysBelongTo(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataCategory_AuthorResource key.
            	FK_AuthorDataCategory_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataCategory objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetBySysBelongTo(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataCategory_AuthorResource key.
            	fkAuthorDataCategoryAuthorResource Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="sysBelongTo"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataCategory objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetBySysBelongTo(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataCategory_AuthorResource key.
            	fkAuthorDataCategoryAuthorResource Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="sysBelongTo"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataCategory objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetBySysBelongTo(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorDataCategory_AuthorResource key.
            	FK_AuthorDataCategory_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorDataCategory objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataCategoryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetByAuthorDataCategoryId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorDataCategory index.
            </summary>
            <param name="authorDataCategoryId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetByAuthorDataCategoryId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataCategory index.
            </summary>
            <param name="authorDataCategoryId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetByAuthorDataCategoryId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataCategory index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetByAuthorDataCategoryId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataCategory index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetByAuthorDataCategoryId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataCategory index.
            </summary>
            <param name="authorDataCategoryId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.GetByAuthorDataCategoryId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorDataCategory index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorDataCategoryId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorDataCategory},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorDataCategory&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorDataCategory)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorDataCategory)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataCategory,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorDataCategory"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorDataCategory Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorDataCategoryProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorDataCategory,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorDataCategory object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorDataCategory instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorDataCategory Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.TransactionManager">
            <summary>
            TransactionManager is utility class that decorates a <see cref="T:System.Data.IDbTransaction"/> instance.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:BitAuto.Services.Dal.TransactionManager"/> class.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.#ctor(System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:BitAuto.Services.Dal.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.#ctor(System.String,System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:BitAuto.Services.Dal.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="providerInvariantName">Name of the provider invariant.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.BeginTransaction">
            <summary>
            	Begins a transaction.
            </summary>
            <remarks>The default <see cref="T:System.Data.IsolationLevel"/> mode is ReadCommitted</remarks>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            	Begins a transaction.
            </summary>
            <param name="isolationLevel">The <see cref="T:System.Data.IsolationLevel"/> level of the transaction</param>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
            <exception cref="T:System.Data.DataException"></exception>
            <exception cref="T:System.Data.Common.DbException"></exception>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.Commit">
            <summary>
            	Commit the transaction to the datasource.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.Rollback">
            <summary>
            Rollback the transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.TransactionManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.TransactionManager.ConnectionString">
            <summary>
            	Gets or sets the configuration key for database service.
            </summary>
            <remark>Do not change during a transaction.</remark>
            <exception cref="T:System.InvalidOperationException">
            If an attempt to set when the connection is currently open.
            </exception>
        </member>
        <member name="P:BitAuto.Services.Dal.TransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:BitAuto.Services.Dal.TransactionManager.Database">
            <summary>
            Gets the <see cref="P:BitAuto.Services.Dal.TransactionManager.Database"/> instance.
            </summary>
            <value></value>
        </member>
        <member name="P:BitAuto.Services.Dal.TransactionManager.TransactionObject">
            <summary>
            Gets the underlying <see cref="T:System.Data.Common.DbTransaction"/> object.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.TransactionManager.IsOpen">
            <summary>
            Gets a value that indicates if a transaction is currently open and operating. 
            </summary>
            <value>Return true if a transaction session is currently open and operating; otherwise false.</value>
        </member>
        <member name="T:BitAuto.Services.Dal.SqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a SQL WHERE clause.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.#ctor(System.String,BitAuto.Services.Dal.SqlComparisonType)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.#ctor(System.String,BitAuto.Services.Dal.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.AppendOr">
            <summary>
            Appends "OR" to the SQL statement.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.AppendAnd">
            <summary>
            Appends "AND" to the SQL statement.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.AppendSpace">
            <summary>
            Appends a space to the SQL statement.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.OpenGrouping">
            <summary>
            Appends a left parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.CloseGrouping">
            <summary>
            Appends a right parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the SQL statement.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.WrapWithSQL(System.String,System.String,System.Boolean)">
            <summary>
            Converts the search text into a valid search expression.
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.SqlExpressionParser.Parse(System.String)">
            <summary>
            Parses the specified value into separate search terms.
            </summary>
            <param name="value">The search text.</param>
            <returns>Returns a parsed search phrase.</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.ParameterizedSqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a parameterized SQL WHERE clause.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.#ctor(System.String,BitAuto.Services.Dal.SqlComparisonType)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.#ctor(System.String,BitAuto.Services.Dal.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:BitAuto.Services.Dal.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="F:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="P:BitAuto.Services.Dal.ParameterizedSqlExpressionParser.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserInfoCommonChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserInfoCommon</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserAccountChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserAccount</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.UserAccountChildEntityTypes.UserInfoBase">
            <summary>
             Entity <c>UserInfoBase</c> as OneToOne for UserInfoBase
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.UserAccountChildEntityTypes.UserInfoCore">
            <summary>
             Entity <c>UserInfoCore</c> as OneToOne for UserInfoCore
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBase">
            <summary>
            根据条件SQL语句
            </summary>
            <param name="starttime">开始时间</param>
            <param name="endtime">结束时间</param>
            <param name="exid">异常ID</param>
            <returns>SQL语句</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBase.GetDate(System.String,System.String)">
            <summary>
            根据时间段返回相距的天数
            </summary>
            <param name="starttime">开始时间</param>
            <param name="endtime">结束时间</param>
            <returns>天数</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBase.ExceptionTimeDataList(System.String,System.String,System.Int32)">
            <summary>
            根据条件返回数据集
            </summary>
            <param name="starttime">开始时间</param>
            <param name="endtime">结束时间</param>
            <param name="exid">异常ID</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.SysLogExceptionTimeProviderBase.ExceptionTimeHour(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="starttime"></param>
            <param name="endtime"></param>
            <param name="exid"></param>
            <returns></returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.SsoWebsiteProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorRoleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRoleKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="authorRoleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.Delete(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongTo(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorRole_AuthorResource key.
            	FK_AuthorRole_AuthorResource Description: 
            </summary>
            <param name="sysBelongTo"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorRole objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongTo(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorRole_AuthorResource key.
            	FK_AuthorRole_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorRole objects.</returns>
            <remarks></remarks>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongTo(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorRole_AuthorResource key.
            	FK_AuthorRole_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
             <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorRole objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongTo(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorRole_AuthorResource key.
            	fkAuthorRoleAuthorResource Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="sysBelongTo"></param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorRole objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongTo(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorRole_AuthorResource key.
            	fkAuthorRoleAuthorResource Description: 
            </summary>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="sysBelongTo"></param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorRole objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongTo(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the FK_AuthorRole_AuthorResource key.
            	FK_AuthorRole_AuthorResource Description: 
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns a typed collection of BitAuto.Services.Entities.AuthorRole objects.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.Get(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRoleKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:BitAuto.Services.Dal.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByAuthorRoleId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_AuthorRole index.
            </summary>
            <param name="authorRoleId"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRole index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRole index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRole index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByAuthorRoleId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRole index.
            </summary>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByAuthorRoleId(BitAuto.Services.Dal.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_AuthorRole index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="authorRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongToRoleName(System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key UQ_AuthorRole_SystemBelongTo_RoleName index.
            </summary>
            <param name="sysBelongTo"></param>
            <param name="roleName"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongToRoleName(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRole_SystemBelongTo_RoleName index.
            </summary>
            <param name="sysBelongTo"></param>
            <param name="roleName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongToRoleName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRole_SystemBelongTo_RoleName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <param name="roleName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongToRoleName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRole_SystemBelongTo_RoleName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <param name="roleName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongToRoleName(System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRole_SystemBelongTo_RoleName index.
            </summary>
            <param name="sysBelongTo"></param>
            <param name="roleName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetBySysBelongToRoleName(BitAuto.Services.Dal.TransactionManager,System.Int32,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the UQ_AuthorRole_SystemBelongTo_RoleName index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="sysBelongTo"></param>
            <param name="roleName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByRoleMaster(System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the primary key IX_AuthorRole_RoleMaster index.
            </summary>
            <param name="roleMaster"></param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByRoleMaster(System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRole_RoleMaster index.
            </summary>
            <param name="roleMaster"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByRoleMaster(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32})">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRole_RoleMaster index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="roleMaster"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByRoleMaster(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRole_RoleMaster index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="roleMaster"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByRoleMaster(System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRole_RoleMaster index.
            </summary>
            <param name="roleMaster"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.GetByRoleMaster(BitAuto.Services.Dal.TransactionManager,System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the IX_AuthorRole_RoleMaster index.
            </summary>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="roleMaster"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:BitAuto.Services.Entities.TList`1"/> class.</returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.Fill(System.Data.IDataReader,BitAuto.Services.Entities.TList{BitAuto.Services.Entities.AuthorRole},System.Int32,System.Int32)">
            <summary>
            Fill a BitAuto.Services.Entities.TList&lt;AuthorRole&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:BitAuto.Services.Entities.TList`1"/></returns>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.RefreshEntity(System.Data.IDataReader,BitAuto.Services.Entities.AuthorRole)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object to refresh.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.RefreshEntity(System.Data.DataSet,BitAuto.Services.Entities.AuthorRole)">
            <summary>
            Refreshes the <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object.</param>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.DeepLoad(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRole,System.Boolean,BitAuto.Services.Dal.DeepLoadType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:BitAuto.Services.Entities.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:BitAuto.Services.Dal.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:BitAuto.Services.Dal.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:BitAuto.Services.Entities.AuthorRole"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorRole Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBaseCore.DeepSave(BitAuto.Services.Dal.TransactionManager,BitAuto.Services.Entities.AuthorRole,BitAuto.Services.Dal.DeepSaveType,System.Type[],BitAuto.Services.Dal.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the BitAuto.Services.Entities.AuthorRole object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">BitAuto.Services.Entities.AuthorRole instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">BitAuto.Services.Entities.AuthorRole Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorRole</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorRoleChildEntityTypes.AuthorResource">
            <summary>
             Composite Property for <c>AuthorResource</c> at SysBelongToSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorRoleChildEntityTypes.AuthorRoleUserCollection">
            <summary>
             Collection of <c>AuthorRole</c> as OneToMany for AuthorRoleUserCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorRoleChildEntityTypes.AuthorResourceAclCollection">
            <summary>
             Collection of <c>AuthorRole</c> as OneToMany for AuthorResourceAclCollection
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorRoleChildEntityTypes.AuthorDataAclCollection">
            <summary>
             Collection of <c>AuthorRole</c> as OneToMany for AuthorDataAclCollection
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorRoleProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorRoleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorRoleProviderBase.QueryRolesInSys(System.Int32,System.String)">
            <summary>
            根据角色名称模糊查询一个系统的角色
            </summary>
            <param name="sysId"></param>
            <param name="bluredName">模糊的角色名称</param>
            <returns></returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.UserApplicationChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.UserApplication</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.SysLogEnumTypeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.SysLogEnumType</c>
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBase">
            <summary>
             This class is the base class for any <see cref="T:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:BitAuto.Services.Dal.Bases.AuthorWebsiteUrlProviderBase.FindByUrl(System.String)">
            <summary>
            查找一个Url所属的网站
            </summary>
            <param name="url">完整的Url链接，如：http://www.bitauto.com/abc.aspx</param>
            <returns>返回站点对象</returns>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorResourceAclChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorResourceAcl</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceAclChildEntityTypes.AuthorResource">
            <summary>
             Composite Property for <c>AuthorResource</c> at ResourceCodeSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorResourceAclChildEntityTypes.AuthorRole">
            <summary>
             Composite Property for <c>AuthorRole</c> at AuthorRoleIdSource
            </summary>
        </member>
        <member name="T:BitAuto.Services.Dal.Bases.AuthorDataCategoryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>BitAuto.Services.Entities.AuthorDataCategory</c>
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorDataCategoryChildEntityTypes.AuthorResource">
            <summary>
             Composite Property for <c>AuthorResource</c> at SysBelongToSource
            </summary>
        </member>
        <member name="F:BitAuto.Services.Dal.Bases.AuthorDataCategoryChildEntityTypes.AuthorDataAclCollection">
            <summary>
             Collection of <c>AuthorDataCategory</c> as OneToMany for AuthorDataAclCollection
            </summary>
        </member>
    </members>
</doc>
